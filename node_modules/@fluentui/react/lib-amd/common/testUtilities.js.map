{"version":3,"file":"testUtilities.js","sourceRoot":"../src/","sources":["common/testUtilities.ts"],"names":[],"mappings":";;;;IAIA,gCAAgC;IAEhC,gGAAgG;IAEhG,SAAgB,aAAa,CAAC,SAAgC,EAAE,QAAgB;QAC9E,OAAO,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAFD,sCAEC;IACD,SAAgB,gBAAgB,CAAC,SAAgC,EAAE,QAAgB;QACjF,OAAO,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAFD,4CAEC;IACD,SAAgB,WAAW,CAAC,SAAsB,EAAE,QAAgB;QAClE,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAC5D,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAnC,CAAmC,CAC3B,CAAC;IACrB,CAAC;IAJD,kCAIC;IAED,SAAgB,aAAa,CAAC,SAAsB,EAAE,SAAiB,EAAE,CAAS;QAChF,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;IAFD,sCAEC;IAED,SAAgB,WAAW,CAAC,SAAsB,EAAE,QAAgB;QAClE,aAAa,CAAC,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IAFD,kCAEC;IAED,oEAAoE;IACpE,SAAgB,KAAK,CAAC,WAAmB;QACvC,OAAO,IAAI,OAAO,CAAO,UAAA,OAAO,IAAI,OAAA,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,EAAhC,CAAgC,CAAC,CAAC;IACxE,CAAC;IAFD,sBAEC;IAED,SAAgB,kBAAkB,CAAC,OAAgC;QACjE,IAAM,SAAS,GAAG,IAAA,cAAM,EAAC,OAAO,CAAC,CAAC;QAClC,IAAM,WAAW,GAAG,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC;QACnD,OAAO,WAA0B,CAAC;IACpC,CAAC;IAJD,gDAIC;IAED,SAAgB,SAAS,CAAC,WAAwB;QAAxB,4BAAA,EAAA,gBAAwB;QAChD,IAAM,MAAM,GAAgB,EAAE,KAAK,EAAE,WAAW,EAAsB,CAAC;QACvE,OAAO,EAAE,MAAM,QAAA,EAAE,CAAC;IACpB,CAAC;IAHD,8BAGC;IAED;;;OAGG;IACH,SAAgB,aAAa;QAC3B,OAAO,IAAI,OAAO,CAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtE,CAAC;IAFD,sCAEC;IAED;;OAEG;IACH,SAAgB,qBAAqB,CAAC,OAAoB;QACxD,IAAI,EAAE,GAAuB,OAAO,CAAC;QACrC,OAAO,EAAE,EAAE,CAAC;YACV,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxD,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC;QACxB,CAAC;IACH,CAAC;IAND,sDAMC","sourcesContent":["import * as React from 'react';\nimport type * as ReactTestUtils from 'react-dom/test-utils';\nimport { render } from '@testing-library/react';\n\n// v2 - avoiding usage of enzyme\n\n// Helper function to find all elements with a specific class name that are not React components\n\nexport function getBySelector(container: HTMLElement | Element, selector: string) {\n  return container.querySelector(selector);\n}\nexport function getByAllSelector(container: HTMLElement | Element, selector: string) {\n  return container.querySelectorAll(selector);\n}\nexport function findNodesV2(container: HTMLElement, selector: string): HTMLElement[] {\n  return Array.from(container.querySelectorAll(selector)).filter(\n    node => node.nodeType === Node.ELEMENT_NODE,\n  ) as HTMLElement[];\n}\n\nexport function expectNodesV2(container: HTMLElement, className: string, n: number): void {\n  expect(findNodesV2(container, className).length).toEqual(n);\n}\n\nexport function expectOneV2(container: HTMLElement, selector: string): void {\n  expectNodesV2(container, selector, 1);\n}\n\n/** @deprecated Use fake timers and `jest.runAllTimers()` instead */\nexport function delay(millisecond: number): Promise<void> {\n  return new Promise<void>(resolve => setTimeout(resolve, millisecond));\n}\n\nexport function renderIntoDocument(element: React.ReactElement<any>): HTMLElement {\n  const component = render(element);\n  const renderedDOM = component.container.firstChild;\n  return renderedDOM as HTMLElement;\n}\n\nexport function mockEvent(targetValue: string = ''): ReactTestUtils.SyntheticEventData {\n  const target: EventTarget = { value: targetValue } as HTMLInputElement;\n  return { target };\n}\n\n/**\n * Hack for forcing Jest to run pending promises\n * https://github.com/facebook/jest/issues/2157#issuecomment-897935688\n */\nexport function flushPromises() {\n  return new Promise<void>(jest.requireActual('timers').setImmediate);\n}\n\n/**\n * Verify that the given element and its parents do NOT have `aria-hidden` set.\n */\nexport function expectNoHiddenParents(element: HTMLElement) {\n  let el: HTMLElement | null = element;\n  while (el) {\n    expect(el.getAttribute('aria-hidden')).not.toBe('true');\n    el = el.parentElement;\n  }\n}\n"]}