{"version":3,"sources":["../src/utils/useChildElement.ts"],"sourcesContent":["import * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-utilities';\n\nconst IS_REACT_19 = React.version.startsWith('19.');\nconst CHILD_ERROR_MESSAGE = [\n  '@fluentui/react-motion: Invalid child element.',\n  '\\n',\n  'Motion factories require a single child element to be passed. ',\n  'That element element should support ref forwarding i.e. it should be either an intrinsic element (e.g. div) or a component that uses React.forwardRef().',\n].join('');\n\n/**\n * A backwards-compatible way to get the ref from a React element without console errors.\n */\nfunction getRefFromReactElement<T>(element: React.ReactElement): React.Ref<T> | undefined {\n  if (IS_REACT_19) {\n    return element.props.ref;\n  }\n\n  return (element as React.ReactElement & { ref: React.Ref<T> | undefined }).ref;\n}\n\n/**\n * Validates the child and returns a cloned child element with a ref.\n *\n * Throws an error if the child is not a valid React element, similar to \"React.Children.only\".\n * Logs a warning in development mode if the ref is not set as the component remains functional.\n */\nexport function useChildElement(\n  children: React.ReactElement,\n  mounted: boolean = true,\n): [React.ReactElement, React.RefObject<HTMLElement>] {\n  const childRef = React.useRef<HTMLElement>(null);\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (mounted && !childRef.current) {\n        // eslint-disable-next-line no-console\n        console.error(CHILD_ERROR_MESSAGE);\n      }\n    }\n  }, [mounted]);\n\n  try {\n    const child = React.Children.only(children) as Parameters<typeof React.isValidElement>[0];\n\n    if (React.isValidElement(child)) {\n      return [\n        React.cloneElement(child as React.ReactElement<{ ref: React.Ref<HTMLElement> }>, {\n          ref: useMergedRefs(childRef, getRefFromReactElement(child)),\n        }),\n        childRef,\n      ];\n    }\n  } catch {\n    /* empty */\n  }\n\n  throw new Error(CHILD_ERROR_MESSAGE);\n}\n"],"names":["useChildElement","IS_REACT_19","React","version","startsWith","CHILD_ERROR_MESSAGE","join","getRefFromReactElement","element","props","ref","children","mounted","childRef","useRef","useEffect","process","env","NODE_ENV","current","console","error","child","Children","only","isValidElement","cloneElement","useMergedRefs","Error"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA4BgBA;;;eAAAA;;;;iEA5BO;gCACO;AAE9B,MAAMC,cAAcC,OAAMC,OAAO,CAACC,UAAU,CAAC;AAC7C,MAAMC,sBAAsB;IAC1B;IACA;IACA;IACA;CACD,CAACC,IAAI,CAAC;AAEP;;CAEC,GACD,SAASC,uBAA0BC,OAA2B;IAC5D,IAAIP,aAAa;QACf,OAAOO,QAAQC,KAAK,CAACC,GAAG;IAC1B;IAEA,OAAO,AAACF,QAAmEE,GAAG;AAChF;AAQO,SAASV,gBACdW,QAA4B,EAC5BC,UAAmB,IAAI;IAEvB,MAAMC,WAAWX,OAAMY,MAAM,CAAc;IAE3CZ,OAAMa,SAAS,CAAC;QACd,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;YACzC,IAAIN,WAAW,CAACC,SAASM,OAAO,EAAE;gBAChC,sCAAsC;gBACtCC,QAAQC,KAAK,CAAChB;YAChB;QACF;IACF,GAAG;QAACO;KAAQ;IAEZ,IAAI;QACF,MAAMU,QAAQpB,OAAMqB,QAAQ,CAACC,IAAI,CAACb;QAElC,IAAIT,OAAMuB,cAAc,CAACH,QAAQ;YAC/B,OAAO;gBACLpB,OAAMwB,YAAY,CAACJ,OAA8D;oBAC/EZ,KAAKiB,IAAAA,6BAAa,EAACd,UAAUN,uBAAuBe;gBACtD;gBACAT;aACD;QACH;IACF,EAAE,OAAM;IACN,SAAS,GACX;IAEA,MAAM,IAAIe,MAAMvB;AAClB"}