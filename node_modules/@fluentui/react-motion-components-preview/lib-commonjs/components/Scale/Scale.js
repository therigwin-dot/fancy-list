"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Scale: function() {
        return Scale;
    },
    ScaleRelaxed: function() {
        return ScaleRelaxed;
    },
    ScaleSnappy: function() {
        return ScaleSnappy;
    }
});
const _reactmotion = require("@fluentui/react-motion");
const _fadeatom = require("../../atoms/fade-atom");
const _scaleatom = require("../../atoms/scale-atom");
/** Define a presence motion for scale in/out */ const scalePresenceFn = ({ duration = _reactmotion.motionTokens.durationGentle, easing = _reactmotion.motionTokens.curveDecelerateMax, exitDuration = _reactmotion.motionTokens.durationNormal, exitEasing = _reactmotion.motionTokens.curveAccelerateMax, fromScale = 0.9, animateOpacity = true })=>{
    const enterAtoms = [
        (0, _scaleatom.scaleAtom)({
            direction: 'enter',
            duration,
            easing,
            fromScale: fromScale
        })
    ];
    const exitAtoms = [
        (0, _scaleatom.scaleAtom)({
            direction: 'exit',
            duration: exitDuration,
            easing: exitEasing,
            fromScale: fromScale
        })
    ];
    // Only add fade atoms if animateOpacity is true.
    if (animateOpacity) {
        enterAtoms.push((0, _fadeatom.fadeAtom)({
            direction: 'enter',
            duration,
            easing
        }));
        exitAtoms.push((0, _fadeatom.fadeAtom)({
            direction: 'exit',
            duration: exitDuration,
            easing: exitEasing
        }));
    }
    return {
        enter: enterAtoms,
        exit: exitAtoms
    };
};
const Scale = (0, _reactmotion.createPresenceComponent)(scalePresenceFn);
const ScaleSnappy = (0, _reactmotion.createPresenceComponentVariant)(Scale, {
    duration: _reactmotion.motionTokens.durationNormal,
    exitDuration: _reactmotion.motionTokens.durationFast
});
const ScaleRelaxed = (0, _reactmotion.createPresenceComponentVariant)(Scale, {
    duration: _reactmotion.motionTokens.durationSlow,
    exitDuration: _reactmotion.motionTokens.durationGentle
});
