import { PresenceComponent } from '@fluentui/react-motion';

/** A React component that applies collapse/expand transitions to its children. */
export declare const Collapse: PresenceComponent<CollapseParams>;

/** Common properties shared by all collapse components */
declare type CollapseBaseParams = {
    /** Easing curve for the enter transition. Defaults to the `curveEasyEaseMax` value. */
    easing?: string;
    /** Easing curve for the exit transition. Defaults to the `easing` param for symmetry. */
    exitEasing?: string;
    /** The orientation of the size animation. Defaults to `'vertical'` to expand/collapse the height. */
    orientation?: CollapseOrientation;
    /** Whether to animate the opacity. Defaults to `true`. */
    animateOpacity?: boolean;
};

/** A React component that applies collapse/expand transitions with delayed fade to its children. */
export declare const CollapseDelayed: PresenceComponent<CollapseDelayedParams>;

declare type CollapseDelayedParams = CollapseBaseParams & {
    /** Time (ms) for the size expand. Defaults to the `durationNormal` value (200 ms). */
    sizeDuration?: number;
    /** Time (ms) for the fade-in. Defaults to the `sizeDuration` param, to sync fade-in with expand. */
    opacityDuration?: number;
    /** Time (ms) for the size collapse. Defaults to the `sizeDuration` param, for temporal symmetry. */
    exitSizeDuration?: number;
    /** Time (ms) for the fade-out. Defaults to the `exitSizeDuration` param, to sync the fade-out with the collapse. */
    exitOpacityDuration?: number;
    /** Time (ms) between the size expand start and the fade-in start. Defaults to `0`. */
    delay?: number;
    /** Time (ms) between the fade-out start and the size collapse start. Defaults to `0`. */
    exitDelay?: number;
};

declare type CollapseOrientation = 'horizontal' | 'vertical';

declare type CollapseParams = CollapseBaseParams & {
    /** Time (ms) for the enter transition (expand). Defaults to the `durationNormal` value (200 ms). */
    duration?: number;
    /** Time (ms) for the exit transition (collapse). Defaults to the `duration` param for symmetry. */
    exitDuration?: number;
};

export declare const CollapseRelaxed: PresenceComponent<CollapseParams>;

export declare const CollapseSnappy: PresenceComponent<CollapseParams>;

/** A React component that applies fade in/out transitions to its children. */
export declare const Fade: PresenceComponent<FadeParams>;

declare type FadeParams = {
    /** Time (ms) for the enter transition (fade-in). Defaults to the `durationNormal` value (200 ms). */
    duration?: number;
    /** Easing curve for the enter transition (fade-in). Defaults to the `curveEasyEase` value.  */
    easing?: string;
    /** Time (ms) for the exit transition (fade-out). Defaults to the `duration` param for symmetry. */
    exitDuration?: number;
    /** Easing curve for the exit transition (fade-out). Defaults to the `easing` param for symmetry.  */
    exitEasing?: string;
};

export declare const FadeRelaxed: PresenceComponent<FadeParams>;

export declare const FadeSnappy: PresenceComponent<FadeParams>;

/** A React component that applies scale in/out transitions to its children. */
export declare const Scale: PresenceComponent<ScaleParams>;

declare type ScaleParams = {
    /** Time (ms) for the enter transition (scale-in). Defaults to the `durationGentle` value (250 ms). */
    duration?: number;
    /** Easing curve for the enter transition (scale-in). Defaults to the `curveDecelerateMax` value.  */
    easing?: string;
    /** Time (ms) for the exit transition (scale-out). Defaults to the `durationNormal` value (200 ms). */
    exitDuration?: number;
    /** Easing curve for the exit transition (scale-out). Defaults to the `curveAccelerateMax` value.  */
    exitEasing?: string;
    /** The scale value to animate from. Defaults to `0.9`. */
    fromScale?: number;
    /** Whether to animate the opacity. Defaults to `true`. */
    animateOpacity?: boolean;
};

export declare const ScaleRelaxed: PresenceComponent<ScaleParams>;

export declare const ScaleSnappy: PresenceComponent<ScaleParams>;

/** A React component that applies slide in/out transitions to its children. */
export declare const Slide: PresenceComponent<SlideParams>;

declare type SlideParams = {
    /** Time (ms) for the enter transition (slide-in). Defaults to the `durationNormal` value (250 ms). */
    duration?: number;
    /** Easing curve for the enter transition (slide-in). Defaults to the `curveDecelerateMid` value.  */
    easing?: string;
    /** Time (ms) for the exit transition (slide-out). Defaults to the `duration` param for symmetry. */
    exitDuration?: number;
    /** Easing curve for the exit transition (slide-out). Defaults to the `curveAccelerateMid` value.  */
    exitEasing?: string;
    /** The X translate value with units to animate from. Defaults to `'0px'`. */
    fromX?: string;
    /** The Y translate value with units to animate from. Defaults to `'20px'`. */
    fromY?: string;
    /** Whether to animate the opacity. Defaults to `true`. */
    animateOpacity?: boolean;
};

export declare const SlideRelaxed: PresenceComponent<SlideParams>;

export declare const SlideSnappy: PresenceComponent<SlideParams>;

export { }
