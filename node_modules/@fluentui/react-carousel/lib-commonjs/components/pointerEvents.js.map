{"version":3,"sources":["../src/components/pointerEvents.ts"],"sourcesContent":["import type { CreatePluginType, EmblaCarouselType, OptionsHandlerType } from 'embla-carousel';\nimport { carouselClassNames } from '../Carousel';\n\nexport type PointerEventPluginOptions = {\n  onSelectViaDrag: (event: PointerEvent | MouseEvent, index: number) => void;\n};\n\nexport type PointerEventPlugin = CreatePluginType<{}, PointerEventPluginOptions>;\n\nexport function pointerEventPlugin(options: PointerEventPluginOptions): PointerEventPlugin {\n  let emblaApi: EmblaCarouselType;\n  let pointerEvent: PointerEvent | MouseEvent | undefined;\n  let carouselListenerTarget: HTMLElement | undefined;\n\n  /**\n   * Heads up!\n   *\n   * We don't use `emblaApi.on('pointerDown', ...)` as the callback does not provide the event.\n   */\n  function documentDownListener(event: PointerEvent | MouseEvent) {\n    if (event.target) {\n      const targetNode = event.target as Element;\n\n      if (targetNode.classList.contains(carouselClassNames.root) || carouselListenerTarget?.contains(targetNode)) {\n        pointerEvent = event;\n      }\n    }\n\n    if (carouselListenerTarget) {\n      carouselListenerTarget.removeEventListener('mousedown', documentDownListener);\n      carouselListenerTarget.removeEventListener('pointerdown', documentDownListener);\n    }\n  }\n\n  function pointerUpListener() {\n    if (carouselListenerTarget) {\n      carouselListenerTarget.addEventListener('mousedown', documentDownListener);\n      carouselListenerTarget.addEventListener('pointerdown', documentDownListener);\n    }\n  }\n\n  function clearPointerEvent() {\n    pointerEvent = undefined;\n    pointerUpListener();\n  }\n\n  function selectListener() {\n    if (pointerEvent) {\n      const newIndex = emblaApi.selectedScrollSnap() ?? 0;\n      options.onSelectViaDrag(pointerEvent, newIndex);\n    }\n  }\n\n  function init(emblaApiInstance: EmblaCarouselType, optionsHandler: OptionsHandlerType): void {\n    emblaApi = emblaApiInstance;\n    // Initialize the listener for first mouse/pointerDown event\n    carouselListenerTarget = emblaApi.containerNode();\n\n    carouselListenerTarget.addEventListener('mousedown', documentDownListener);\n    carouselListenerTarget.addEventListener('pointerdown', documentDownListener);\n\n    emblaApi.on('pointerUp', pointerUpListener);\n    emblaApi.on('select', selectListener);\n    // Settle is used to clear pointer and conclude drag event\n    emblaApi.on('settle', clearPointerEvent);\n  }\n\n  function destroy(): void {\n    if (carouselListenerTarget) {\n      carouselListenerTarget.removeEventListener('mousedown', documentDownListener);\n      carouselListenerTarget.removeEventListener('pointerdown', documentDownListener);\n    }\n\n    carouselListenerTarget = undefined;\n\n    emblaApi.off('pointerUp', pointerUpListener);\n    emblaApi.off('select', selectListener);\n    emblaApi.off('settle', clearPointerEvent);\n  }\n\n  return {\n    name: 'pointerEvent',\n    options,\n    init,\n    destroy,\n  };\n}\n"],"names":["pointerEventPlugin","options","emblaApi","pointerEvent","carouselListenerTarget","documentDownListener","event","target","targetNode","classList","contains","carouselClassNames","root","removeEventListener","pointerUpListener","addEventListener","clearPointerEvent","undefined","selectListener","newIndex","selectedScrollSnap","onSelectViaDrag","init","emblaApiInstance","optionsHandler","containerNode","on","destroy","off","name"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BASgBA;;;eAAAA;;;0BARmB;AAQ5B,SAASA,mBAAmBC,OAAkC;IACnE,IAAIC;IACJ,IAAIC;IACJ,IAAIC;IAEJ;;;;GAIC,GACD,SAASC,qBAAqBC,KAAgC;QAC5D,IAAIA,MAAMC,MAAM,EAAE;YAChB,MAAMC,aAAaF,MAAMC,MAAM;YAE/B,IAAIC,WAAWC,SAAS,CAACC,QAAQ,CAACC,4BAAAA,CAAmBC,IAAI,KAAKR,CAAAA,2BAAAA,QAAAA,2BAAAA,KAAAA,IAAAA,KAAAA,IAAAA,uBAAwBM,QAAQ,CAACF,WAAAA,GAAa;gBAC1GL,eAAeG;YACjB;QACF;QAEA,IAAIF,wBAAwB;YAC1BA,uBAAuBS,mBAAmB,CAAC,aAAaR;YACxDD,uBAAuBS,mBAAmB,CAAC,eAAeR;QAC5D;IACF;IAEA,SAASS;QACP,IAAIV,wBAAwB;YAC1BA,uBAAuBW,gBAAgB,CAAC,aAAaV;YACrDD,uBAAuBW,gBAAgB,CAAC,eAAeV;QACzD;IACF;IAEA,SAASW;QACPb,eAAec;QACfH;IACF;IAEA,SAASI;QACP,IAAIf,cAAc;gBACCD;YAAjB,MAAMiB,WAAWjB,CAAAA,+BAAAA,SAASkB,kBAAkB,EAAA,MAAA,QAA3BlB,iCAAAA,KAAAA,IAAAA,+BAAiC;YAClDD,QAAQoB,eAAe,CAAClB,cAAcgB;QACxC;IACF;IAEA,SAASG,KAAKC,gBAAmC,EAAEC,cAAkC;QACnFtB,WAAWqB;QACX,4DAA4D;QAC5DnB,yBAAyBF,SAASuB,aAAa;QAE/CrB,uBAAuBW,gBAAgB,CAAC,aAAaV;QACrDD,uBAAuBW,gBAAgB,CAAC,eAAeV;QAEvDH,SAASwB,EAAE,CAAC,aAAaZ;QACzBZ,SAASwB,EAAE,CAAC,UAAUR;QACtB,0DAA0D;QAC1DhB,SAASwB,EAAE,CAAC,UAAUV;IACxB;IAEA,SAASW;QACP,IAAIvB,wBAAwB;YAC1BA,uBAAuBS,mBAAmB,CAAC,aAAaR;YACxDD,uBAAuBS,mBAAmB,CAAC,eAAeR;QAC5D;QAEAD,yBAAyBa;QAEzBf,SAAS0B,GAAG,CAAC,aAAad;QAC1BZ,SAAS0B,GAAG,CAAC,UAAUV;QACvBhB,SAAS0B,GAAG,CAAC,UAAUZ;IACzB;IAEA,OAAO;QACLa,MAAM;QACN5B;QACAqB;QACAK;IACF;AACF"}