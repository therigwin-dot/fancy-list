{"version":3,"sources":["../src/utils/getMetadataFromSlotComponent.ts"],"sourcesContent":["import type * as React from 'react';\nimport {\n  SLOT_CLASS_NAME_PROP_SYMBOL,\n  SLOT_ELEMENT_TYPE_SYMBOL,\n  SLOT_RENDER_FUNCTION_SYMBOL,\n} from '@fluentui/react-utilities';\nimport type { SlotComponentType, UnknownSlotProps } from '@fluentui/react-utilities';\n\n/**\n * @internal\n */\nexport function getMetadataFromSlotComponent<Props extends UnknownSlotProps>(type: SlotComponentType<Props>) {\n  const {\n    as,\n    [SLOT_CLASS_NAME_PROP_SYMBOL]: _classNameProp,\n    [SLOT_ELEMENT_TYPE_SYMBOL]: baseElementType,\n    [SLOT_RENDER_FUNCTION_SYMBOL]: renderFunction,\n    ...propsWithoutMetadata\n  } = type;\n  const props = propsWithoutMetadata as UnknownSlotProps as Props;\n\n  const elementType = (\n    typeof baseElementType === 'string' ? as ?? baseElementType : baseElementType\n  ) as React.ElementType<Props>;\n\n  if (typeof elementType !== 'string' && as) {\n    props.as = as;\n  }\n  return { elementType, props, renderFunction };\n}\n"],"names":["SLOT_CLASS_NAME_PROP_SYMBOL","SLOT_ELEMENT_TYPE_SYMBOL","SLOT_RENDER_FUNCTION_SYMBOL","getMetadataFromSlotComponent","type","as","_classNameProp","baseElementType","renderFunction","propsWithoutMetadata","props","elementType"],"rangeMappings":";;;;;;;;;;;;;;;","mappings":"AACA,SACEA,2BAA2B,EAC3BC,wBAAwB,EACxBC,2BAA2B,QACtB,4BAA4B;AAGnC;;CAEC,GACD,OAAO,SAASC,6BAA6DC,IAA8B;IACzG,MAAM,EACJC,EAAE,EACF,CAACL,4BAA4B,EAAEM,cAAc,EAC7C,CAACL,yBAAyB,EAAEM,eAAe,EAC3C,CAACL,4BAA4B,EAAEM,cAAc,EAC7C,GAAGC,sBACJ,GAAGL;IACJ,MAAMM,QAAQD;IAEd,MAAME,cACJ,OAAOJ,oBAAoB,WAAWF,eAAAA,gBAAAA,KAAME,kBAAkBA;IAGhE,IAAI,OAAOI,gBAAgB,YAAYN,IAAI;QACzCK,MAAML,EAAE,GAAGA;IACb;IACA,OAAO;QAAEM;QAAaD;QAAOF;IAAe;AAC9C"}