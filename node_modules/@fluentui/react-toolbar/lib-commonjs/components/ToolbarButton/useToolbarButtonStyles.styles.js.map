{"version":3,"sources":["useToolbarButtonStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nconst useBaseStyles = makeStyles({\n    vertical: {\n        flexDirection: 'column'\n    },\n    verticalIcon: {\n        fontSize: '24px',\n        margin: '0'\n    }\n});\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */ export const useToolbarButtonStyles_unstable = (state)=>{\n    'use no memo';\n    const buttonStyles = useBaseStyles();\n    state.root.className = mergeClasses(state.vertical && buttonStyles.vertical, state.root.className);\n    if (state.icon) {\n        state.icon.className = mergeClasses(state.vertical && buttonStyles.verticalIcon, state.icon.className);\n    }\n    useButtonStyles_unstable(state);\n};\n"],"names":["useToolbarButtonStyles_unstable","useBaseStyles","__styles","vertical","Beiy3e4","verticalIcon","Be2twd7","jrapky","Frg6f3","t21cq0","B6of3ja","B74szlk","d","p","state","buttonStyles","root","className","mergeClasses","icon","useButtonStyles_unstable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAaiBA;;;eAAAA;;;uBAbwB;6BACA;AACzC,MAAMC,gBAAa,WAAA,GAAGC,IAAAA,eAAA,EAAA;IAAAC,UAAA;QAAAC,SAAA;IAAA;IAAAC,cAAA;QAAAC,SAAA;QAAAC,QAAA;QAAAC,QAAA;QAAAC,QAAA;QAAAC,SAAA;QAAAC,SAAA;IAAA;AAAA,GAAA;IAAAC,GAAA;QAAA;QAAA;QAAA;YAAA;YAAA;gBAAAC,GAAA,CAAA;YAAA;SAAA;KAAA;AAAA;AAWX,MAAMb,kCAAmCc,CAAAA;IAChD;IACA,MAAMC,eAAed;IACrBa,MAAME,IAAI,CAACC,SAAS,GAAGC,IAAAA,mBAAY,EAACJ,MAAMX,QAAQ,IAAIY,aAAaZ,QAAQ,EAAEW,MAAME,IAAI,CAACC,SAAS;IACjG,IAAIH,MAAMK,IAAI,EAAE;QACZL,MAAMK,IAAI,CAACF,SAAS,GAAGC,IAAAA,mBAAY,EAACJ,MAAMX,QAAQ,IAAIY,aAAaV,YAAY,EAAES,MAAMK,IAAI,CAACF,SAAS;IACzG;IACAG,IAAAA,qCAAwB,EAACN;AAC7B"}