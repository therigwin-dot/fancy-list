{"version":3,"sources":["../src/hooks/useSafeZoneArea/useSafeZoneArea.tsx"],"sourcesContent":["import { useAnimationFrame, useEventCallback, useMergedRefs, useTimeout } from '@fluentui/react-utilities';\nimport type { RefObjectFunction } from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport { createSafeZoneAreaStateStore } from './createSafeZoneAreaStateStore';\nimport { type SafeZoneAreaImperativeHandle, SafeZoneArea } from './SafeZoneArea';\n\nexport type UseSafeZoneOptions = {\n  /** Enables debug mode: makes drawn shapes visible. */\n  debug?: boolean;\n\n  /** Disables the safe zone area. */\n  disabled?: boolean;\n\n  /** The time in milliseconds to wait before clearing the safe zone. */\n  timeout?: number;\n\n  /** Called when the mouse enters the safe zone. */\n  onSafeZoneEnter?: (e: React.MouseEvent) => void;\n\n  /** Called when the mouse moves within the safe zone. */\n  onSafeZoneMove?: (e: React.MouseEvent) => void;\n\n  /** Called when the mouse leaves the safe zone. */\n  onSafeZoneLeave?: (e: React.MouseEvent) => void;\n\n  /** Called when the safe zone times out, even if a cursor is still over a safe zone. */\n  onSafeZoneTimeout?: () => void;\n};\n\n/**\n * Time in milliseconds after which the safe zone area will be cleared if no mouse movement is detected.\n *\n * Only affects the target element, not the safe zone area itself.\n */\nconst MOUSE_MOVE_TARGET_POLLING_TIMEOUT = 2000;\n\n// ---\n\nexport function useSafeZoneArea({\n  debug = false,\n  disabled = false,\n\n  onSafeZoneEnter,\n  onSafeZoneMove,\n  onSafeZoneLeave,\n  onSafeZoneTimeout,\n\n  timeout = 1500,\n}: UseSafeZoneOptions = {}): {\n  containerRef: RefObjectFunction<HTMLElement>;\n  targetRef: RefObjectFunction<HTMLElement>;\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  elementToRender: JSX.Element | null;\n} {\n  const [stateStore] = React.useState(createSafeZoneAreaStateStore);\n\n  const safeZoneAreaRef = React.useRef<SafeZoneAreaImperativeHandle>(null);\n  const containerRef = React.useRef<HTMLElement>(null);\n  const targetRef = React.useRef<HTMLElement>(null);\n\n  const [setSafeZoneCloseTimeout, clearSafeZoneCloseTimeout] = useTimeout();\n  const [requestUpdateFrame, clearUpdateFrame] = useAnimationFrame();\n\n  const mouseCoordinatesRef = React.useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n\n  const containerListenerRef = React.useMemo(() => {\n    if (disabled) {\n      return () => {\n        // do nothing\n      };\n    }\n\n    let containerEl: HTMLElement | null = null;\n\n    function onContainerMouseEnter() {\n      clearSafeZoneCloseTimeout();\n      stateStore.toggleActive(false);\n    }\n\n    return (el: HTMLElement | null) => {\n      if (el === null) {\n        containerEl?.removeEventListener('mouseenter', onContainerMouseEnter);\n      }\n\n      containerEl = el;\n      el?.addEventListener('mouseenter', onContainerMouseEnter);\n    };\n  }, [clearSafeZoneCloseTimeout, disabled, stateStore]);\n\n  const targetListenerRef = React.useMemo(() => {\n    if (disabled) {\n      return () => {\n        // do nothing\n      };\n    }\n\n    let targetEl: HTMLElement | null = null;\n\n    function onTargetMouseMove(e: MouseEvent) {\n      mouseCoordinatesRef.current = { x: e.clientX, y: e.clientY };\n\n      if (!stateStore.isActive()) {\n        stateStore.toggleActive(true);\n      }\n\n      setSafeZoneCloseTimeout(() => {\n        stateStore.toggleActive(false);\n      }, MOUSE_MOVE_TARGET_POLLING_TIMEOUT);\n    }\n\n    return (el: HTMLElement | null) => {\n      if (el === null) {\n        clearUpdateFrame();\n        clearSafeZoneCloseTimeout();\n\n        targetEl?.removeEventListener('mousemove', onTargetMouseMove);\n      }\n\n      targetEl = el;\n      el?.addEventListener('mousemove', onTargetMouseMove);\n    };\n  }, [clearUpdateFrame, clearSafeZoneCloseTimeout, disabled, stateStore, setSafeZoneCloseTimeout]);\n\n  const onSvgMouseEnter = useEventCallback((e: React.MouseEvent) => {\n    onSafeZoneEnter?.(e);\n\n    setSafeZoneCloseTimeout(() => {\n      stateStore.toggleActive(false);\n      onSafeZoneTimeout?.();\n    }, timeout);\n  });\n\n  const onSvgMouseMove = useEventCallback((e: React.MouseEvent) => {\n    setSafeZoneCloseTimeout(() => {\n      stateStore.toggleActive(false);\n      onSafeZoneTimeout?.();\n    }, timeout);\n    onSafeZoneMove?.(e);\n  });\n\n  const onSvgMouseLeave = useEventCallback((e: React.MouseEvent) => {\n    onSafeZoneLeave?.(e);\n  });\n\n  React.useEffect(() => {\n    return stateStore.subscribe(isActive => {\n      if (isActive) {\n        function updateSVGs() {\n          const containerEl = containerRef.current;\n          const targetEl = targetRef.current;\n\n          if (containerEl && targetEl) {\n            safeZoneAreaRef.current?.updateSVG({\n              containerRect: containerEl.getBoundingClientRect(),\n              mouseCoordinates: [mouseCoordinatesRef.current.x, mouseCoordinatesRef.current.y],\n              targetRect: targetEl.getBoundingClientRect(),\n            });\n          }\n\n          requestUpdateFrame(updateSVGs);\n        }\n\n        updateSVGs();\n        return;\n      }\n\n      clearUpdateFrame();\n    });\n  }, [clearUpdateFrame, requestUpdateFrame, stateStore]);\n\n  return {\n    containerRef: useMergedRefs(containerRef, containerListenerRef),\n    targetRef: useMergedRefs(targetRef, targetListenerRef),\n\n    elementToRender: React.useMemo(\n      () =>\n        disabled ? null : (\n          <SafeZoneArea\n            debug={debug}\n            onMouseEnter={onSvgMouseEnter}\n            onMouseMove={onSvgMouseMove}\n            onMouseLeave={onSvgMouseLeave}\n            imperativeRef={safeZoneAreaRef}\n            stateStore={stateStore}\n          />\n        ),\n      [disabled, debug, onSvgMouseEnter, onSvgMouseMove, onSvgMouseLeave, stateStore],\n    ),\n  };\n}\n"],"names":["useSafeZoneArea","MOUSE_MOVE_TARGET_POLLING_TIMEOUT","debug","disabled","onSafeZoneEnter","onSafeZoneMove","onSafeZoneLeave","onSafeZoneTimeout","timeout","stateStore","React","useState","createSafeZoneAreaStateStore","safeZoneAreaRef","useRef","containerRef","targetRef","setSafeZoneCloseTimeout","clearSafeZoneCloseTimeout","useTimeout","requestUpdateFrame","clearUpdateFrame","useAnimationFrame","mouseCoordinatesRef","x","y","containerListenerRef","useMemo","containerEl","onContainerMouseEnter","toggleActive","el","removeEventListener","addEventListener","targetListenerRef","targetEl","onTargetMouseMove","e","current","clientX","clientY","isActive","onSvgMouseEnter","useEventCallback","onSvgMouseMove","onSvgMouseLeave","useEffect","subscribe","updateSVGs","updateSVG","containerRect","getBoundingClientRect","mouseCoordinates","targetRect","useMergedRefs","elementToRender","createElement","SafeZoneArea","onMouseEnter","onMouseMove","onMouseLeave","imperativeRef"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}