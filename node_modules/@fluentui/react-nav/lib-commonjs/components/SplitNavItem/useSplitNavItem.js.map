{"version":3,"sources":["../src/components/SplitNavItem/useSplitNavItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { Tooltip } from '@fluentui/react-tooltip';\nimport type { SplitNavItemProps, SplitNavItemState } from './SplitNavItem.types';\nimport { useNavContext_unstable } from '../NavContext';\nimport { Button, MenuButton, ToggleButton } from '@fluentui/react-button';\nimport { MoreHorizontalFilled, Pin20Regular } from '@fluentui/react-icons';\nimport { NavItem } from '../NavItem/index';\nimport { NavSubItem } from '../NavSubItem/NavSubItem';\nimport { useNavCategoryContext_unstable } from '../NavCategoryContext';\n\n/**\n * Create the state required to render SplitNavItem.\n *\n * The returned state can be modified with hooks such as useSplitNavItemStyles_unstable,\n * before being passed to renderSplitNavItem_unstable.\n *\n * @param props - props from this instance of SplitNavItem\n * @param ref - reference to root HTMLDivElement of SplitNavItem\n */\nexport const useSplitNavItem_unstable = (\n  props: SplitNavItemProps,\n  ref: React.Ref<HTMLDivElement>,\n): SplitNavItemState => {\n  const {\n    navItem,\n    actionButton,\n    toggleButton,\n    menuButton,\n    actionButtonTooltip,\n    toggleButtonTooltip,\n    menuButtonTooltip,\n    children,\n  } = props;\n\n  const { density = 'medium' } = useNavContext_unstable();\n\n  const { value: potentialParenValue } = useNavCategoryContext_unstable();\n\n  const isSubNav = potentialParenValue.length > 0 ? true : false;\n\n  const navItemShorthand = slot.always(navItem, {\n    defaultProps: {\n      children,\n    },\n    elementType: isSubNav ? NavSubItem : NavItem,\n  });\n\n  const actionButtonShorthand = slot.optional(actionButton, {\n    defaultProps: {\n      icon: <Pin20Regular />,\n      size: 'small',\n      appearance: 'transparent',\n    },\n    elementType: Button,\n  });\n\n  const toggleButtonShorthand = slot.optional(toggleButton, {\n    defaultProps: {\n      icon: <Pin20Regular />,\n      size: 'small',\n      appearance: 'transparent',\n    },\n    elementType: ToggleButton,\n  });\n\n  const menuButtonShorthand = slot.optional(menuButton, {\n    defaultProps: {\n      icon: <MoreHorizontalFilled />,\n      size: 'small',\n      appearance: 'transparent',\n    },\n    elementType: MenuButton,\n  });\n\n  const actionButtonTooltipShorthand = slot.optional(actionButtonTooltip, {\n    defaultProps: { relationship: 'label' },\n    elementType: Tooltip,\n  });\n\n  const toggleButtonTooltipShorthand = slot.optional(toggleButtonTooltip, {\n    defaultProps: { relationship: 'label' },\n    elementType: Tooltip,\n  });\n\n  const menuButtonTooltipShorthand = slot.optional(menuButtonTooltip, {\n    defaultProps: { relationship: 'label' },\n    elementType: Tooltip,\n  });\n\n  return {\n    components: {\n      root: 'div',\n      navItem: isSubNav ? NavSubItem : NavItem,\n      actionButton: Button,\n      toggleButton: ToggleButton,\n      menuButton: MenuButton,\n      actionButtonTooltip: Tooltip,\n      toggleButtonTooltip: Tooltip,\n      menuButtonTooltip: Tooltip,\n    },\n    root: slot.always(\n      getIntrinsicElementProps('div', {\n        ref,\n        ...props,\n        // because we're passing in children to the NavItem,\n        // We can be explicit about the children prop here\n        children: null,\n      }),\n      { elementType: 'div' },\n    ),\n    navItem: navItemShorthand,\n    actionButton: actionButtonShorthand,\n    toggleButton: toggleButtonShorthand,\n    menuButton: menuButtonShorthand,\n    actionButtonTooltip: actionButtonTooltipShorthand,\n    toggleButtonTooltip: toggleButtonTooltipShorthand,\n    menuButtonTooltip: menuButtonTooltipShorthand,\n    density,\n    isSubNav,\n  };\n};\n"],"names":["useSplitNavItem_unstable","props","ref","navItem","actionButton","toggleButton","menuButton","actionButtonTooltip","toggleButtonTooltip","menuButtonTooltip","children","density","useNavContext_unstable","value","potentialParenValue","useNavCategoryContext_unstable","isSubNav","length","navItemShorthand","slot","always","defaultProps","elementType","NavSubItem","NavItem","actionButtonShorthand","optional","icon","React","createElement","Pin20Regular","size","appearance","Button","toggleButtonShorthand","ToggleButton","menuButtonShorthand","MoreHorizontalFilled","MenuButton","actionButtonTooltipShorthand","relationship","Tooltip","toggleButtonTooltipShorthand","menuButtonTooltipShorthand","components","root","getIntrinsicElementProps"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAoBaA;;;eAAAA;;;;iEApBU;gCACwB;8BACvB;4BAEe;6BACU;4BACE;uBAC3B;4BACG;oCACoB;AAWxC,MAAMA,2BAA2B,CACtCC,OACAC;IAEA,MAAM,EACJC,OAAO,EACPC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,mBAAmB,EACnBC,mBAAmB,EACnBC,iBAAiB,EACjBC,QAAQ,EACT,GAAGT;IAEJ,MAAM,EAAEU,UAAU,QAAQ,EAAE,GAAGC,IAAAA,kCAAAA;IAE/B,MAAM,EAAEC,OAAOC,mBAAmB,EAAE,GAAGC,IAAAA,kDAAAA;IAEvC,MAAMC,WAAWF,oBAAoBG,MAAM,GAAG,IAAI,OAAO;IAEzD,MAAMC,mBAAmBC,oBAAAA,CAAKC,MAAM,CAACjB,SAAS;QAC5CkB,cAAc;YACZX;QACF;QACAY,aAAaN,WAAWO,sBAAAA,GAAaC,cAAAA;IACvC;IAEA,MAAMC,wBAAwBN,oBAAAA,CAAKO,QAAQ,CAACtB,cAAc;QACxDiB,cAAc;YACZM,MAAAA,WAAAA,GAAMC,OAAAC,aAAA,CAACC,wBAAAA,EAAAA;YACPC,MAAM;YACNC,YAAY;QACd;QACAV,aAAaW,mBAAAA;IACf;IAEA,MAAMC,wBAAwBf,oBAAAA,CAAKO,QAAQ,CAACrB,cAAc;QACxDgB,cAAc;YACZM,MAAAA,WAAAA,GAAMC,OAAAC,aAAA,CAACC,wBAAAA,EAAAA;YACPC,MAAM;YACNC,YAAY;QACd;QACAV,aAAaa,yBAAAA;IACf;IAEA,MAAMC,sBAAsBjB,oBAAAA,CAAKO,QAAQ,CAACpB,YAAY;QACpDe,cAAc;YACZM,MAAAA,WAAAA,GAAMC,OAAAC,aAAA,CAACQ,gCAAAA,EAAAA;YACPN,MAAM;YACNC,YAAY;QACd;QACAV,aAAagB,uBAAAA;IACf;IAEA,MAAMC,+BAA+BpB,oBAAAA,CAAKO,QAAQ,CAACnB,qBAAqB;QACtEc,cAAc;YAAEmB,cAAc;QAAQ;QACtClB,aAAamB,qBAAAA;IACf;IAEA,MAAMC,+BAA+BvB,oBAAAA,CAAKO,QAAQ,CAAClB,qBAAqB;QACtEa,cAAc;YAAEmB,cAAc;QAAQ;QACtClB,aAAamB,qBAAAA;IACf;IAEA,MAAME,6BAA6BxB,oBAAAA,CAAKO,QAAQ,CAACjB,mBAAmB;QAClEY,cAAc;YAAEmB,cAAc;QAAQ;QACtClB,aAAamB,qBAAAA;IACf;IAEA,OAAO;QACLG,YAAY;YACVC,MAAM;YACN1C,SAASa,WAAWO,sBAAAA,GAAaC,cAAAA;YACjCpB,cAAc6B,mBAAAA;YACd5B,cAAc8B,yBAAAA;YACd7B,YAAYgC,uBAAAA;YACZ/B,qBAAqBkC,qBAAAA;YACrBjC,qBAAqBiC,qBAAAA;YACrBhC,mBAAmBgC,qBAAAA;QACrB;QACAI,MAAM1B,oBAAAA,CAAKC,MAAM,CACf0B,IAAAA,wCAAAA,EAAyB,OAAO;YAC9B5C;YACA,GAAGD,KAAK;YACR,oDAAoD;YACpD,kDAAkD;YAClDS,UAAU;QACZ,IACA;YAAEY,aAAa;QAAM;QAEvBnB,SAASe;QACTd,cAAcqB;QACdpB,cAAc6B;QACd5B,YAAY8B;QACZ7B,qBAAqBgC;QACrB/B,qBAAqBkC;QACrBjC,mBAAmBkC;QACnBhC;QACAK;IACF;AACF"}