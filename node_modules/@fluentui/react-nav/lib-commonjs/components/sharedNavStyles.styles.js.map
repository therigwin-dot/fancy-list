{"version":3,"sources":["sharedNavStyles.styles.js"],"sourcesContent":["import { iconFilledClassName, iconRegularClassName } from '@fluentui/react-icons';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport { makeResetStyles, makeStyles } from '@griffel/react';\n// Styles shared by several nav components.\nexport const navItemTokens = {\n    defaultDrawerWidth: 260,\n    indicatorOffset: 16,\n    indicatorWidth: 4,\n    indicatorHeight: 20,\n    backgroundColor: tokens.colorNeutralBackground4,\n    backgroundColorHover: tokens.colorNeutralBackground4Hover,\n    backgroundColorPressed: tokens.colorNeutralBackground4Pressed,\n    animationTokens: {\n        animationDuration: tokens.durationFaster,\n        animationFillMode: 'both',\n        animationTimingFunction: tokens.curveLinear\n    },\n    transitionTokens: {\n        transitionDuration: tokens.durationFaster,\n        transitionTimingFunction: tokens.curveLinear,\n        transitionProperty: 'background'\n    }\n};\n/**\n * Styles for the root slot\n * Shared across NavItem, NavCategoryItem, NavSubItem, and AppItem\n */ export const useRootDefaultClassName = makeResetStyles({\n    display: 'flex',\n    textTransform: 'none',\n    position: 'relative',\n    justifyContent: 'start',\n    alignItems: 'flex-start',\n    textAlign: 'left',\n    gap: tokens.spacingVerticalL,\n    padding: `${tokens.spacingVerticalMNudge} ${tokens.spacingHorizontalS} ${tokens.spacingVerticalMNudge} ${tokens.spacingHorizontalMNudge}`,\n    backgroundColor: navItemTokens.backgroundColor,\n    borderRadius: tokens.borderRadiusMedium,\n    color: tokens.colorNeutralForeground2,\n    textDecorationLine: 'none',\n    border: 'none',\n    // this element can change between a button and an anchor\n    // so we need to reset box sizing to prevent horizontal overflow\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    transitionDuration: navItemTokens.animationTokens.animationDuration,\n    transitionTimingFunction: navItemTokens.animationTokens.animationTimingFunction,\n    transitionProperty: 'background',\n    width: '100%',\n    ...typographyStyles.body1,\n    ':hover': {\n        backgroundColor: navItemTokens.backgroundColorHover\n    },\n    // Use custom insert focus indicator\n    '&:focus-visible': {\n        outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`,\n        outlineOffset: `calc(${tokens.strokeWidthThick} * -1)`\n    }\n});\nexport const useSmallStyles = makeStyles({\n    root: {\n        padding: `${tokens.spacingVerticalXS} ${tokens.spacingHorizontalS} ${tokens.spacingVerticalXS} ${tokens.spacingHorizontalMNudge}`\n    }\n});\n/**\n * Styles for the content slot (children)\n * Shared across NavItem, NavCategoryItem, NavSubItem, and AppItem\n */ export const useContentStyles = makeStyles({\n    selected: typographyStyles.body1Strong\n});\n/**\n * French fry styles\n * Shared across NavItem, NavCategoryItem, and NavSubItem\n */ export const useIndicatorStyles = makeStyles({\n    base: {\n        '::after': {\n            position: 'absolute',\n            ...navItemTokens.animationTokens,\n            animationName: {\n                '0%': {\n                    background: 'transparent'\n                },\n                '100%': {\n                    background: tokens.colorCompoundBrandForeground1\n                }\n            },\n            marginInlineStart: `-${navItemTokens.indicatorOffset}px`,\n            backgroundColor: tokens.colorCompoundBrandForeground1,\n            height: `${navItemTokens.indicatorHeight}px`,\n            width: `${navItemTokens.indicatorWidth}px`,\n            borderRadius: tokens.borderRadiusCircular,\n            content: '\"\"'\n        },\n        '@media (forced-colors: active)': {\n            '::after': {\n                outline: `solid 2px ${tokens.colorTransparentStroke}`,\n                outlineOffset: '-2px'\n            }\n        }\n    }\n});\n/**\n * Styles for the icon slot\n * Shared across NavItem, NavCategoryItem, and NavSubItem\n * We use the grid trick to stack the filled and regular icons on top of each other\n */ export const useIconStyles = makeStyles({\n    base: {\n        display: 'grid',\n        gridTemplateAreas: 'overlay-area',\n        minHeight: '20px',\n        minWidth: '20px',\n        alignItems: 'top',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        [`& .${iconFilledClassName}`]: {\n            gridArea: 'overlay-area',\n            color: 'transparent',\n            display: 'none'\n        },\n        [`& .${iconRegularClassName}`]: {\n            gridArea: 'overlay-area',\n            display: 'inline'\n        }\n    },\n    selected: {\n        [`& .${iconFilledClassName}`]: {\n            ...navItemTokens.animationTokens,\n            display: 'inline',\n            animationName: {\n                '0%': {\n                    opacity: 0,\n                    color: 'transparent'\n                },\n                '100%': {\n                    opacity: 1,\n                    color: tokens.colorNeutralForeground2BrandSelected\n                }\n            }\n        },\n        [`& .${iconRegularClassName}`]: {\n            ...navItemTokens.animationTokens,\n            animationName: {\n                '0%': {\n                    opacity: 1,\n                    color: tokens.colorNeutralForeground2\n                },\n                '100%': {\n                    opacity: 0,\n                    color: 'transparent'\n                }\n            }\n        }\n    }\n});\n"],"names":["navItemTokens","useContentStyles","useIconStyles","useIndicatorStyles","useRootDefaultClassName","useSmallStyles","defaultDrawerWidth","indicatorOffset","indicatorWidth","indicatorHeight","backgroundColor","tokens","colorNeutralBackground4","backgroundColorHover","colorNeutralBackground4Hover","backgroundColorPressed","colorNeutralBackground4Pressed","animationTokens","animationDuration","durationFaster","animationFillMode","animationTimingFunction","curveLinear","transitionTokens","transitionDuration","transitionTimingFunction","transitionProperty","__resetStyles","__styles","root","Byoj8tv","uwmqm3","z189sj","z8tnut","B0ocmuz","d","p","selected","Bahqtrf","Be2twd7","Bhrd7zp","Bg96gwp","base","E3zdtr","xr36ep","B67388b","Bitv4sc","Br128sd","rjyhj6","Bjyk6c5","Dlnsje","a2br6o","d9w3h3","B3778ie","B4j8arr","Bl18szs","Blrzh8d","Bsft5z2","faxfa8","bj685l","Bovfycw","B8cfl5i","Bg7zzdw","k","m","mc9l5x","zoa1oz","sshi5w","Bf4jedk","Bt984gj","Brf1p80","B68tc82","Bmxbyg5","Bpg54ce","B9gejnh","yr4pdu","Bvkmzld","mqdk8l","Gbjhqp","obb2bi","D0sxk3","Esdz9e","Bqil8sh","Bbom3er","djjtid","mz70lj","t6yez3","C9vb3z","ux3ctl","Ba906uv","hndn0g","cw2nnk","Bkztwl0","H8nmoi","ipgedg"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}