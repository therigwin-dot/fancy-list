{"version":3,"sources":["useNavDrawerStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { navItemTokens } from '../sharedNavStyles.styles';\nexport const navDrawerClassNames = {\n    root: 'fui-NavDrawer'\n};\n/**\n * Styles for the root slot\n */ const useStyles = makeStyles({\n    root: {\n        backgroundColor: navItemTokens.backgroundColor,\n        alignItems: 'unset'\n    },\n    // seperate style so it can be applied conditionally\n    // if size is not set, use default width from the token.\n    defaultWidth: {\n        width: `${navItemTokens.defaultDrawerWidth}px`\n    }\n});\n/**\n * Apply styling to the NavDrawer slots based on the state\n */ export const useNavDrawerStyles_unstable = (state)=>{\n    'use no memo';\n    const { size } = state;\n    const styles = useStyles();\n    state.root.className = mergeClasses(navDrawerClassNames.root, styles.root, !size && styles.defaultWidth, state.root.className);\n    return state;\n};\n"],"names":["navDrawerClassNames","useNavDrawerStyles_unstable","root","useStyles","__styles","De3pzq","Bt984gj","defaultWidth","a9b677","d","state","size","styles","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAEaA,mBAAmB;eAAnBA;;IAkBIC,2BAA2B;eAA3BA;;;uBApBwB;AAElC,MAAMD,sBAAsB;IAC/BE,MAAM;AACV;AACA;;CAEA,GAAI,MAAMC,YAAS,WAAA,GAAGC,IAAAA,eAAA,EAAA;IAAAF,MAAA;QAAAG,QAAA;QAAAC,SAAA;IAAA;IAAAC,cAAA;QAAAC,QAAA;IAAA;AAAA,GAAA;IAAAC,GAAA;QAAA;QAAA;QAAA;KAAA;AAAA;AAaX,MAAMR,8BAA+BS,CAAAA;IAC5C;IACA,MAAM,EAAEC,IAAAA,EAAM,GAAGD;IACjB,MAAME,SAAST;IACfO,MAAMR,IAAI,CAACW,SAAS,GAAGC,IAAAA,mBAAY,EAACd,oBAAoBE,IAAI,EAAEU,OAAOV,IAAI,EAAE,CAACS,QAAQC,OAAOL,YAAY,EAAEG,MAAMR,IAAI,CAACW,SAAS;IAC7H,OAAOH;AACX"}