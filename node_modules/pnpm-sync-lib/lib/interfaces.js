"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogMessageIdentifier = exports.LogMessageKind = void 0;
/**
 * @beta
 */
var LogMessageKind;
(function (LogMessageKind) {
    LogMessageKind["INFO"] = "info";
    LogMessageKind["WARNING"] = "warning";
    LogMessageKind["ERROR"] = "error";
    LogMessageKind["VERBOSE"] = "verbose";
})(LogMessageKind || (exports.LogMessageKind = LogMessageKind = {}));
/**
 * @beta
 */
var LogMessageIdentifier;
(function (LogMessageIdentifier) {
    // pnpmSyncPrepareAsync() messages
    LogMessageIdentifier["PREPARE_STARTING"] = "prepare-starting";
    LogMessageIdentifier["PREPARE_ERROR_UNSUPPORTED_FORMAT"] = "prepare-error-unsupported-format";
    LogMessageIdentifier["PREPARE_ERROR_UNSUPPORTED_PNPM_VERSION"] = "prepare-error-unsupported-pnpm-version";
    LogMessageIdentifier["PREPARE_PROCESSING"] = "prepare-processing";
    LogMessageIdentifier["PREPARE_REPLACING_FILE"] = "prepare-replacing-file";
    LogMessageIdentifier["PREPARE_WRITING_FILE"] = "prepare-writing-file";
    LogMessageIdentifier["PREPARE_FINISHING"] = "prepare-finishing";
    // pnpmSyncCopyAsync() messages
    LogMessageIdentifier["COPY_STARTING"] = "copy-starting";
    LogMessageIdentifier["COPY_ERROR_NO_SYNC_FILE"] = "copy-error-no-sync-file";
    LogMessageIdentifier["COPY_ERROR_INCOMPATIBLE_SYNC_FILE"] = "copy-error-incompatible-sync-file";
    LogMessageIdentifier["COPY_FINISHING"] = "copy-finishing";
})(LogMessageIdentifier || (exports.LogMessageIdentifier = LogMessageIdentifier = {}));
//# sourceMappingURL=interfaces.js.map