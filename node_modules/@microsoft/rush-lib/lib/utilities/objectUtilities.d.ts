/**
 * Determines if two objects are deeply equal.
 */
export declare function objectsAreDeepEqual<TObject>(a: TObject, b: TObject): boolean;
export declare function cloneDeep<TObject>(obj: TObject): TObject;
export declare function merge<TBase extends object, TOther>(base: TBase, other: TOther): (TBase & TOther) | TOther;
/**
 * Performs a partial deep comparison between `obj` and `source` to
 * determine if `obj` contains equivalent property values.
 */
export declare function isMatch<TObject>(obj: TObject, source: TObject): boolean;
/**
 * Removes `undefined` and `null` direct properties from an object.
 *
 * @remarks
 * Note that this does not recurse through sub-objects.
 */
export declare function removeNullishProps<T extends object>(obj: T): Partial<T>;
//# sourceMappingURL=objectUtilities.d.ts.map