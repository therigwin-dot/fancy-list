import type { ISubspacePnpmfileShimSettings } from './IPnpmfile';
import type { RushConfiguration } from '../../api/RushConfiguration';
import type { Subspace } from '../../api/Subspace';
/**
 * Loads PNPM's pnpmfile.js configuration, and invokes it to preprocess package.json files,
 * optionally utilizing a pnpmfile shim to inject preferred versions.
 */
export declare class SubspacePnpmfileConfiguration {
    /**
     * Split workspace use global pnpmfile, because in split workspace, user may set `shared-workspace-lockfile=false`.
     * That means each project owns their individual pnpmfile under project folder. While the global pnpmfile could be
     * under the common/temp-split/ folder and be used by all split workspace projects.
     */
    static writeCommonTempSubspaceGlobalPnpmfileAsync(rushConfiguration: RushConfiguration, subspace: Subspace, variant: string | undefined): Promise<void>;
    static getSubspacePnpmfileShimSettings(rushConfiguration: RushConfiguration, subspace: Subspace, variant: string | undefined): ISubspacePnpmfileShimSettings;
    private static _getProjectNameToInjectedDependenciesMap;
    private static _processDependenciesForTransitiveInjectedInstall;
}
//# sourceMappingURL=SubspacePnpmfileConfiguration.d.ts.map