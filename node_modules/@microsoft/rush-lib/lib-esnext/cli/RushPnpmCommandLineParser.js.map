{"version":3,"file":"RushPnpmCommandLineParser.js","sourceRoot":"","sources":["../../src/cli/RushPnpmCommandLineParser.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport {\n  AlreadyReportedError,\n  EnvironmentMap,\n  FileConstants,\n  FileSystem,\n  JsonFile,\n  type JsonObject\n} from '@rushstack/node-core-library';\nimport {\n  Colorize,\n  ConsoleTerminalProvider,\n  type ITerminal,\n  type ITerminalProvider,\n  Terminal\n} from '@rushstack/terminal';\n\nimport { RushConfiguration } from '../api/RushConfiguration';\nimport { NodeJsCompatibility } from '../logic/NodeJsCompatibility';\nimport { PrintUtilities } from '@rushstack/terminal';\nimport { RushConstants } from '../logic/RushConstants';\nimport { RushGlobalFolder } from '../api/RushGlobalFolder';\nimport { PurgeManager } from '../logic/PurgeManager';\n\nimport type { IBuiltInPluginConfiguration } from '../pluginFramework/PluginLoader/BuiltInPluginLoader';\nimport type { BaseInstallManager } from '../logic/base/BaseInstallManager';\nimport type { IInstallManagerOptions } from '../logic/base/BaseInstallManagerTypes';\nimport { objectsAreDeepEqual } from '../utilities/objectUtilities';\nimport { Utilities } from '../utilities/Utilities';\nimport type { Subspace } from '../api/Subspace';\nimport type { PnpmOptionsConfiguration } from '../logic/pnpm/PnpmOptionsConfiguration';\nimport { EnvironmentVariableNames } from '../api/EnvironmentConfiguration';\n\nconst RUSH_SKIP_CHECKS_PARAMETER: string = '--rush-skip-checks';\n\n/**\n * Options for RushPnpmCommandLineParser\n */\nexport interface IRushPnpmCommandLineParserOptions {\n  alreadyReportedNodeTooNewError?: boolean;\n  builtInPluginConfigurations?: IBuiltInPluginConfiguration[];\n  terminalProvider?: ITerminalProvider;\n}\n\nfunction _reportErrorAndSetExitCode(error: Error, terminal: ITerminal, debugEnabled: boolean): never {\n  if (!(error instanceof AlreadyReportedError)) {\n    const prefix: string = 'ERROR: ';\n    terminal.writeErrorLine('\\n' + PrintUtilities.wrapWords(prefix + error.message));\n  }\n\n  if (debugEnabled) {\n    // If catchSyncErrors() called this, then show a call stack similar to what Node.js\n    // would show for an uncaught error\n    terminal.writeErrorLine('\\n' + error.stack);\n  }\n\n  process.exit(process.exitCode ?? 1);\n}\n\nexport class RushPnpmCommandLineParser {\n  private readonly _terminal: ITerminal;\n  private readonly _rushConfiguration: RushConfiguration;\n  private readonly _pnpmArgs: string[];\n  private _commandName: string | undefined;\n  private readonly _debugEnabled: boolean;\n  private _subspace: Subspace;\n\n  private constructor(\n    options: IRushPnpmCommandLineParserOptions,\n    terminal: ITerminal,\n    debugEnabled: boolean\n  ) {\n    this._debugEnabled = debugEnabled;\n\n    this._terminal = terminal;\n\n    // Are we in a Rush repo?\n    const rushConfiguration: RushConfiguration | undefined = RushConfiguration.tryLoadFromDefaultLocation({\n      // showVerbose is false because the logging message may break JSON output\n      showVerbose: false\n    });\n    NodeJsCompatibility.warnAboutCompatibilityIssues({\n      isRushLib: true,\n      alreadyReportedNodeTooNewError: !!options.alreadyReportedNodeTooNewError,\n      rushConfiguration\n    });\n\n    if (!rushConfiguration) {\n      throw new Error(\n        'The \"rush-pnpm\" command must be executed in a folder that is under a Rush workspace folder'\n      );\n    }\n    this._rushConfiguration = rushConfiguration;\n\n    if (rushConfiguration.packageManager !== 'pnpm') {\n      throw new Error(\n        `The \"rush-pnpm\" command requires your ${RushConstants.rushJsonFilename} to be configured to use the PNPM package manager`\n      );\n    }\n\n    if (!rushConfiguration.pnpmOptions.useWorkspaces) {\n      const pnpmConfigFilename: string =\n        rushConfiguration.pnpmOptions.jsonFilename || RushConstants.rushJsonFilename;\n      throw new Error(\n        `The \"rush-pnpm\" command requires the \"useWorkspaces\" setting to be enabled in ${pnpmConfigFilename}`\n      );\n    }\n\n    let pnpmArgs: string[] = [];\n    let subspaceName: string = 'default';\n\n    if (process.argv.indexOf('--subspace') >= 0) {\n      if (process.argv[2] !== '--subspace') {\n        throw new Error(\n          'If you want to specify a subspace, you should place \"--subspace <subspace_name>\" immediately after the \"rush-pnpm\" command'\n        );\n      }\n\n      subspaceName = process.argv[3];\n\n      // 0 = node.exe\n      // 1 = rush-pnpm\n      // 2 = --subspace\n      // 3 = <subspace_name>\n      pnpmArgs = process.argv.slice(4);\n    } else {\n      // 0 = node.exe\n      // 1 = rush-pnpm\n      pnpmArgs = process.argv.slice(2);\n    }\n\n    this._pnpmArgs = pnpmArgs;\n\n    const subspace: Subspace = rushConfiguration.getSubspace(subspaceName);\n    this._subspace = subspace;\n\n    const workspaceFolder: string = subspace.getSubspaceTempFolderPath();\n    const workspaceFilePath: string = path.join(workspaceFolder, 'pnpm-workspace.yaml');\n\n    if (!FileSystem.exists(workspaceFilePath)) {\n      this._terminal.writeErrorLine('Error: The PNPM workspace file has not been generated:');\n      this._terminal.writeErrorLine(`  ${workspaceFilePath}\\n`);\n      this._terminal.writeLine(Colorize.cyan(`Do you need to run \"rush install\" or \"rush update\"?`));\n      throw new AlreadyReportedError();\n    }\n\n    if (!FileSystem.exists(rushConfiguration.packageManagerToolFilename)) {\n      this._terminal.writeErrorLine('Error: The PNPM local binary has not been installed yet.');\n      this._terminal.writeLine('\\n' + Colorize.cyan(`Do you need to run \"rush install\" or \"rush update\"?`));\n      throw new AlreadyReportedError();\n    }\n  }\n\n  public static async initializeAsync(\n    options: IRushPnpmCommandLineParserOptions\n  ): Promise<RushPnpmCommandLineParser> {\n    const debugEnabled: boolean = process.argv.indexOf('--debug') >= 0;\n    const verboseEnabled: boolean = process.argv.indexOf('--verbose') >= 0;\n    const localTerminalProvider: ITerminalProvider =\n      options.terminalProvider ??\n      new ConsoleTerminalProvider({\n        debugEnabled,\n        verboseEnabled\n      });\n    const terminal: ITerminal = new Terminal(localTerminalProvider);\n\n    try {\n      const rushPnpmCommandLineParser: RushPnpmCommandLineParser = new RushPnpmCommandLineParser(\n        options,\n        terminal,\n        debugEnabled\n      );\n      await rushPnpmCommandLineParser._validatePnpmUsageAsync(rushPnpmCommandLineParser._pnpmArgs);\n      return rushPnpmCommandLineParser;\n    } catch (error) {\n      _reportErrorAndSetExitCode(error as Error, terminal, debugEnabled);\n    }\n  }\n\n  public async executeAsync(): Promise<void> {\n    // Node.js can sometimes accidentally terminate with a zero exit code  (e.g. for an uncaught\n    // promise exception), so we start with the assumption that the exit code is 1\n    // and set it to 0 only on success.\n    process.exitCode = 1;\n    await this._executeAsync();\n\n    if (process.exitCode === 0) {\n      await this._postExecuteAsync();\n    }\n  }\n\n  private async _validatePnpmUsageAsync(pnpmArgs: string[]): Promise<void> {\n    if (pnpmArgs[0] === RUSH_SKIP_CHECKS_PARAMETER) {\n      pnpmArgs.shift();\n      // Ignore other checks\n      return;\n    }\n\n    if (pnpmArgs.length === 0) {\n      return;\n    }\n    const firstArg: string = pnpmArgs[0];\n\n    // Detect common safe invocations\n    if (pnpmArgs.includes('-h') || pnpmArgs.includes('--help') || pnpmArgs.includes('-?')) {\n      return;\n    }\n\n    if (pnpmArgs.length === 1) {\n      if (firstArg === '-v' || firstArg === '--version') {\n        return;\n      }\n    }\n\n    const BYPASS_NOTICE: string = `To bypass this check, add \"${RUSH_SKIP_CHECKS_PARAMETER}\" as the very first command line option.`;\n\n    if (!/^[a-z]+([a-z0-9\\-])*$/.test(firstArg)) {\n      // We can't parse this CLI syntax\n      this._terminal.writeErrorLine(\n        `Warning: The \"rush-pnpm\" wrapper expects a command verb before \"${firstArg}\"\\n`\n      );\n      this._terminal.writeLine(Colorize.cyan(BYPASS_NOTICE));\n      throw new AlreadyReportedError();\n    } else {\n      const commandName: string = firstArg;\n\n      // Also accept SKIP_RUSH_CHECKS_PARAMETER immediately after the command verb\n      if (pnpmArgs[1] === RUSH_SKIP_CHECKS_PARAMETER) {\n        pnpmArgs.splice(1, 1);\n        return;\n      }\n\n      if (pnpmArgs.indexOf(RUSH_SKIP_CHECKS_PARAMETER) >= 0) {\n        // We do not attempt to parse PNPM's complete CLI syntax, so we cannot be sure how to interpret\n        // strings that appear outside of the specific patterns that this parser recognizes\n        this._terminal.writeErrorLine(\n          PrintUtilities.wrapWords(\n            `Error: The \"${RUSH_SKIP_CHECKS_PARAMETER}\" option must be the first parameter for the \"rush-pnpm\" command.`\n          )\n        );\n        throw new AlreadyReportedError();\n      }\n\n      this._commandName = commandName;\n\n      // Warn about commands known not to work\n      /* eslint-disable no-fallthrough */\n      switch (commandName) {\n        // Blocked\n        case 'import': {\n          this._terminal.writeErrorLine(\n            PrintUtilities.wrapWords(\n              `Error: The \"pnpm ${commandName}\" command is known to be incompatible with Rush's environment.`\n            ) + '\\n'\n          );\n          this._terminal.writeLine(Colorize.cyan(BYPASS_NOTICE));\n          throw new AlreadyReportedError();\n        }\n\n        // Show warning for install commands\n        case 'add':\n        case 'install':\n        /* synonym */\n        case 'i':\n        case 'install-test':\n        /* synonym */\n        case 'it': {\n          this._terminal.writeErrorLine(\n            PrintUtilities.wrapWords(\n              `Error: The \"pnpm ${commandName}\" command is incompatible with Rush's environment.` +\n                ` Use the \"rush install\" or \"rush update\" commands instead.`\n            ) + '\\n'\n          );\n          this._terminal.writeLine(Colorize.cyan(BYPASS_NOTICE));\n          throw new AlreadyReportedError();\n        }\n\n        // Show warning\n        case 'link':\n        /* synonym */\n        case 'ln':\n        case 'remove':\n        /* synonym */\n        case 'rm':\n        case 'unlink':\n        case 'update':\n        /* synonym */\n        case 'up': {\n          this._terminal.writeWarningLine(\n            PrintUtilities.wrapWords(\n              `Warning: The \"pnpm ${commandName}\" command makes changes that may invalidate Rush's workspace state.`\n            ) + '\\n'\n          );\n          this._terminal.writeWarningLine(\n            `==> Consider running \"rush install\" or \"rush update\" afterwards.\\n`\n          );\n          break;\n        }\n\n        // Know safe after validation\n        case 'patch': {\n          const semver: typeof import('semver') = await import('semver');\n          /**\n           * If you were to accidentally attempt to use rush-pnpm patch with a pnpmVersion < 7.4.0, pnpm patch may fallback to the system patch command.\n           * For instance, /usr/bin/patch which may just hangs forever\n           * So, erroring out the command if the pnpm version is < 7.4.0\n           */\n          if (semver.lt(this._rushConfiguration.packageManagerToolVersion, '7.4.0')) {\n            this._terminal.writeErrorLine(\n              PrintUtilities.wrapWords(\n                `Error: The \"pnpm patch\" command is added after pnpm@7.4.0.` +\n                  ` Please update \"pnpmVersion\" >= 7.4.0 in ${RushConstants.rushJsonFilename} file and run \"rush update\" to use this command.`\n              ) + '\\n'\n            );\n            throw new AlreadyReportedError();\n          }\n          break;\n        }\n        case 'patch-commit': {\n          const pnpmOptionsJsonFilename: string = path.join(\n            this._rushConfiguration.commonRushConfigFolder,\n            RushConstants.pnpmConfigFilename\n          );\n          if (this._rushConfiguration.rushConfigurationJson.pnpmOptions) {\n            this._terminal.writeErrorLine(\n              PrintUtilities.wrapWords(\n                `Error: The \"pnpm patch-commit\" command is incompatible with specifying \"pnpmOptions\" in ${RushConstants.rushJsonFilename} file.` +\n                  ` Please move the content of \"pnpmOptions\" in ${RushConstants.rushJsonFilename} file to ${pnpmOptionsJsonFilename}`\n              ) + '\\n'\n            );\n            throw new AlreadyReportedError();\n          }\n          break;\n        }\n        case 'patch-remove': {\n          const semver: typeof import('semver') = await import('semver');\n          /**\n           * The \"patch-remove\" command was introduced in pnpm version 8.5.0\n           */\n          if (semver.lt(this._rushConfiguration.packageManagerToolVersion, '8.5.0')) {\n            this._terminal.writeErrorLine(\n              PrintUtilities.wrapWords(\n                `Error: The \"pnpm patch-remove\" command is added after pnpm@8.5.0.` +\n                  ` Please update \"pnpmVersion\" >= 8.5.0 in ${RushConstants.rushJsonFilename} file and run \"rush update\" to use this command.`\n              ) + '\\n'\n            );\n            throw new AlreadyReportedError();\n          }\n          break;\n        }\n\n        // Known safe\n        case 'audit':\n        case 'exec':\n        case 'list':\n        /* synonym */\n        case 'ls':\n        case 'outdated':\n        case 'pack':\n        case 'prune':\n        case 'publish':\n        case 'rebuild':\n        /* synonym */\n        case 'rb':\n        case 'root':\n        case 'run':\n        case 'start':\n        case 'store':\n        case 'test':\n        /* synonym */\n        case 't':\n        case 'why': {\n          break;\n        }\n\n        // Unknown\n        default: {\n          this._terminal.writeErrorLine(\n            PrintUtilities.wrapWords(\n              `Error: The \"pnpm ${commandName}\" command has not been tested with Rush's environment. It may be incompatible.`\n            ) + '\\n'\n          );\n          this._terminal.writeLine(Colorize.cyan(BYPASS_NOTICE));\n        }\n      }\n      /* eslint-enable no-fallthrough */\n    }\n  }\n\n  private async _executeAsync(): Promise<void> {\n    const rushConfiguration: RushConfiguration = this._rushConfiguration;\n    const workspaceFolder: string = this._subspace.getSubspaceTempFolderPath();\n    const pnpmEnvironmentMap: EnvironmentMap = new EnvironmentMap(process.env);\n    pnpmEnvironmentMap.set('NPM_CONFIG_WORKSPACE_DIR', workspaceFolder);\n\n    if (rushConfiguration.pnpmOptions.pnpmStorePath) {\n      pnpmEnvironmentMap.set('NPM_CONFIG_STORE_DIR', rushConfiguration.pnpmOptions.pnpmStorePath);\n      pnpmEnvironmentMap.set('NPM_CONFIG_CACHE_DIR', rushConfiguration.pnpmOptions.pnpmStorePath);\n      pnpmEnvironmentMap.set('NPM_CONFIG_STATE_DIR', rushConfiguration.pnpmOptions.pnpmStorePath);\n    }\n\n    if (rushConfiguration.pnpmOptions.environmentVariables) {\n      for (const [envKey, { value: envValue, override }] of Object.entries(\n        rushConfiguration.pnpmOptions.environmentVariables\n      )) {\n        if (override) {\n          pnpmEnvironmentMap.set(envKey, envValue);\n        } else {\n          if (undefined === pnpmEnvironmentMap.get(envKey)) {\n            pnpmEnvironmentMap.set(envKey, envValue);\n          }\n        }\n      }\n    }\n\n    let onStdoutStreamChunk: ((chunk: string) => string | void) | undefined;\n    switch (this._commandName) {\n      case 'patch': {\n        // Replace `pnpm patch-commit` with `rush-pnpm patch-commit` when running\n        // `pnpm patch` to avoid the `pnpm patch` command being suggested in the output\n        onStdoutStreamChunk = (stdoutChunk: string) => {\n          return stdoutChunk.replace(\n            /pnpm patch-commit/g,\n            `rush-pnpm --subspace ${this._subspace.subspaceName} patch-commit`\n          );\n        };\n\n        break;\n      }\n    }\n\n    try {\n      const { exitCode } = await Utilities.executeCommandAsync({\n        command: rushConfiguration.packageManagerToolFilename,\n        args: this._pnpmArgs,\n        workingDirectory: process.cwd(),\n        environment: pnpmEnvironmentMap.toObject(),\n        keepEnvironment: true,\n        onStdoutStreamChunk,\n        captureExitCodeAndSignal: true\n      });\n\n      if (typeof exitCode === 'number') {\n        process.exitCode = exitCode;\n      } else {\n        // If the exit code is not a number, the process was terminated by a signal\n        process.exitCode = 1;\n      }\n    } catch (e) {\n      this._terminal.writeDebugLine(`Error: ${e}`);\n    }\n  }\n\n  private async _postExecuteAsync(): Promise<void> {\n    const commandName: string | undefined = this._commandName;\n    if (!commandName) {\n      return;\n    }\n\n    const subspaceTempFolder: string = this._subspace.getSubspaceTempFolderPath();\n\n    switch (commandName) {\n      case 'patch-remove':\n      case 'patch-commit': {\n        // why need to throw error when pnpm-config.json not exists?\n        // 1. pnpm-config.json is required for `rush-pnpm patch-commit`. Rush writes the patched dependency to the pnpm-config.json when finishes.\n        // 2. we can not fallback to use Monorepo config folder (common/config/rush) due to that this command is intended to apply to input subspace only.\n        //    It will produce unexpected behavior if we use the fallback.\n        if (this._subspace.getPnpmOptions() === undefined) {\n          const subspaceConfigFolder: string = this._subspace.getSubspaceConfigFolderPath();\n          this._terminal.writeErrorLine(\n            `The \"rush-pnpm patch-commit\" command cannot proceed without a pnpm-config.json file.` +\n              `  Create one in this folder: ${subspaceConfigFolder}`\n          );\n          break;\n        }\n\n        // Example: \"C:\\MyRepo\\common\\temp\\package.json\"\n        const commonPackageJsonFilename: string = `${subspaceTempFolder}/${FileConstants.PackageJson}`;\n        const commonPackageJson: JsonObject = JsonFile.load(commonPackageJsonFilename);\n        const newGlobalPatchedDependencies: Record<string, string> | undefined =\n          commonPackageJson?.pnpm?.patchedDependencies;\n        const pnpmOptions: PnpmOptionsConfiguration | undefined = this._subspace.getPnpmOptions();\n        const currentGlobalPatchedDependencies: Record<string, string> | undefined =\n          pnpmOptions?.globalPatchedDependencies;\n\n        if (!objectsAreDeepEqual(currentGlobalPatchedDependencies, newGlobalPatchedDependencies)) {\n          const commonTempPnpmPatchesFolder: string = `${subspaceTempFolder}/${RushConstants.pnpmPatchesFolderName}`;\n          const rushPnpmPatchesFolder: string = this._subspace.getSubspacePnpmPatchesFolderPath();\n\n          // Copy (or delete) common\\temp\\subspace\\patches\\ --> common\\config\\pnpm-patches\\ OR common\\config\\rush\\pnpm-patches\\\n          if (FileSystem.exists(commonTempPnpmPatchesFolder)) {\n            FileSystem.ensureEmptyFolder(rushPnpmPatchesFolder);\n            // eslint-disable-next-line no-console\n            console.log(`Copying ${commonTempPnpmPatchesFolder}`);\n            // eslint-disable-next-line no-console\n            console.log(`  --> ${rushPnpmPatchesFolder}`);\n            FileSystem.copyFiles({\n              sourcePath: commonTempPnpmPatchesFolder,\n              destinationPath: rushPnpmPatchesFolder\n            });\n          } else {\n            if (FileSystem.exists(rushPnpmPatchesFolder)) {\n              // eslint-disable-next-line no-console\n              console.log(`Deleting ${rushPnpmPatchesFolder}`);\n              FileSystem.deleteFolder(rushPnpmPatchesFolder);\n            }\n          }\n\n          // Update patchedDependencies to pnpm configuration file\n          pnpmOptions?.updateGlobalPatchedDependencies(newGlobalPatchedDependencies);\n\n          // Rerun installation to update\n          await this._doRushUpdateAsync();\n\n          this._terminal.writeWarningLine(\n            `Rush refreshed the ${RushConstants.pnpmConfigFilename}, shrinkwrap file and patch files under the ` +\n              `\"${commonTempPnpmPatchesFolder}\" folder.\\n` +\n              '  Please commit this change to Git.'\n          );\n        }\n        break;\n      }\n    }\n  }\n\n  private async _doRushUpdateAsync(): Promise<void> {\n    this._terminal.writeLine();\n    this._terminal.writeLine(Colorize.green('Running \"rush update\"'));\n    this._terminal.writeLine();\n\n    const rushGlobalFolder: RushGlobalFolder = new RushGlobalFolder();\n    const purgeManager: PurgeManager = new PurgeManager(this._rushConfiguration, rushGlobalFolder);\n    const installManagerOptions: IInstallManagerOptions = {\n      debug: this._debugEnabled,\n      allowShrinkwrapUpdates: true,\n      bypassPolicy: false,\n      noLink: false,\n      fullUpgrade: false,\n      recheckShrinkwrap: true,\n      networkConcurrency: undefined,\n      offline: false,\n      collectLogFile: false,\n      variant: process.env[EnvironmentVariableNames.RUSH_VARIANT], // For `rush-pnpm`, only use the env var\n      maxInstallAttempts: RushConstants.defaultMaxInstallAttempts,\n      pnpmFilterArgumentValues: [],\n      selectedProjects: new Set(this._rushConfiguration.projects),\n      checkOnly: false,\n      subspace: this._subspace,\n      terminal: this._terminal\n    };\n\n    const installManagerFactoryModule: typeof import('../logic/InstallManagerFactory') = await import(\n      /* webpackChunkName: 'InstallManagerFactory' */\n      '../logic/InstallManagerFactory'\n    );\n    const installManager: BaseInstallManager =\n      await installManagerFactoryModule.InstallManagerFactory.getInstallManagerAsync(\n        this._rushConfiguration,\n        rushGlobalFolder,\n        purgeManager,\n        installManagerOptions\n      );\n    try {\n      await installManager.doInstallAsync();\n    } finally {\n      await purgeManager.startDeleteAllAsync();\n    }\n  }\n}\n"]}