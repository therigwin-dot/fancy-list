{"version":3,"file":"RushPnpmCommandLine.js","sourceRoot":"","sources":["../../src/cli/RushPnpmCommandLine.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAG3D,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AAIxE,MAAM,OAAO,mBAAmB;IACvB,MAAM,CAAC,MAAM,CAAC,eAAuB,EAAE,OAAuC;QACnF,yBAAyB,CAAC,eAAe,CAAC,OAAO,CAAC;YAChD,yEAAyE;aACxE,IAAI,CAAC,CAAC,yBAAyB,EAAE,EAAE,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC;YAC9E,sCAAsC;aACrC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { ILaunchOptions } from '../api/Rush';\nimport { RushPnpmCommandLineParser } from './RushPnpmCommandLineParser';\n\nexport interface ILaunchRushPnpmInternalOptions extends ILaunchOptions {}\n\nexport class RushPnpmCommandLine {\n  public static launch(launcherVersion: string, options: ILaunchRushPnpmInternalOptions): void {\n    RushPnpmCommandLineParser.initializeAsync(options)\n      // RushPnpmCommandLineParser.executeAsync should never reject the promise\n      .then((rushPnpmCommandLineParser) => rushPnpmCommandLineParser.executeAsync())\n      // eslint-disable-next-line no-console\n      .catch(console.error);\n  }\n}\n"]}