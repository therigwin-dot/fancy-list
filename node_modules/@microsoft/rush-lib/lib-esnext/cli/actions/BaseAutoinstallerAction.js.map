{"version":3,"file":"BaseAutoinstallerAction.js","sourceRoot":"","sources":["../../../src/cli/actions/BaseAutoinstallerAction.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAK3D,OAAO,EAAE,cAAc,EAA+B,MAAM,kBAAkB,CAAC;AAC/E,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAE1D,MAAM,OAAgB,uBAAwB,SAAQ,cAAc;IAIlE,YAAmB,OAA+B;QAChD,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACtC,iBAAiB,EAAE,QAAQ;YAC3B,YAAY,EAAE,oBAAoB;YAClC,QAAQ,EAAE,IAAI;YACd,WAAW,EACT,8FAA8F;SACjG,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;IACxC,CAAC;IAIS,KAAK,CAAC,QAAQ;QACtB,MAAM,iBAAiB,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACnD,MAAM,aAAa,GAAkB,IAAI,aAAa,CAAC;YACrD,iBAAiB;YACjB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;SACxC,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAEvC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { IRequiredCommandLineStringParameter } from '@rushstack/ts-command-line';\nimport type { ITerminal } from '@rushstack/terminal';\n\nimport { BaseRushAction, type IBaseRushActionOptions } from './BaseRushAction';\nimport { Autoinstaller } from '../../logic/Autoinstaller';\n\nexport abstract class BaseAutoinstallerAction extends BaseRushAction {\n  protected readonly _name: IRequiredCommandLineStringParameter;\n  protected readonly _terminal: ITerminal;\n\n  public constructor(options: IBaseRushActionOptions) {\n    super(options);\n\n    this._name = this.defineStringParameter({\n      parameterLongName: '--name',\n      argumentName: 'AUTOINSTALLER_NAME',\n      required: true,\n      description:\n        'The name of the autoinstaller, which must be one of the folders under common/autoinstallers.'\n    });\n\n    this._terminal = this.parser.terminal;\n  }\n\n  protected abstract prepareAsync(autoinstaller: Autoinstaller): Promise<void>;\n\n  protected async runAsync(): Promise<void> {\n    const autoinstallerName: string = this._name.value;\n    const autoinstaller: Autoinstaller = new Autoinstaller({\n      autoinstallerName,\n      rushConfiguration: this.rushConfiguration,\n      rushGlobalFolder: this.rushGlobalFolder\n    });\n\n    await this.prepareAsync(autoinstaller);\n\n    this._terminal.writeLine();\n    this._terminal.writeLine('Success.');\n  }\n}\n"]}