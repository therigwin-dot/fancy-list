{"version":3,"file":"PurgeAction.js","sourceRoot":"","sources":["../../../src/cli/actions/PurgeAction.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAG3D,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAE1D,MAAM,OAAO,WAAY,SAAQ,cAAc;IAG7C,YAAmB,MAA6B;QAC9C,KAAK,CAAC;YACJ,UAAU,EAAE,OAAO;YACnB,OAAO,EACL,mGAAmG;YACrG,aAAa,EACX,sFAAsF;gBACtF,iFAAiF;YACnF,MAAM;SACP,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC/C,iBAAiB,EAAE,UAAU;YAC7B,WAAW,EACT,oFAAoF;gBACpF,2FAA2F;gBAC3F,uGAAuG;SAC1G,CAAC,CAAC;IACL,CAAC;IAES,KAAK,CAAC,QAAQ;QACtB,MAAM,SAAS,GAAc,SAAS,CAAC,KAAK,EAAE,CAAC;QAE/C,MAAM,aAAa,GAAkB,IAAI,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/E,MAAM,YAAY,GAAiB,IAAI,YAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEnG,MAAM,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEjD,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAM,EAAE,CAAC;YACjC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC7B,CAAC;aAAM,CAAC;YACN,YAAY,CAAC,WAAW,EAAE,CAAC;QAC7B,CAAC;QAED,MAAM,YAAY,CAAC,mBAAmB,EAAE,CAAC;QAEzC,sCAAsC;QACtC,OAAO,CAAC,GAAG,CACT,IAAI;YACF,QAAQ,CAAC,KAAK,CACZ,sEAAsE,SAAS,CAAC,QAAQ,EAAE,GAAG,CAC9F,CACJ,CAAC;IACJ,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { CommandLineFlagParameter } from '@rushstack/ts-command-line';\nimport { Colorize } from '@rushstack/terminal';\n\nimport { BaseRushAction } from './BaseRushAction';\nimport type { RushCommandLineParser } from '../RushCommandLineParser';\nimport { Stopwatch } from '../../utilities/Stopwatch';\nimport { PurgeManager } from '../../logic/PurgeManager';\nimport { UnlinkManager } from '../../logic/UnlinkManager';\n\nexport class PurgeAction extends BaseRushAction {\n  private readonly _unsafeParameter: CommandLineFlagParameter;\n\n  public constructor(parser: RushCommandLineParser) {\n    super({\n      actionName: 'purge',\n      summary:\n        'For diagnostic purposes, use this command to delete caches and other temporary files used by Rush',\n      documentation:\n        'The \"rush purge\" command is used to delete temporary files created by Rush.  This is' +\n        ' useful if you are having problems and suspect that cache files may be corrupt.',\n      parser\n    });\n\n    this._unsafeParameter = this.defineFlagParameter({\n      parameterLongName: '--unsafe',\n      description:\n        '(UNSAFE!) Also delete shared files such as the package manager instances stored in' +\n        ' the \".rush\" folder in the user\\'s home directory.  This is a more aggressive fix that is' +\n        ' NOT SAFE to run in a live environment because it will cause other concurrent Rush processes to fail.'\n    });\n  }\n\n  protected async runAsync(): Promise<void> {\n    const stopwatch: Stopwatch = Stopwatch.start();\n\n    const unlinkManager: UnlinkManager = new UnlinkManager(this.rushConfiguration);\n    const purgeManager: PurgeManager = new PurgeManager(this.rushConfiguration, this.rushGlobalFolder);\n\n    await unlinkManager.unlinkAsync(/*force:*/ true);\n\n    if (this._unsafeParameter.value!) {\n      purgeManager.purgeUnsafe();\n    } else {\n      purgeManager.purgeNormal();\n    }\n\n    await purgeManager.startDeleteAllAsync();\n\n    // eslint-disable-next-line no-console\n    console.log(\n      '\\n' +\n        Colorize.green(\n          `Rush purge started successfully and will complete asynchronously. (${stopwatch.toString()})`\n        )\n    );\n  }\n}\n"]}