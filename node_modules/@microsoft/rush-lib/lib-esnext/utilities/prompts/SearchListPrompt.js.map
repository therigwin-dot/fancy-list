{"version":3,"file":"SearchListPrompt.js","sourceRoot":"","sources":["../../../src/utilities/prompts/SearchListPrompt.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { Interface } from 'readline';\nimport { Colorize } from '@rushstack/terminal';\n\n// Modified from the choice list prompt in inquirer:\n// https://github.com/SBoudrias/Inquirer.js/blob/inquirer%407.3.3/packages/inquirer/lib/prompts/list.js\n// Extended to include text filtering for the list\nimport type { default as inquirer, Answers, ListQuestion, DistinctChoice } from 'inquirer';\nimport BasePrompt from 'inquirer/lib/prompts/base';\nimport observe from 'inquirer/lib/utils/events';\nimport Paginator from 'inquirer/lib/utils/paginator';\nimport type Separator from 'inquirer/lib/objects/separator';\nimport type Choice from 'inquirer/lib/objects/choice';\nimport type Choices from 'inquirer/lib/objects/choices';\n\nimport figures from 'figures';\n\nimport { map, takeUntil } from 'rxjs/operators';\n\ninterface IKeyPressEvent {\n  key: { name: string; ctrl: boolean; sequence?: string };\n}\n\nexport class SearchListPrompt extends BasePrompt<ListQuestion> {\n  protected done!: (result: unknown) => void;\n\n  private readonly _paginator: Paginator;\n  private _selected: number = 0;\n  private _query: string = '';\n  private _firstRender: boolean = true;\n\n  public constructor(question: ListQuestion, readline: Interface, answers: Answers) {\n    super(question, readline, answers);\n\n    if (!this.opt.choices) {\n      this.throwParamError('choices');\n    }\n\n    const isDefaultANumber: boolean = typeof this.opt.default === 'number';\n    if (isDefaultANumber && this.opt.default >= 0 && this.opt.default < this.opt.choices.realLength) {\n      this._selected = this.opt.default;\n    } else if (!isDefaultANumber && this.opt.default !== null) {\n      const index: number = this.opt.choices.realChoices.findIndex(({ value }) => value === this.opt.default);\n      this._selected = Math.max(index, 0);\n    }\n\n    // Make sure no default is set (so it won't be printed)\n    this.opt.default = null;\n\n    this._paginator = new Paginator(this.screen);\n  }\n\n  protected _run(callback: (result: unknown) => void): this {\n    this.done = callback;\n\n    // eslint-disable-next-line @typescript-eslint/typedef\n    const events = observe(this.rl);\n    // eslint-disable-next-line @typescript-eslint/typedef\n    const validation = this.handleSubmitEvents(events.line.pipe(map(this._getCurrentValue.bind(this))));\n\n    //eslint-disable-next-line no-void\n    void validation.success.forEach(this._onSubmit.bind(this));\n    //eslint-disable-next-line no-void\n    void validation.error.forEach(this._onError.bind(this));\n\n    // eslint-disable-next-line no-void\n    void events.numberKey\n      .pipe(takeUntil(events.line))\n      .forEach(this._onNumberKey.bind(this) as (evt: unknown) => void);\n\n    // eslint-disable-next-line no-void\n    void events.keypress\n      .pipe(takeUntil(validation.success))\n      .forEach(this._onKeyPress.bind(this) as (evt: unknown) => void);\n\n    this.render();\n    return this;\n  }\n\n  private _onUpKey(): void {\n    return this._adjustSelected(-1);\n  }\n\n  private _onDownKey(): void {\n    return this._adjustSelected(1);\n  }\n\n  private _onNumberKey(input: number): void {\n    if (input <= this.opt.choices.realLength) {\n      this._selected = input - 1;\n    }\n\n    this.render();\n  }\n\n  /**\n   * When user press `enter` key\n   */\n  private _onSubmit(state: { value: unknown }): void {\n    this.status = 'answered';\n    // Rerender prompt (and clean subline error)\n    this.render();\n\n    this.screen.done();\n    this.done(state.value);\n  }\n\n  private _onError(state: inquirer.prompts.FailedPromptStateData): void {\n    this.render(state.isValid || undefined);\n  }\n\n  private _onKeyPress(event: IKeyPressEvent): void {\n    if (event.key.ctrl) {\n      switch (event.key.name) {\n        case 'backspace':\n          return this._setQuery('');\n      }\n    } else {\n      switch (event.key.name) {\n        // Go to beginning of list\n        case 'home':\n          return this._adjustSelected(-Infinity);\n        // Got to end of list\n        case 'end':\n          return this._adjustSelected(Infinity);\n        // Paginate up\n        case 'pageup':\n          return this._adjustSelected(-(this.opt.pageSize ?? 1));\n        // Paginate down\n        case 'pagedown':\n          return this._adjustSelected(this.opt.pageSize ?? 1);\n\n        case 'backspace':\n          return this._setQuery(this._query.slice(0, -1));\n        case 'up':\n          return this._onUpKey();\n        case 'down':\n          return this._onDownKey();\n\n        default:\n          if (event.key.sequence && event.key.sequence.length === 1) {\n            this._setQuery(this._query + event.key.sequence);\n          }\n      }\n    }\n  }\n\n  private _setQuery(query: string): void {\n    this._query = query;\n    const filter: string = query.toUpperCase();\n\n    const { choices } = this.opt.choices;\n    for (const choice of choices as Iterable<{ disabled?: boolean; type: string; short: string }>) {\n      if (choice.type !== 'separator') {\n        choice.disabled = !choice.short.toUpperCase().includes(filter);\n      }\n    }\n\n    // Select the first valid option\n    this._adjustSelected(0);\n  }\n\n  // Provide the delta in deplayed choices and change the selected\n  // index accordingly by the delta in real choices\n  private _adjustSelected(delta: number): void {\n    const { choices } = this.opt.choices;\n    const pointer: number = this._selected;\n    let lastValidIndex: number = pointer;\n\n    // if delta is less than 0, we are moving up in list w/ selected index\n    if (delta < 0) {\n      for (let i: number = pointer - 1; i >= 0; i--) {\n        const choice: Choice<Answers> = choices[i] as Choice<Answers>;\n        if (isValidChoice(choice)) {\n          ++delta;\n          lastValidIndex = i;\n          // if delta is 0, we have found the next valid choice that has an index less than the selected index\n          if (delta === 0) {\n            break;\n          }\n        }\n      }\n    } else {\n      // if delta is greater than 0, we are moving down in list w/ selected index\n      // Also, if delta is exactly 0, the request is to adjust to the first\n      // displayed choice that has an index >= the current selected choice.\n      ++delta;\n      for (let i: number = pointer, len: number = choices.length; i < len; i++) {\n        const choice: Choice<Answers> = choices[i] as Choice<Answers>;\n        if (isValidChoice(choice)) {\n          --delta;\n          lastValidIndex = i;\n          // if delta is 0, we have found the next valid choice that has an index greater than the selected index\n          if (delta === 0) {\n            break;\n          }\n        }\n      }\n    }\n\n    this._selected = lastValidIndex;\n    this.render();\n  }\n\n  private _getCurrentValue(): string {\n    return this.opt.choices.getChoice(this._selected).value;\n  }\n\n  public render(error?: string): void {\n    // Render the question\n    let message: string = this.getQuestion();\n    let bottomContent: string = '';\n\n    if (this._firstRender) {\n      message += Colorize.dim(' (Use arrow keys)');\n    }\n\n    // Render choices or answer depending on the state\n    if (this.status === 'answered') {\n      message += Colorize.cyan(this.opt.choices.getChoice(this._selected).short!);\n    } else {\n      const choicesStr: string = listRender(this.opt.choices, this._selected);\n      const indexPosition: number = this.opt.choices.indexOf(\n        this.opt.choices.getChoice(this._selected) as Choice<Answers>\n      );\n      let realIndexPosition: number = 0;\n      const { choices } = this.opt.choices;\n\n      for (let i: number = 0; i < indexPosition; i++) {\n        const value: DistinctChoice<Answers> = choices[i];\n\n        // Add line if it's a separator\n        if (value.type === 'separator') {\n          realIndexPosition++;\n          continue;\n        }\n\n        // Do not render choices which disabled property\n        // these represent choices that are filtered out\n        if ((value as { disabled?: unknown }).disabled) {\n          continue;\n        }\n\n        const line: string | undefined = value.name;\n        // Non-strings take up one line\n        if (typeof line !== 'string') {\n          realIndexPosition++;\n          continue;\n        }\n\n        // Calculate lines taken up by string\n        // eslint-disable-next-line no-bitwise\n        realIndexPosition += ((line.length / process.stdout.columns!) | 0) + 1;\n      }\n      message += `\\n${Colorize.white(Colorize.bold('Start typing to filter:'))} ${Colorize.cyan(\n        this._query\n      )}`;\n      // @ts-expect-error Types are wrong\n      message += '\\n' + this._paginator.paginate(choicesStr, realIndexPosition, this.opt.pageSize!);\n    }\n\n    if (error) {\n      bottomContent = Colorize.red('>> ') + error;\n    }\n\n    this.screen.render(message, bottomContent);\n  }\n}\n\nfunction listRender(choices: Choices, pointer: number): string {\n  let output: string = '';\n\n  choices.forEach((choice: Separator | Choice<Answers>, i: number) => {\n    if (choice.type === 'separator') {\n      output += ' ' + choice + '\\n';\n      return;\n    }\n\n    if (!choice.disabled) {\n      const line: string = choice.name;\n      if (i === pointer) {\n        output += Colorize.cyan(figures.pointer + line);\n      } else {\n        output += ' ' + line;\n      }\n    }\n\n    if (i < choices.length - 1) {\n      output += '\\n';\n    }\n  });\n\n  return output.replace(/\\n$/, '');\n}\n\nfunction isValidChoice(choice: Choice<Answers>): boolean {\n  return !choice.disabled;\n}\n"]}