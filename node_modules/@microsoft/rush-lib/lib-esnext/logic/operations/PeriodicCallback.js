// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
/**
 * A help class to run callbacks in a loop with a specified interval.
 *
 * @beta
 */
export class PeriodicCallback {
    constructor(options) {
        this._callbacks = [];
        this._interval = options.interval;
        this._isRunning = false;
    }
    addCallback(callback) {
        if (this._isRunning) {
            throw new Error('Can not add callback while watcher is running');
        }
        this._callbacks.push(callback);
    }
    start() {
        if (this._intervalId) {
            throw new Error('Watcher already started');
        }
        if (this._callbacks.length === 0) {
            return;
        }
        this._isRunning = true;
        this._intervalId = setInterval(() => {
            this._callbacks.forEach((callback) => callback());
        }, this._interval);
    }
    stop() {
        if (this._intervalId) {
            clearInterval(this._intervalId);
            this._intervalId = undefined;
            this._isRunning = false;
        }
    }
}
//# sourceMappingURL=PeriodicCallback.js.map