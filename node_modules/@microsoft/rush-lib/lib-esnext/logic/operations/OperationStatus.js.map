{"version":3,"file":"OperationStatus.js","sourceRoot":"","sources":["../../../src/logic/operations/OperationStatus.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAE3D;;;GAGG;AACH,MAAM,CAAN,IAAY,eA6CX;AA7CD,WAAY,eAAe;IACzB;;OAEG;IACH,kCAAe,CAAA;IACf;;OAEG;IACH,sCAAmB,CAAA;IACnB;;OAEG;IACH,oCAAiB,CAAA;IACjB;;OAEG;IACH,0CAAuB,CAAA;IACvB;;OAEG;IACH,sCAAmB,CAAA;IACnB;;OAEG;IACH,+DAA4C,CAAA;IAC5C;;OAEG;IACH,sCAAmB,CAAA;IACnB;;OAEG;IACH,2CAAwB,CAAA;IACxB;;OAEG;IACH,sCAAmB,CAAA;IACnB;;OAEG;IACH,sCAAmB,CAAA;IACnB;;OAEG;IACH,iCAAc,CAAA;AAChB,CAAC,EA7CW,eAAe,KAAf,eAAe,QA6C1B;AAED;;;GAGG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAyB,IAAI,GAAG,CAAC;IAC7D,eAAe,CAAC,OAAO;IACvB,eAAe,CAAC,kBAAkB;IAClC,eAAe,CAAC,OAAO;IACvB,eAAe,CAAC,OAAO;IACvB,eAAe,CAAC,SAAS;IACzB,eAAe,CAAC,OAAO;IACvB,eAAe,CAAC,IAAI;CACrB,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * Enumeration defining potential states of an operation\n * @beta\n */\nexport enum OperationStatus {\n  /**\n   * The Operation is ready to execute. All its dependencies have succeeded.\n   */\n  Ready = 'READY',\n  /**\n   * The Operation is waiting for one or more dependencies to complete.\n   */\n  Waiting = 'WAITING',\n  /**\n   * The Operation is Queued\n   */\n  Queued = 'QUEUED',\n  /**\n   * The Operation is currently executing\n   */\n  Executing = 'EXECUTING',\n  /**\n   * The Operation completed successfully and did not write to standard output\n   */\n  Success = 'SUCCESS',\n  /**\n   * The Operation completed successfully, but wrote to standard output\n   */\n  SuccessWithWarning = 'SUCCESS WITH WARNINGS',\n  /**\n   * The Operation was skipped via the legacy incremental build logic\n   */\n  Skipped = 'SKIPPED',\n  /**\n   * The Operation had its outputs restored from the build cache\n   */\n  FromCache = 'FROM CACHE',\n  /**\n   * The Operation failed\n   */\n  Failure = 'FAILURE',\n  /**\n   * The Operation could not be executed because one or more of its dependencies failed\n   */\n  Blocked = 'BLOCKED',\n  /**\n   * The Operation was a no-op (for example, it had an empty script)\n   */\n  NoOp = 'NO OP'\n}\n\n/**\n * The set of statuses that are considered terminal.\n * @alpha\n */\nexport const TERMINAL_STATUSES: Set<OperationStatus> = new Set([\n  OperationStatus.Success,\n  OperationStatus.SuccessWithWarning,\n  OperationStatus.Skipped,\n  OperationStatus.Blocked,\n  OperationStatus.FromCache,\n  OperationStatus.Failure,\n  OperationStatus.NoOp\n]);\n"]}