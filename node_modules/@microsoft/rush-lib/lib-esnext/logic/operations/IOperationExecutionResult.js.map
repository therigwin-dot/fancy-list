{"version":3,"file":"IOperationExecutionResult.js","sourceRoot":"","sources":["../../../src/logic/operations/IOperationExecutionResult.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { StdioSummarizer } from '@rushstack/terminal';\nimport type { OperationStatus } from './OperationStatus';\nimport type { Operation } from './Operation';\nimport type { IStopwatchResult } from '../../utilities/Stopwatch';\nimport type { ILogFilePaths } from './ProjectLogWritable';\n\n/**\n * The `IOperationExecutionResult` interface represents the results of executing an {@link Operation}.\n * @alpha\n */\nexport interface IOperationExecutionResult {\n  /**\n   * The operation itself\n   */\n  readonly operation: Operation;\n  /**\n   * The current execution status of an operation. Operations start in the 'ready' state,\n   * but can be 'blocked' if an upstream operation failed. It is 'executing' when\n   * the operation is executing. Once execution is complete, it is either 'success' or\n   * 'failure'.\n   */\n  readonly status: OperationStatus;\n  /**\n   * The error which occurred while executing this operation, this is stored in case we need\n   * it later (for example to re-print errors at end of execution).\n   */\n  readonly error: Error | undefined;\n  /**\n   * If this operation is only present in the graph to maintain dependency relationships, this flag will be set to true.\n   */\n  readonly silent: boolean;\n  /**\n   * Object tracking execution timing.\n   */\n  readonly stopwatch: IStopwatchResult;\n  /**\n   * Object used to report a summary at the end of the Rush invocation.\n   */\n  readonly stdioSummarizer: StdioSummarizer;\n  /**\n   * The value indicates the duration of the same operation without cache hit.\n   */\n  readonly nonCachedDurationMs: number | undefined;\n  /**\n   * The id of the runner which actually runs the building process in cobuild mode.\n   */\n  readonly cobuildRunnerId: string | undefined;\n  /**\n   * The relative path to the folder that contains operation metadata. This folder will be automatically included in cache entries.\n   */\n  readonly metadataFolderPath: string | undefined;\n  /**\n   * The paths to the log files, if applicable.\n   */\n  readonly logFilePaths: ILogFilePaths | undefined;\n}\n\n/**\n * The `IExecutionResult` interface represents the results of executing a set of {@link Operation}s.\n * @alpha\n */\nexport interface IExecutionResult {\n  /**\n   * The results for each scheduled operation.\n   */\n  readonly operationResults: ReadonlyMap<Operation, IOperationExecutionResult>;\n  /**\n   * The overall result.\n   */\n  readonly status: OperationStatus;\n}\n"]}