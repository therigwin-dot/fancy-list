{"version":3,"file":"PnpmShrinkWrapFileConverters.js","sourceRoot":"","sources":["../../../src/logic/pnpm/PnpmShrinkWrapFileConverters.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * Fork https://github.com/pnpm/pnpm/blob/main/lockfile/fs/src/lockfileFormatConverters.ts\n *\n * Pnpm lockfile v9 have some breaking changes on the lockfile format. For Example, the \"packages\" field has been split into \"packages\" and \"snapshots\" two parts.\n * Rush should not parse the lockfile by itself, but should rely on pnpm to parse the lockfile.\n * To ensure consistency with pnpm's parsing logic, I copied the relevant logic from @pnpm/lockfile.fs to this file.\n *\n * There are some reasons for copying the relevant logic instead of depending on @pnpm/lockfile.fs directly:\n * 1. @pnpm/lockfile.fs has a exports filed in package.json, which will cause convertLockfileV9ToLockfileObject cannot be imported directly.\n * 2. @pnpm/lockfile.fs only provides asynchronous read methods, while rush requires synchronous reading of the lockfile file.\n * Perhaps this file will be deleted in the future and instead depend on @pnpm/lockfile.fs directly.\n */\nimport { removeSuffix } from '@pnpm/dependency-path';\nimport type {\n  InlineSpecifiersProjectSnapshot,\n  InlineSpecifiersResolvedDependencies,\n  Lockfile,\n  LockfileFile,\n  LockfileFileV9,\n  PackageSnapshots,\n  ProjectSnapshot,\n  ResolvedDependencies\n} from '@pnpm/lockfile.types';\nimport { removeNullishProps } from '../../utilities/objectUtilities';\n\ntype DepPath = string & { __brand: 'DepPath' };\n// eslint-disable-next-line @typescript-eslint/typedef\nconst DEPENDENCIES_FIELDS = ['optionalDependencies', 'dependencies', 'devDependencies'] as const;\n\nfunction revertProjectSnapshot(from: InlineSpecifiersProjectSnapshot): ProjectSnapshot {\n  const specifiers: ResolvedDependencies = {};\n\n  function moveSpecifiers(fromDep: InlineSpecifiersResolvedDependencies): ResolvedDependencies {\n    const resolvedDependencies: ResolvedDependencies = {};\n    for (const [depName, { specifier, version }] of Object.entries(fromDep)) {\n      const existingValue: string = specifiers[depName];\n      if (existingValue != null && existingValue !== specifier) {\n        throw new Error(\n          `Project snapshot lists the same dependency more than once with conflicting versions: ${depName}`\n        );\n      }\n\n      specifiers[depName] = specifier;\n      resolvedDependencies[depName] = version;\n    }\n    return resolvedDependencies;\n  }\n\n  const dependencies: ResolvedDependencies | undefined =\n    from.dependencies == null ? from.dependencies : moveSpecifiers(from.dependencies);\n  const devDependencies: ResolvedDependencies | undefined =\n    from.devDependencies == null ? from.devDependencies : moveSpecifiers(from.devDependencies);\n  const optionalDependencies: ResolvedDependencies | undefined =\n    from.optionalDependencies == null ? from.optionalDependencies : moveSpecifiers(from.optionalDependencies);\n\n  return {\n    ...removeNullishProps({\n      ...from,\n      dependencies,\n      devDependencies,\n      optionalDependencies\n    }),\n    specifiers\n  };\n}\n\nfunction convertFromLockfileFileMutable(lockfileFile: LockfileFile): LockfileFileV9 {\n  if (typeof lockfileFile?.importers === 'undefined') {\n    lockfileFile.importers = {\n      '.': {\n        dependenciesMeta: lockfileFile.dependenciesMeta,\n        publishDirectory: lockfileFile.publishDirectory\n      }\n    };\n    for (const depType of DEPENDENCIES_FIELDS) {\n      if (lockfileFile[depType] != null) {\n        lockfileFile.importers['.'][depType] = lockfileFile[depType];\n        delete lockfileFile[depType];\n      }\n    }\n  }\n  return lockfileFile as LockfileFileV9;\n}\n\nfunction mapValues<T, U>(obj: Record<string, T>, mapper: (val: T, key: string) => U): Record<string, U> {\n  const result: Record<string, U> = {};\n  for (const [key, value] of Object.entries(obj)) {\n    result[key] = mapper(value, key);\n  }\n  return result;\n}\n\n/**\n * Convert lockfile v9 object to standard lockfile object.\n *\n * This function will mutate the lockfile object. It will:\n * 1. Ensure importers['.'] exists.\n * 2. Merge snapshots and packages into packages.\n * 3. Extract specifier from importers['xxx'] into the specifiers field.\n */\nexport function convertLockfileV9ToLockfileObject(lockfile: LockfileFileV9): Lockfile {\n  const { importers, ...rest } = convertFromLockfileFileMutable(lockfile);\n\n  const packages: PackageSnapshots = {};\n  for (const [depPath, pkg] of Object.entries(lockfile.snapshots ?? {})) {\n    const pkgId: string = removeSuffix(depPath);\n    packages[depPath as DepPath] = Object.assign(pkg, lockfile.packages?.[pkgId]);\n  }\n  return {\n    ...rest,\n    packages,\n    importers: mapValues(importers ?? {}, revertProjectSnapshot)\n  };\n}\n"]}