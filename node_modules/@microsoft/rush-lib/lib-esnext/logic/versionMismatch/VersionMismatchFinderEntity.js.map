{"version":3,"file":"VersionMismatchFinderEntity.js","sourceRoot":"","sources":["../../../src/logic/versionMismatch/VersionMismatchFinderEntity.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAU3D,MAAM,OAAgB,2BAA2B;IAK/C,YAAmB,OAA4C;QAC7D,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,0BAA0B,GAAG,OAAO,CAAC,0BAA0B,CAAC;QACrE,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;IAC7C,CAAC;CAcF","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { PackageJsonDependency, DependencyType } from '../../api/PackageJsonEditor';\n\nexport interface IVersionMismatchFinderEntityOptions {\n  friendlyName: string;\n  decoupledLocalDependencies: Set<string>;\n  skipRushCheck?: boolean;\n}\n\nexport abstract class VersionMismatchFinderEntity {\n  public readonly friendlyName: string;\n  public readonly decoupledLocalDependencies: Set<string>;\n  public readonly skipRushCheck: boolean | undefined;\n\n  public constructor(options: IVersionMismatchFinderEntityOptions) {\n    this.friendlyName = options.friendlyName;\n    this.decoupledLocalDependencies = options.decoupledLocalDependencies;\n    this.skipRushCheck = options.skipRushCheck;\n  }\n\n  public abstract get filePath(): string;\n  public abstract get allDependencies(): ReadonlyArray<PackageJsonDependency>;\n\n  public abstract tryGetDependency(packageName: string): PackageJsonDependency | undefined;\n  public abstract tryGetDevDependency(packageName: string): PackageJsonDependency | undefined;\n  public abstract addOrUpdateDependency(\n    packageName: string,\n    newVersion: string,\n    dependencyType: DependencyType\n  ): void;\n  public abstract removeDependency(packageName: string, dependencyType: DependencyType): void;\n  public abstract saveIfModified(): boolean;\n}\n"]}