{"version":3,"file":"ChangeFiles.js","sourceRoot":"","sources":["../../src/logic/ChangeFiles.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { Async, FileSystem, JsonFile, JsonSchema } from '@rushstack/node-core-library';\n\nimport type { IChangeInfo } from '../api/ChangeManagement';\nimport type { IChangelog } from '../api/Changelog';\nimport type { RushConfiguration } from '../api/RushConfiguration';\nimport schemaJson from '../schemas/change-file.schema.json';\n\n/**\n * This class represents the collection of change files existing in the repo and provides operations\n * for those change files.\n */\nexport class ChangeFiles {\n  /**\n   * Change file path relative to changes folder.\n   */\n  private _files: string[] | undefined;\n  private _changesPath: string;\n\n  public constructor(changesPath: string) {\n    this._changesPath = changesPath;\n  }\n\n  /**\n   * Validate if the newly added change files match the changed packages.\n   */\n  public static validate(\n    newChangeFilePaths: string[],\n    changedPackages: string[],\n    rushConfiguration: RushConfiguration\n  ): void {\n    const schema: JsonSchema = JsonSchema.fromLoadedObject(schemaJson);\n\n    const projectsWithChangeDescriptions: Set<string> = new Set<string>();\n    newChangeFilePaths.forEach((filePath) => {\n      // eslint-disable-next-line no-console\n      console.log(`Found change file: ${filePath}`);\n\n      const changeFile: IChangeInfo = JsonFile.loadAndValidate(filePath, schema);\n\n      if (rushConfiguration.hotfixChangeEnabled) {\n        if (changeFile && changeFile.changes) {\n          for (const change of changeFile.changes) {\n            if (change.type !== 'none' && change.type !== 'hotfix') {\n              throw new Error(\n                `Change file ${filePath} specifies a type of '${change.type}' ` +\n                  `but only 'hotfix' and 'none' change types may be used in a branch with 'hotfixChangeEnabled'.`\n              );\n            }\n          }\n        }\n      }\n\n      if (changeFile && changeFile.changes) {\n        changeFile.changes.forEach((change) => projectsWithChangeDescriptions.add(change.packageName));\n      } else {\n        throw new Error(`Invalid change file: ${filePath}`);\n      }\n    });\n\n    const projectsMissingChangeDescriptions: Set<string> = new Set(changedPackages);\n    projectsWithChangeDescriptions.forEach((name) => projectsMissingChangeDescriptions.delete(name));\n    if (projectsMissingChangeDescriptions.size > 0) {\n      const projectsMissingChangeDescriptionsArray: string[] = [];\n      projectsMissingChangeDescriptions.forEach((name) => projectsMissingChangeDescriptionsArray.push(name));\n      throw new Error(\n        [\n          'The following projects have been changed and require change descriptions, but change descriptions were not ' +\n            'detected for them:',\n          ...projectsMissingChangeDescriptionsArray.map((projectName) => `- ${projectName}`),\n          'To resolve this error, run \"rush change\". This will generate change description files that must be ' +\n            'committed to source control.'\n        ].join('\\n')\n      );\n    }\n  }\n\n  public static getChangeComments(newChangeFilePaths: string[]): Map<string, string[]> {\n    const changes: Map<string, string[]> = new Map<string, string[]>();\n\n    newChangeFilePaths.forEach((filePath) => {\n      // eslint-disable-next-line no-console\n      console.log(`Found change file: ${filePath}`);\n      const changeRequest: IChangeInfo = JsonFile.load(filePath);\n      if (changeRequest && changeRequest.changes) {\n        changeRequest.changes!.forEach((change) => {\n          if (!changes.get(change.packageName)) {\n            changes.set(change.packageName, []);\n          }\n          if (change.comment && change.comment.length) {\n            changes.get(change.packageName)!.push(change.comment);\n          }\n        });\n      } else {\n        throw new Error(`Invalid change file: ${filePath}`);\n      }\n    });\n    return changes;\n  }\n\n  /**\n   * Get the array of absolute paths of change files.\n   */\n  public async getFilesAsync(): Promise<string[]> {\n    if (!this._files) {\n      const { default: glob } = await import('fast-glob');\n      this._files = (await glob('**/*.json', { cwd: this._changesPath, absolute: true })) || [];\n    }\n\n    return this._files;\n  }\n\n  /**\n   * Get the path of changes folder.\n   */\n  public getChangesPath(): string {\n    return this._changesPath;\n  }\n\n  /**\n   * Delete all change files\n   */\n  public async deleteAllAsync(shouldDelete: boolean, updatedChangelogs?: IChangelog[]): Promise<number> {\n    if (updatedChangelogs) {\n      // Skip changes files if the package's change log is not updated.\n      const packagesToInclude: Set<string> = new Set<string>();\n      updatedChangelogs.forEach((changelog) => {\n        packagesToInclude.add(changelog.name);\n      });\n\n      const files: string[] = await this.getFilesAsync();\n      const filesToDelete: string[] = [];\n      await Async.forEachAsync(\n        files,\n        async (filePath) => {\n          const changeRequest: IChangeInfo = await JsonFile.loadAsync(filePath);\n          let shouldDeleteFile: boolean = true;\n          for (const changeInfo of changeRequest.changes!) {\n            if (!packagesToInclude.has(changeInfo.packageName)) {\n              shouldDeleteFile = false;\n              break;\n            }\n          }\n\n          if (shouldDeleteFile) {\n            filesToDelete.push(filePath);\n          }\n        },\n        { concurrency: 5 }\n      );\n\n      return await this._deleteFilesAsync(filesToDelete, shouldDelete);\n    } else {\n      // Delete all change files.\n      const files: string[] = await this.getFilesAsync();\n      return await this._deleteFilesAsync(files, shouldDelete);\n    }\n  }\n\n  private async _deleteFilesAsync(files: string[], shouldDelete: boolean): Promise<number> {\n    if (files.length) {\n      // eslint-disable-next-line no-console\n      console.log(`\\n* ${shouldDelete ? 'DELETING:' : 'DRYRUN: Deleting'} ${files.length} change file(s).`);\n\n      await Async.forEachAsync(\n        files,\n        async (filePath) => {\n          // eslint-disable-next-line no-console\n          console.log(` - ${filePath}`);\n          if (shouldDelete) {\n            await FileSystem.deleteFileAsync(filePath);\n          }\n        },\n        { concurrency: 5 }\n      );\n    }\n\n    return files.length;\n  }\n}\n"]}