{"version":3,"file":"NpmPackage.js","sourceRoot":"","sources":["../../../src/logic/npm/NpmPackage.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport type readPackageTree from 'read-package-tree';\nimport { JsonFile, type IPackageJson } from '@rushstack/node-core-library';\n\nimport { BasePackage, type IRushTempPackageJson } from '../base/BasePackage';\n\n/**\n * Used by the linking algorithm when doing NPM package resolution.\n */\nexport interface IResolveOrCreateResult {\n  found: BasePackage | undefined;\n  parentForCreate: BasePackage | undefined;\n}\n\n/**\n * The type of dependency; used by IPackageDependency.\n */\nexport enum PackageDependencyKind {\n  Normal,\n  /**\n   * The dependency was listed in the optionalDependencies section of package.json.\n   */\n  Optional,\n\n  /**\n   * The dependency should be a symlink to a project that is locally built by Rush..\n   */\n  LocalLink\n}\n\nexport interface IPackageDependency {\n  /**\n   * The name of the dependency\n   */\n  name: string;\n  /**\n   * The requested version, which may be a pattern such as \"^1.2.3\"\n   */\n  versionRange: string;\n\n  /**\n   * The kind of dependency\n   */\n  kind: PackageDependencyKind;\n}\n\nexport class NpmPackage extends BasePackage {\n  /**\n   * Names of packages that we explicitly depend on.  The actual dependency\n   * package may be found in this.children, or possibly in this.children of\n   * one of the parents.\n   * If a dependency is listed in the \"optionalDependencies\" section of package.json\n   * then its name here will be prepended with a \"?\" character, which means that Rush\n   * will not report an error if the module cannot be found in the Common folder.\n   */\n  public dependencies: IPackageDependency[];\n\n  private constructor(\n    name: string,\n    version: string | undefined,\n    dependencies: IPackageDependency[],\n    folderPath: string\n  ) {\n    super(name, version, folderPath, undefined);\n    this.dependencies = dependencies.slice(0); // clone the array\n    this.parent = undefined;\n  }\n\n  /**\n   * Used by \"npm link\" when creating a Package object that represents symbolic links to be created.\n   */\n  public static createLinkedNpmPackage(\n    name: string,\n    version: string | undefined,\n    dependencies: IPackageDependency[],\n    folderPath: string\n  ): NpmPackage {\n    return new NpmPackage(name, version, dependencies, folderPath);\n  }\n\n  /**\n   * Used by \"npm link\" to simulate a temp project that is missing from the common/node_modules\n   * folder (e.g. because it was added after the shrinkwrap file was regenerated).\n   * @param packageJsonFilename - Filename of the source package.json\n   *        Example: `C:\\MyRepo\\common\\temp\\projects\\project1\\package.json`\n   * @param targetFolderName - Filename where it should have been installed\n   *        Example: `C:\\MyRepo\\common\\temp\\node_modules\\@rush-temp\\project1`\n   */\n  public static createVirtualTempPackage(packageJsonFilename: string, installFolderName: string): NpmPackage {\n    const packageJson: IPackageJson = JsonFile.load(packageJsonFilename);\n    const npmPackage: readPackageTree.Node = {\n      children: [],\n      error: null,\n      id: 0,\n      isLink: false,\n      package: packageJson,\n      parent: null,\n      path: installFolderName,\n      realpath: installFolderName\n    };\n    return NpmPackage.createFromNpm(npmPackage);\n  }\n\n  /**\n   * Recursive constructs a tree of NpmPackage objects using information returned\n   * by the \"read-package-tree\" library.\n   */\n  public static createFromNpm(npmPackage: readPackageTree.Node): NpmPackage {\n    if (npmPackage.error) {\n      throw new Error(\n        `Failed to parse package.json for ${path.basename(npmPackage.path)}: ${npmPackage.error.message}`\n      );\n    }\n\n    let dependencies: IPackageDependency[] = [];\n    const dependencyNames: Set<string> = new Set<string>();\n    const packageJson: IRushTempPackageJson = npmPackage.package;\n\n    if (packageJson.optionalDependencies) {\n      for (const dependencyName of Object.keys(packageJson.optionalDependencies)) {\n        if (!dependencyNames.has(dependencyName)) {\n          dependencyNames.add(dependencyName);\n          dependencies.push({\n            name: dependencyName,\n            versionRange: packageJson.optionalDependencies[dependencyName],\n            kind: PackageDependencyKind.Optional\n          });\n        }\n      }\n    }\n    if (packageJson.dependencies) {\n      for (const dependencyName of Object.keys(packageJson.dependencies)) {\n        if (!dependencyNames.has(dependencyName)) {\n          dependencyNames.add(dependencyName);\n          dependencies.push({\n            name: dependencyName,\n            versionRange: packageJson.dependencies[dependencyName],\n            kind: PackageDependencyKind.Normal\n          });\n        }\n      }\n    }\n    if (packageJson.rushDependencies) {\n      for (const dependencyName of Object.keys(packageJson.rushDependencies)) {\n        if (!dependencyNames.has(dependencyName)) {\n          dependencyNames.add(dependencyName);\n          dependencies.push({\n            name: dependencyName,\n            versionRange: packageJson.dependencies![dependencyName],\n            kind: PackageDependencyKind.LocalLink\n          });\n        }\n      }\n    }\n\n    dependencies = dependencies.sort((a, b) => a.name.localeCompare(b.name));\n\n    const newPackage: NpmPackage = new NpmPackage(\n      npmPackage.package.name,\n      npmPackage.package.version,\n      dependencies,\n      // NOTE: We don't use packageNode.realpath here, because if \"npm unlink\" was\n      // performed without redoing \"rush link\", then a broken symlink is better than\n      // a symlink to the wrong thing.\n      npmPackage.path\n    );\n\n    for (const child of npmPackage.children) {\n      newPackage.addChild(NpmPackage.createFromNpm(child));\n    }\n\n    return newPackage;\n  }\n\n  /**\n   * Searches the node_modules hierarchy for the nearest matching package with the\n   * given name.  Note that the nearest match may have an incompatible version.\n   * If a match is found, then the \"found\" result will not be undefined.\n   * In either case, the parentForCreate result indicates where the missing\n   * dependency can be added, i.e. if the requested dependency was not found\n   * or was found with an incompatible version.\n   *\n   * \"cyclicSubtreeRoot\" is a special optional parameter that specifies a different\n   * root for the tree; the decoupledLocalDependencies feature uses this to isolate\n   * certain devDependencies in their own subtree.\n   */\n  public resolveOrCreate(dependencyName: string, cyclicSubtreeRoot?: NpmPackage): IResolveOrCreateResult {\n    let currentParent: NpmPackage = this;\n    let parentForCreate: NpmPackage | undefined = undefined;\n\n    for (;;) {\n      // Does any child match?\n      for (const child of currentParent.children) {\n        // The package.json name can differ from the installation folder name, in the case of an NPM package alias\n        // such as this:\n        //\n        // \"dependencies\": {\n        //   \"@alias-scope/alias-name\": \"npm:target-name@^1.2.3\"\n        // }\n        //\n        // Thus we need to compare child.installedName instead of child.name:\n        if (child.installedName === dependencyName) {\n          // One of the children matched.  Note that parentForCreate may be\n          // undefined, e.g. if an immediate child is found but has the wrong version,\n          // then we have no place in the tree to create another version.\n          return { found: child, parentForCreate };\n        }\n      }\n\n      // If no child matched, then make this node the \"parentForCreate\" where we\n      // could add a missing dependency.\n      parentForCreate = currentParent;\n\n      if (!currentParent.parent || (cyclicSubtreeRoot && currentParent === cyclicSubtreeRoot)) {\n        // We reached the root without finding a match\n        // parentForCreate will be the root.\n        return { found: undefined, parentForCreate };\n      }\n\n      // Continue walking upwards.\n      currentParent = currentParent.parent as NpmPackage;\n    }\n  }\n\n  /**\n   * Searches the node_modules hierarchy for the nearest matching package with the\n   * given name.  If no match is found, then undefined is returned.\n   */\n  public resolve(dependencyName: string): NpmPackage | undefined {\n    return this.resolveOrCreate(dependencyName).found as NpmPackage;\n  }\n}\n"]}