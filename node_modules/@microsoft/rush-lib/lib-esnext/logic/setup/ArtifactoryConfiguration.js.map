{"version":3,"file":"ArtifactoryConfiguration.js","sourceRoot":"","sources":["../../../src/logic/setup/ArtifactoryConfiguration.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAE3D,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAEhF,OAAO,UAAU,MAAM,uCAAuC,CAAC;AA4B/D;;;GAGG;AACH,MAAM,OAAO,wBAAwB;IAUnC;;OAEG;IACH,YAAmB,YAAoB;QACrC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAElC,IAAI,CAAC,aAAa,GAAG;YACnB,eAAe,EAAE;gBACf,OAAO,EAAE,KAAK;gBACd,WAAW,EAAE,EAAE;gBACf,qBAAqB,EAAE,EAAE;aAC1B;SACF,CAAC;QAEF,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,wBAAwB,CAAC,WAAW,CAAC,CAAC;YACxG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;gBACvD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,GAAG,UAAU,CAAC;YACjE,CAAC;QACH,CAAC;IACH,CAAC;;AA7Bc,oCAAW,GAAe,UAAU,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { JsonFile, JsonSchema, FileSystem } from '@rushstack/node-core-library';\n\nimport schemaJson from '../../schemas/artifactory.schema.json';\n\nexport interface IArtifactoryPackageRegistryJson {\n  enabled: boolean;\n  userNpmrcLinesToAdd?: string[];\n\n  registryUrl: string;\n  artifactoryWebsiteUrl: string;\n\n  credentialType?: 'password' | 'authToken';\n\n  messageOverrides?: {\n    introduction?: string;\n    obtainAnAccount?: string;\n    visitWebsite?: string;\n    locateUserName?: string;\n    locateApiKey?: string;\n  };\n}\n\n/**\n * This interface represents the raw artifactory.json file.\n * @beta\n */\nexport interface IArtifactoryJson {\n  packageRegistry: IArtifactoryPackageRegistryJson;\n}\n\n/**\n * Use this class to load the \"common/config/rush/artifactory.json\" config file.\n * It configures the \"rush setup\" command.\n */\nexport class ArtifactoryConfiguration {\n  private static _jsonSchema: JsonSchema = JsonSchema.fromLoadedObject(schemaJson);\n\n  private readonly _jsonFileName: string;\n\n  /**\n   * Get the artifactory configuration.\n   */\n  public readonly configuration: Readonly<IArtifactoryJson>;\n\n  /**\n   * @internal\n   */\n  public constructor(jsonFileName: string) {\n    this._jsonFileName = jsonFileName;\n\n    this.configuration = {\n      packageRegistry: {\n        enabled: false,\n        registryUrl: '',\n        artifactoryWebsiteUrl: ''\n      }\n    };\n\n    if (FileSystem.exists(this._jsonFileName)) {\n      this.configuration = JsonFile.loadAndValidate(this._jsonFileName, ArtifactoryConfiguration._jsonSchema);\n      if (!this.configuration.packageRegistry.credentialType) {\n        this.configuration.packageRegistry.credentialType = 'password';\n      }\n    }\n  }\n}\n"]}