{"version":3,"file":"PolicyValidator.js","sourceRoot":"","sources":["../../../src/logic/policy/PolicyValidator.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAG3D,OAAO,KAAK,cAAc,MAAM,kBAAkB,CAAC;AACnD,OAAO,KAAK,oBAAoB,MAAM,wBAAwB,CAAC;AAC/D,OAAO,KAAK,iBAAiB,MAAM,qBAAqB,CAAC;AASzD,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACvC,iBAAoC,EACpC,QAAkB,EAClB,OAA2B,EAC3B,OAAgC;IAEhC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC1B,MAAM,cAAc,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC/D,MAAM,iBAAiB,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;YACpC,iFAAiF;YACjF,sGAAsG;YACtG,oBAAoB,CAAC,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAC/E,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { RushConfiguration } from '../../api/RushConfiguration';\nimport * as GitEmailPolicy from './GitEmailPolicy';\nimport * as ShrinkwrapFilePolicy from './ShrinkwrapFilePolicy';\nimport * as EnvironmentPolicy from './EnvironmentPolicy';\nimport type { Subspace } from '../../api/Subspace';\n\nexport interface IPolicyValidatorOptions {\n  bypassPolicyAllowed?: boolean;\n  bypassPolicy?: boolean;\n  allowShrinkwrapUpdates?: boolean;\n}\n\nexport async function validatePolicyAsync(\n  rushConfiguration: RushConfiguration,\n  subspace: Subspace,\n  variant: string | undefined,\n  options: IPolicyValidatorOptions\n): Promise<void> {\n  if (!options.bypassPolicy) {\n    await GitEmailPolicy.validateAsync(rushConfiguration, options);\n    await EnvironmentPolicy.validateAsync(rushConfiguration, options);\n    if (!options.allowShrinkwrapUpdates) {\n      // Don't validate the shrinkwrap if updates are allowed, as it's likely to change\n      // It also may have merge conflict markers, which PNPM can gracefully handle, but the validator cannot\n      ShrinkwrapFilePolicy.validate(rushConfiguration, subspace, variant, options);\n    }\n  }\n}\n"]}