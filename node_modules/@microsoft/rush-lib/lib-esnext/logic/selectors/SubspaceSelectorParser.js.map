{"version":3,"file":"SubspaceSelectorParser.js","sourceRoot":"","sources":["../../../src/logic/selectors/SubspaceSelectorParser.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAK3D,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAGjD,MAAM,OAAO,sBAAsB;IAGjC,YAAmB,iBAAoC;QACrD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAC9C,CAAC;IAEM,KAAK,CAAC,qBAAqB,CAAC,EACjC,gBAAgB,EACS;QACzB,MAAM,QAAQ,GAAa,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QAEjF,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;IAEM,cAAc;QACnB,yFAAyF;QACzF,MAAM,aAAa,GAAa,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,EAAE,CAAC;YACnD,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QACtF,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE,CAAC;YAC9D,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QACxD,CAAC;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { RushConfiguration } from '../../api/RushConfiguration';\nimport type { RushConfigurationProject } from '../../api/RushConfigurationProject';\nimport type { Subspace } from '../../api/Subspace';\nimport { RushConstants } from '../RushConstants';\nimport type { IEvaluateSelectorOptions, ISelectorParser } from './ISelectorParser';\n\nexport class SubspaceSelectorParser implements ISelectorParser<RushConfigurationProject> {\n  private readonly _rushConfiguration: RushConfiguration;\n\n  public constructor(rushConfiguration: RushConfiguration) {\n    this._rushConfiguration = rushConfiguration;\n  }\n\n  public async evaluateSelectorAsync({\n    unscopedSelector\n  }: IEvaluateSelectorOptions): Promise<Iterable<RushConfigurationProject>> {\n    const subspace: Subspace = this._rushConfiguration.getSubspace(unscopedSelector);\n\n    return subspace.getProjects();\n  }\n\n  public getCompletions(): Iterable<string> {\n    // Tab completion is a performance sensitive operation, so avoid loading all the projects\n    const subspaceNames: string[] = [];\n    if (this._rushConfiguration.subspacesConfiguration) {\n      subspaceNames.push(...this._rushConfiguration.subspacesConfiguration.subspaceNames);\n    }\n    if (!subspaceNames.indexOf(RushConstants.defaultSubspaceName)) {\n      subspaceNames.push(RushConstants.defaultSubspaceName);\n    }\n    return subspaceNames;\n  }\n}\n"]}