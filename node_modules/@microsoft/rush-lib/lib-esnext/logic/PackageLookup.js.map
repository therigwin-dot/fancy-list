{"version":3,"file":"PackageLookup.js","sourceRoot":"","sources":["../../src/logic/PackageLookup.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAI3D,MAAM,OAAO,aAAa;IAGxB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAuB,CAAC;IACpD,CAAC;IAEM,QAAQ,CAAC,IAAiB;QAC/B,MAAM,KAAK,GAAkB,CAAC,IAAI,CAAC,CAAC;QAEpC,gFAAgF;QAChF,YAAY;QAEZ,SAAS,CAAC;YACR,MAAM,OAAO,GAA4B,KAAK,CAAC,KAAK,EAAE,CAAC;YACvD,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,MAAM;YACR,CAAC;YAED,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACrC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC;YAED,MAAM,GAAG,GAAW,OAAO,CAAC,cAAc,CAAC;YAE3C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACrC,CAAC;QACH,CAAC;IACH,CAAC;IAEM,UAAU,CAAC,cAAsB;QACtC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { BasePackage } from './base/BasePackage';\n\nexport class PackageLookup {\n  private _packageMap: Map<string, BasePackage>;\n\n  public constructor() {\n    this._packageMap = new Map<string, BasePackage>();\n  }\n\n  public loadTree(root: BasePackage): void {\n    const queue: BasePackage[] = [root];\n\n    // We want the lookup to return the shallowest match, so this is a breadth first\n    // traversal\n\n    for (;;) {\n      const current: BasePackage | undefined = queue.shift();\n      if (!current) {\n        break;\n      }\n\n      for (const child of current.children) {\n        queue.push(child);\n      }\n\n      const key: string = current.nameAndVersion;\n\n      if (!this._packageMap.has(key)) {\n        this._packageMap.set(key, current);\n      }\n    }\n  }\n\n  public getPackage(nameAndVersion: string): BasePackage | undefined {\n    return this._packageMap.get(nameAndVersion);\n  }\n}\n"]}