// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
import { Terminal } from '@rushstack/terminal';
export class Logger {
    constructor(options) {
        this._errors = [];
        this._warnings = [];
        this._options = options;
        this.terminal = new Terminal(options.terminalProvider);
    }
    get errors() {
        return [...this.errors];
    }
    get warnings() {
        return [...this.warnings];
    }
    static getErrorMessage(error) {
        return error.message;
    }
    /**
     * {@inheritdoc ILogger.emitError}
     */
    emitError(error) {
        this._errors.push(error);
        this.terminal.writeErrorLine(`Error: ${Logger.getErrorMessage(error)}`);
        if (this._shouldPrintStacks && error.stack) {
            this.terminal.writeErrorLine(error.stack);
        }
    }
    /**
     * {@inheritdoc ILogger.emitWarning}
     */
    emitWarning(warning) {
        this._warnings.push(warning);
        this.terminal.writeWarningLine(`Warning: ${Logger.getErrorMessage(warning)}`);
        if (this._shouldPrintStacks && warning.stack) {
            this.terminal.writeWarningLine(warning.stack);
        }
    }
    get _shouldPrintStacks() {
        return this._options.getShouldPrintStacks();
    }
}
//# sourceMappingURL=Logger.js.map