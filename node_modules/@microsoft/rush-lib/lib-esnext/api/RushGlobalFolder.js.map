{"version":3,"file":"RushGlobalFolder.js","sourceRoot":"","sources":["../../src/api/RushGlobalFolder.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;AAE3D,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AAEtE;;;;GAIG;AACH,MAAM,OAAO,gBAAgB;IA0B3B;QACE,oGAAoG;QACpG,mEAAmE;QACnE,MAAM,wBAAwB,GAC5B,wBAAwB,CAAC,4BAA4B,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACrE,IAAI,wBAAwB,KAAK,SAAS,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,GAAG,wBAAwB,CAAC;QACvC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE,OAAO,CAAC,CAAC;QAC5D,CAAC;QAED,MAAM,qBAAqB,GAAW,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC;YAC7E,CAAC,CAAC,OAAO,CAAC,OAAO;YACjB,CAAC,CAAC,iBAAiB,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,qBAAqB,EAAE,CAAC,CAAC;IAChF,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport { Utilities } from '../utilities/Utilities';\nimport { EnvironmentConfiguration } from './EnvironmentConfiguration';\n\n/**\n * This class provides global folders that are used for rush's internal install locations.\n *\n * @internal\n */\nexport class RushGlobalFolder {\n  /**\n   * The global folder where Rush stores temporary files.\n   *\n   * @remarks\n   *\n   * Most of the temporary files created by Rush are stored separately for each monorepo working folder,\n   * to avoid issues of concurrency and compatibility between tool versions.  However, a small set\n   * of files (e.g. installations of the `@microsoft/rush-lib` engine and the package manager) are stored\n   * in a global folder to speed up installations.  The default location is `~/.rush` on POSIX-like\n   * operating systems or `C:\\Users\\YourName` on Windows.\n   *\n   * You can use the {@link EnvironmentVariableNames.RUSH_GLOBAL_FOLDER} environment  variable to specify\n   * a different folder path.  This is useful for example if a Windows group policy forbids executing scripts\n   * installed in a user's home directory.\n   *\n   * POSIX is a registered trademark of the Institute of Electrical and Electronic Engineers, Inc.\n   */\n  public readonly path: string;\n\n  /**\n   * The absolute path to Rush's storage in the home directory for the current user and node version.\n   * On Windows, it would be something like `C:\\Users\\YourName\\.rush\\node-v3.4.5`.\n   */\n  public readonly nodeSpecificPath: string;\n\n  public constructor() {\n    // Because RushGlobalFolder is used by the front-end VersionSelector before EnvironmentConfiguration\n    // is initialized, we need to read it using a special internal API.\n    const rushGlobalFolderOverride: string | undefined =\n      EnvironmentConfiguration._getRushGlobalFolderOverride(process.env);\n    if (rushGlobalFolderOverride !== undefined) {\n      this.path = rushGlobalFolderOverride;\n    } else {\n      this.path = path.join(Utilities.getHomeFolder(), '.rush');\n    }\n\n    const normalizedNodeVersion: string = process.version.match(/^[a-z0-9\\-\\.]+$/i)\n      ? process.version\n      : 'unknown-version';\n    this.nodeSpecificPath = path.join(this.path, `node-${normalizedNodeVersion}`);\n  }\n}\n"]}