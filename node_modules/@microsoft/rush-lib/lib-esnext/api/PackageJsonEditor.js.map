{"version":3,"file":"PackageJsonEditor.js","sourceRoot":"","sources":["../../src/api/PackageJsonEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as semver from 'semver';\nimport { InternalError, type IPackageJson, JsonFile, Sort, JsonSyntax } from '@rushstack/node-core-library';\nimport { cloneDeep } from '../utilities/objectUtilities';\n\n/**\n * @public\n */\nexport enum DependencyType {\n  Regular = 'dependencies',\n  Dev = 'devDependencies',\n  Optional = 'optionalDependencies',\n  Peer = 'peerDependencies',\n  YarnResolutions = 'resolutions'\n}\n\n/**\n * @public\n */\nexport class PackageJsonDependency {\n  private _version: string;\n  private _onChange: () => void;\n\n  public readonly name: string;\n  public readonly dependencyType: DependencyType;\n\n  public constructor(name: string, version: string, type: DependencyType, onChange: () => void) {\n    this.name = name;\n    this._version = version;\n    this.dependencyType = type;\n    this._onChange = onChange;\n  }\n\n  public get version(): string {\n    return this._version;\n  }\n\n  public setVersion(newVersion: string): void {\n    if (!semver.valid(newVersion) && !semver.validRange(newVersion)) {\n      throw new Error(`Cannot set version to invalid value: \"${newVersion}\"`);\n    }\n    this._version = newVersion;\n    this._onChange();\n  }\n}\n\n/**\n * @public\n */\nexport class PackageJsonDependencyMeta {\n  private _injected: boolean;\n  private _onChange: () => void;\n\n  public readonly name: string;\n\n  public constructor(name: string, injected: boolean, onChange: () => void) {\n    this.name = name;\n    this._injected = injected;\n    this._onChange = onChange;\n  }\n\n  public get injected(): boolean {\n    return this._injected;\n  }\n}\n\n/**\n * @public\n */\nexport class PackageJsonEditor {\n  private readonly _dependencies: Map<string, PackageJsonDependency>;\n  // NOTE: The \"devDependencies\" section is tracked separately because sometimes people\n  // will specify a specific version for development, while *also* specifying a broader\n  // SemVer range in one of the other fields for consumers.  Thus \"dependencies\", \"optionalDependencies\",\n  // and \"peerDependencies\" are mutually exclusive, but \"devDependencies\" is not.\n  private readonly _devDependencies: Map<string, PackageJsonDependency>;\n\n  private readonly _dependenciesMeta: Map<string, PackageJsonDependencyMeta>;\n\n  // NOTE: The \"resolutions\" field is a yarn specific feature that controls package\n  // resolution override within yarn.\n  private readonly _resolutions: Map<string, PackageJsonDependency>;\n  private _modified: boolean;\n  private _sourceData: IPackageJson;\n\n  public readonly filePath: string;\n\n  /**\n   * @internal\n   */\n  protected constructor(filepath: string, data: IPackageJson) {\n    this.filePath = filepath;\n    this._sourceData = data;\n    this._modified = false;\n\n    this._dependencies = new Map<string, PackageJsonDependency>();\n    this._devDependencies = new Map<string, PackageJsonDependency>();\n    this._resolutions = new Map<string, PackageJsonDependency>();\n    this._dependenciesMeta = new Map<string, PackageJsonDependencyMeta>();\n\n    const dependencies: { [key: string]: string } = data.dependencies || {};\n    const optionalDependencies: { [key: string]: string } = data.optionalDependencies || {};\n    const peerDependencies: { [key: string]: string } = data.peerDependencies || {};\n\n    const devDependencies: { [key: string]: string } = data.devDependencies || {};\n    const resolutions: { [key: string]: string } = data.resolutions || {};\n\n    const dependenciesMeta: { [key: string]: { [key: string]: boolean } } = data.dependenciesMeta || {};\n\n    const _onChange: () => void = this._onChange.bind(this);\n\n    try {\n      Object.keys(dependencies || {}).forEach((packageName: string) => {\n        if (Object.prototype.hasOwnProperty.call(optionalDependencies, packageName)) {\n          throw new Error(\n            `The package \"${packageName}\" cannot be listed in both ` +\n              `\"dependencies\" and \"optionalDependencies\"`\n          );\n        }\n        if (Object.prototype.hasOwnProperty.call(peerDependencies, packageName)) {\n          throw new Error(\n            `The package \"${packageName}\" cannot be listed in both \"dependencies\" and \"peerDependencies\"`\n          );\n        }\n\n        this._dependencies.set(\n          packageName,\n          new PackageJsonDependency(packageName, dependencies[packageName], DependencyType.Regular, _onChange)\n        );\n      });\n\n      Object.keys(optionalDependencies || {}).forEach((packageName: string) => {\n        if (Object.prototype.hasOwnProperty.call(peerDependencies, packageName)) {\n          throw new Error(\n            `The package \"${packageName}\" cannot be listed in both ` +\n              `\"optionalDependencies\" and \"peerDependencies\"`\n          );\n        }\n        this._dependencies.set(\n          packageName,\n          new PackageJsonDependency(\n            packageName,\n            optionalDependencies[packageName],\n            DependencyType.Optional,\n            _onChange\n          )\n        );\n      });\n\n      Object.keys(peerDependencies || {}).forEach((packageName: string) => {\n        this._dependencies.set(\n          packageName,\n          new PackageJsonDependency(\n            packageName,\n            peerDependencies[packageName],\n            DependencyType.Peer,\n            _onChange\n          )\n        );\n      });\n\n      Object.keys(devDependencies || {}).forEach((packageName: string) => {\n        this._devDependencies.set(\n          packageName,\n          new PackageJsonDependency(packageName, devDependencies[packageName], DependencyType.Dev, _onChange)\n        );\n      });\n\n      Object.keys(resolutions || {}).forEach((packageName: string) => {\n        this._resolutions.set(\n          packageName,\n          new PackageJsonDependency(\n            packageName,\n            resolutions[packageName],\n            DependencyType.YarnResolutions,\n            _onChange\n          )\n        );\n      });\n\n      Object.keys(dependenciesMeta || {}).forEach((packageName: string) => {\n        this._dependenciesMeta.set(\n          packageName,\n          new PackageJsonDependencyMeta(packageName, dependenciesMeta[packageName].injected, _onChange)\n        );\n      });\n\n      // (Do not sort this._resolutions because order may be significant; the RFC is unclear about that.)\n      Sort.sortMapKeys(this._dependencies);\n      Sort.sortMapKeys(this._devDependencies);\n    } catch (e) {\n      throw new Error(`Error loading \"${filepath}\": ${(e as Error).message}`);\n    }\n  }\n\n  public static load(filePath: string): PackageJsonEditor {\n    return new PackageJsonEditor(filePath, JsonFile.load(filePath));\n  }\n\n  public static fromObject(object: IPackageJson, filename: string): PackageJsonEditor {\n    return new PackageJsonEditor(filename, object);\n  }\n\n  public get name(): string {\n    return this._sourceData.name;\n  }\n\n  public get version(): string {\n    return this._sourceData.version;\n  }\n\n  /**\n   * The list of dependencies of type DependencyType.Regular, DependencyType.Optional, or DependencyType.Peer.\n   */\n  public get dependencyList(): ReadonlyArray<PackageJsonDependency> {\n    return [...this._dependencies.values()];\n  }\n\n  /**\n   * The list of dependencies of type DependencyType.Dev.\n   */\n  public get devDependencyList(): ReadonlyArray<PackageJsonDependency> {\n    return [...this._devDependencies.values()];\n  }\n\n  /**\n   * The list of dependenciesMeta in package.json.\n   */\n  public get dependencyMetaList(): ReadonlyArray<PackageJsonDependencyMeta> {\n    return [...this._dependenciesMeta.values()];\n  }\n\n  /**\n   * This field is a Yarn-specific feature that allows overriding of package resolution.\n   *\n   * @remarks\n   * See the {@link https://github.com/yarnpkg/rfcs/blob/master/implemented/0000-selective-versions-resolutions.md\n   * | 0000-selective-versions-resolutions.md RFC} for details.\n   */\n  public get resolutionsList(): ReadonlyArray<PackageJsonDependency> {\n    return [...this._resolutions.values()];\n  }\n\n  public tryGetDependency(packageName: string): PackageJsonDependency | undefined {\n    return this._dependencies.get(packageName);\n  }\n\n  public tryGetDevDependency(packageName: string): PackageJsonDependency | undefined {\n    return this._devDependencies.get(packageName);\n  }\n\n  public addOrUpdateDependency(\n    packageName: string,\n    newVersion: string,\n    dependencyType: DependencyType\n  ): void {\n    const dependency: PackageJsonDependency = new PackageJsonDependency(\n      packageName,\n      newVersion,\n      dependencyType,\n      this._onChange.bind(this)\n    );\n\n    // Rush collapses everything that isn't a devDependency into the dependencies\n    // field, so we need to set the value depending on dependency type\n    switch (dependencyType) {\n      case DependencyType.Regular:\n      case DependencyType.Optional:\n      case DependencyType.Peer:\n        this._dependencies.set(packageName, dependency);\n        break;\n      case DependencyType.Dev:\n        this._devDependencies.set(packageName, dependency);\n        break;\n      case DependencyType.YarnResolutions:\n        this._resolutions.set(packageName, dependency);\n        break;\n      default:\n        throw new InternalError('Unsupported DependencyType');\n    }\n\n    this._modified = true;\n  }\n\n  public removeDependency(packageName: string, dependencyType: DependencyType): void {\n    switch (dependencyType) {\n      case DependencyType.Regular:\n      case DependencyType.Optional:\n      case DependencyType.Peer:\n        this._dependencies.delete(packageName);\n        break;\n      case DependencyType.Dev:\n        this._devDependencies.delete(packageName);\n        break;\n      case DependencyType.YarnResolutions:\n        this._resolutions.delete(packageName);\n        break;\n      default:\n        throw new InternalError('Unsupported DependencyType');\n    }\n\n    this._modified = true;\n  }\n\n  public saveIfModified(): boolean {\n    if (this._modified) {\n      this._modified = false;\n      this._sourceData = this._normalize(this._sourceData);\n      JsonFile.save(this._sourceData, this.filePath, {\n        updateExistingFile: true,\n        jsonSyntax: JsonSyntax.Strict\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get the normalized package.json that represents the current state of the\n   * PackageJsonEditor. This method does not save any changes that were made to the\n   * package.json, but instead returns the object representation of what would be saved\n   * if saveIfModified() is called.\n   */\n  public saveToObject(): IPackageJson {\n    // Only normalize if we need to\n    const sourceData: IPackageJson = this._modified ? this._normalize(this._sourceData) : this._sourceData;\n    // Provide a clone to avoid reference back to the original data object\n    return cloneDeep(sourceData);\n  }\n\n  private _onChange(): void {\n    this._modified = true;\n  }\n\n  /**\n   * Create a normalized shallow copy of the provided package.json without modifying the\n   * original. If the result of this method is being returned via a public facing method,\n   * it will still need to be deep-cloned to avoid propogating changes back to the\n   * original dataset.\n   */\n  private _normalize(source: IPackageJson): IPackageJson {\n    const normalizedData: IPackageJson = { ...source };\n    delete normalizedData.dependencies;\n    delete normalizedData.optionalDependencies;\n    delete normalizedData.peerDependencies;\n    delete normalizedData.devDependencies;\n    delete normalizedData.resolutions;\n\n    const keys: string[] = [...this._dependencies.keys()].sort();\n\n    for (const packageName of keys) {\n      const dependency: PackageJsonDependency = this._dependencies.get(packageName)!;\n\n      switch (dependency.dependencyType) {\n        case DependencyType.Regular:\n          if (!normalizedData.dependencies) {\n            normalizedData.dependencies = {};\n          }\n          normalizedData.dependencies[dependency.name] = dependency.version;\n          break;\n        case DependencyType.Optional:\n          if (!normalizedData.optionalDependencies) {\n            normalizedData.optionalDependencies = {};\n          }\n          normalizedData.optionalDependencies[dependency.name] = dependency.version;\n          break;\n        case DependencyType.Peer:\n          if (!normalizedData.peerDependencies) {\n            normalizedData.peerDependencies = {};\n          }\n          normalizedData.peerDependencies[dependency.name] = dependency.version;\n          break;\n        case DependencyType.Dev: // uses this._devDependencies instead\n        case DependencyType.YarnResolutions: // uses this._resolutions instead\n        default:\n          throw new InternalError('Unsupported DependencyType');\n      }\n    }\n\n    const devDependenciesKeys: string[] = [...this._devDependencies.keys()].sort();\n\n    for (const packageName of devDependenciesKeys) {\n      const dependency: PackageJsonDependency = this._devDependencies.get(packageName)!;\n\n      if (!normalizedData.devDependencies) {\n        normalizedData.devDependencies = {};\n      }\n      normalizedData.devDependencies[dependency.name] = dependency.version;\n    }\n\n    // (Do not sort this._resolutions because order may be significant; the RFC is unclear about that.)\n    for (const packageName of this._resolutions.keys()) {\n      const dependency: PackageJsonDependency = this._resolutions.get(packageName)!;\n\n      if (!normalizedData.resolutions) {\n        normalizedData.resolutions = {};\n      }\n      normalizedData.resolutions[dependency.name] = dependency.version;\n    }\n\n    return normalizedData;\n  }\n}\n"]}