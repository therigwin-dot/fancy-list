"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArtifactoryConfiguration = void 0;
const node_core_library_1 = require("@rushstack/node-core-library");
const artifactory_schema_json_1 = __importDefault(require("../../schemas/artifactory.schema.json"));
/**
 * Use this class to load the "common/config/rush/artifactory.json" config file.
 * It configures the "rush setup" command.
 */
class ArtifactoryConfiguration {
    /**
     * @internal
     */
    constructor(jsonFileName) {
        this._jsonFileName = jsonFileName;
        this.configuration = {
            packageRegistry: {
                enabled: false,
                registryUrl: '',
                artifactoryWebsiteUrl: ''
            }
        };
        if (node_core_library_1.FileSystem.exists(this._jsonFileName)) {
            this.configuration = node_core_library_1.JsonFile.loadAndValidate(this._jsonFileName, ArtifactoryConfiguration._jsonSchema);
            if (!this.configuration.packageRegistry.credentialType) {
                this.configuration.packageRegistry.credentialType = 'password';
            }
        }
    }
}
exports.ArtifactoryConfiguration = ArtifactoryConfiguration;
ArtifactoryConfiguration._jsonSchema = node_core_library_1.JsonSchema.fromLoadedObject(artifactory_schema_json_1.default);
//# sourceMappingURL=ArtifactoryConfiguration.js.map