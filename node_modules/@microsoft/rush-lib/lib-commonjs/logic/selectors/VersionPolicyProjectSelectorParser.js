"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionPolicyProjectSelectorParser = void 0;
const node_core_library_1 = require("@rushstack/node-core-library");
class VersionPolicyProjectSelectorParser {
    constructor(rushConfiguration) {
        this._rushConfiguration = rushConfiguration;
    }
    async evaluateSelectorAsync({ unscopedSelector, terminal, parameterName }) {
        const selection = new Set();
        if (!this._rushConfiguration.versionPolicyConfiguration.versionPolicies.has(unscopedSelector)) {
            terminal.writeErrorLine(`The version policy "${unscopedSelector}" passed to "${parameterName}" does not exist in version-policies.json.`);
            throw new node_core_library_1.AlreadyReportedError();
        }
        for (const project of this._rushConfiguration.projects) {
            if (project.versionPolicyName === unscopedSelector) {
                selection.add(project);
            }
        }
        return selection;
    }
    getCompletions() {
        return this._rushConfiguration.versionPolicyConfiguration.versionPolicies.keys();
    }
}
exports.VersionPolicyProjectSelectorParser = VersionPolicyProjectSelectorParser;
//# sourceMappingURL=VersionPolicyProjectSelectorParser.js.map