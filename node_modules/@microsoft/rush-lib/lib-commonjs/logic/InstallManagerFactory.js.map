{"version":3,"file":"InstallManagerFactory.js","sourceRoot":"","sources":["../../src/logic/InstallManagerFactory.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3D,sFAAmF;AAQnF,MAAa,qBAAqB;IACzB,MAAM,CAAC,KAAK,CAAC,sBAAsB,CACxC,iBAAoC,EACpC,gBAAkC,EAClC,YAA0B,EAC1B,OAA+B;QAE/B,IACE,iBAAiB,CAAC,MAAM;YACxB,iBAAiB,CAAC,WAAW;YAC7B,iBAAiB,CAAC,WAAW,CAAC,aAAa,EAC3C,CAAC;YACD,OAAO,IAAI,iDAAuB,CAAC,iBAAiB,EAAE,gBAAgB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;QACjG,CAAC;QAED,MAAM,wBAAwB,GAAyD;QACrF,4CAA4C;QAC5C,qCAAqC,GACtC,CAAC;QACF,OAAO,IAAI,wBAAwB,CAAC,kBAAkB,CACpD,iBAAiB,EACjB,gBAAgB,EAChB,YAAY,EACZ,OAAO,CACR,CAAC;IACJ,CAAC;CACF;AA1BD,sDA0BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { WorkspaceInstallManager } from './installManager/WorkspaceInstallManager';\nimport type { PurgeManager } from './PurgeManager';\nimport type { RushConfiguration } from '../api/RushConfiguration';\nimport type { RushGlobalFolder } from '../api/RushGlobalFolder';\n\nimport type { BaseInstallManager } from './base/BaseInstallManager';\nimport type { IInstallManagerOptions } from './base/BaseInstallManagerTypes';\n\nexport class InstallManagerFactory {\n  public static async getInstallManagerAsync(\n    rushConfiguration: RushConfiguration,\n    rushGlobalFolder: RushGlobalFolder,\n    purgeManager: PurgeManager,\n    options: IInstallManagerOptions\n  ): Promise<BaseInstallManager> {\n    if (\n      rushConfiguration.isPnpm &&\n      rushConfiguration.pnpmOptions &&\n      rushConfiguration.pnpmOptions.useWorkspaces\n    ) {\n      return new WorkspaceInstallManager(rushConfiguration, rushGlobalFolder, purgeManager, options);\n    }\n\n    const rushInstallManagerModule: typeof import('./installManager/RushInstallManager') = await import(\n      /* webpackChunkName: 'RushInstallManager' */\n      './installManager/RushInstallManager'\n    );\n    return new rushInstallManagerModule.RushInstallManager(\n      rushConfiguration,\n      rushGlobalFolder,\n      purgeManager,\n      options\n    );\n  }\n}\n"]}