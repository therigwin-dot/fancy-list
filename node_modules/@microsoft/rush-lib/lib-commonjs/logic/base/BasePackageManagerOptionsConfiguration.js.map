{"version":3,"file":"BasePackageManagerOptionsConfiguration.js","sourceRoot":"","sources":["../../../src/logic/base/BasePackageManagerOptionsConfiguration.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AA0C3D;;;;GAIG;AACH,MAAsB,sCAAsC;IAM1D,gBAAgB;IAChB,YAAsB,IAAoC;QACxD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;IACxD,CAAC;CACF;AAVD,wFAUC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * Represents the value of an environment variable, and if the value should be overridden if the variable is set\n * in the parent environment.\n * @public\n */\nexport interface IConfigurationEnvironmentVariable {\n  /**\n   * Value of the environment variable\n   */\n  value: string;\n\n  /**\n   * Set to true to override the environment variable even if it is set in the parent environment.\n   * The default value is false.\n   */\n  override?: boolean;\n}\n\n/**\n * A collection of environment variables\n * @public\n */\nexport interface IConfigurationEnvironment {\n  /**\n   * Environment variables\n   */\n  [environmentVariableName: string]: IConfigurationEnvironmentVariable;\n}\n\n/**\n * Options for the package manager.\n * @public\n */\nexport interface IPackageManagerOptionsJsonBase {\n  /**\n   * Environment variables for the package manager\n   */\n  environmentVariables?: IConfigurationEnvironment;\n}\n\n/**\n * Options that all package managers share.\n *\n * @public\n */\nexport abstract class PackageManagerOptionsConfigurationBase implements IPackageManagerOptionsJsonBase {\n  /**\n   * Environment variables for the package manager\n   */\n  public readonly environmentVariables?: IConfigurationEnvironment;\n\n  /** @internal */\n  protected constructor(json: IPackageManagerOptionsJsonBase) {\n    this.environmentVariables = json.environmentVariables;\n  }\n}\n"]}