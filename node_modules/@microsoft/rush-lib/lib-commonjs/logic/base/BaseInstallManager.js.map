{"version":3,"file":"BaseInstallManager.js","sourceRoot":"","sources":["../../../src/logic/base/BaseInstallManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as crypto from 'crypto';\nimport * as semver from 'semver';\nimport {\n  FileSystem,\n  JsonFile,\n  PosixModeBits,\n  NewlineKind,\n  AlreadyReportedError,\n  type FileSystemStats,\n  Path,\n  type FolderItem,\n  Async\n} from '@rushstack/node-core-library';\nimport { existsSync } from 'fs';\nimport { readFile, unlink } from 'fs/promises';\nimport { PrintUtilities, Colorize, type ITerminal } from '@rushstack/terminal';\nimport {\n  type ILockfile,\n  type ILockfilePackage,\n  type ILogMessageCallbackOptions,\n  pnpmSyncGetJsonVersion,\n  pnpmSyncPrepareAsync\n} from 'pnpm-sync-lib';\n\nimport { ApprovedPackagesChecker } from '../ApprovedPackagesChecker';\nimport type { AsyncRecycler } from '../../utilities/AsyncRecycler';\nimport type { BaseShrinkwrapFile } from './BaseShrinkwrapFile';\nimport { EnvironmentConfiguration } from '../../api/EnvironmentConfiguration';\nimport { Git } from '../Git';\nimport {\n  type LastInstallFlag,\n  getCommonTempFlag,\n  type ILastInstallFlagJson\n} from '../../api/LastInstallFlag';\nimport type { PnpmPackageManager } from '../../api/packageManager/PnpmPackageManager';\nimport type { PurgeManager } from '../PurgeManager';\nimport type { ICurrentVariantJson, RushConfiguration } from '../../api/RushConfiguration';\nimport { Rush } from '../../api/Rush';\nimport type { RushGlobalFolder } from '../../api/RushGlobalFolder';\nimport { RushConstants } from '../RushConstants';\nimport { ShrinkwrapFileFactory } from '../ShrinkwrapFileFactory';\nimport { Utilities } from '../../utilities/Utilities';\nimport { InstallHelpers } from '../installManager/InstallHelpers';\nimport * as PolicyValidator from '../policy/PolicyValidator';\nimport type { WebClient as WebClientType, IWebClientResponse } from '../../utilities/WebClient';\nimport { SetupPackageRegistry } from '../setup/SetupPackageRegistry';\nimport { PnpmfileConfiguration } from '../pnpm/PnpmfileConfiguration';\nimport type { IInstallManagerOptions } from './BaseInstallManagerTypes';\nimport { isVariableSetInNpmrcFile } from '../../utilities/npmrcUtilities';\nimport type { PnpmResolutionMode } from '../pnpm/PnpmOptionsConfiguration';\nimport { SubspacePnpmfileConfiguration } from '../pnpm/SubspacePnpmfileConfiguration';\nimport type { Subspace } from '../../api/Subspace';\nimport { ProjectImpactGraphGenerator } from '../ProjectImpactGraphGenerator';\nimport { FlagFile } from '../../api/FlagFile';\nimport { PnpmShrinkwrapFile } from '../pnpm/PnpmShrinkwrapFile';\nimport { PnpmSyncUtilities } from '../../utilities/PnpmSyncUtilities';\n\n/**\n * Pnpm don't support --ignore-compatibility-db, so use --config.ignoreCompatibilityDb for now.\n */\nexport const pnpmIgnoreCompatibilityDbParameter: string = '--config.ignoreCompatibilityDb';\nconst pnpmCacheDirParameter: string = '--config.cacheDir';\nconst pnpmStateDirParameter: string = '--config.stateDir';\n\nconst gitLfsHooks: ReadonlySet<string> = new Set(['post-checkout', 'post-commit', 'post-merge', 'pre-push']);\n\n/**\n * This class implements common logic between \"rush install\" and \"rush update\".\n */\nexport abstract class BaseInstallManager {\n  private readonly _commonTempLinkFlag: FlagFile;\n  private _npmSetupValidated: boolean = false;\n  private _syncNpmrcAlreadyCalled: boolean = false;\n\n  protected readonly _terminal: ITerminal;\n\n  protected readonly rushConfiguration: RushConfiguration;\n  protected readonly rushGlobalFolder: RushGlobalFolder;\n  protected readonly installRecycler: AsyncRecycler;\n  protected readonly options: IInstallManagerOptions;\n  // Mapping of subspaceName -> LastInstallFlag\n  protected readonly subspaceInstallFlags: Map<string, LastInstallFlag>;\n\n  public constructor(\n    rushConfiguration: RushConfiguration,\n    rushGlobalFolder: RushGlobalFolder,\n    purgeManager: PurgeManager,\n    options: IInstallManagerOptions\n  ) {\n    this._terminal = options.terminal;\n    this.rushConfiguration = rushConfiguration;\n    this.rushGlobalFolder = rushGlobalFolder;\n    this.installRecycler = purgeManager.commonTempFolderRecycler;\n    this.options = options;\n\n    this._commonTempLinkFlag = new FlagFile(\n      options.subspace.getSubspaceTempFolderPath(),\n      RushConstants.lastLinkFlagFilename,\n      {}\n    );\n\n    this.subspaceInstallFlags = new Map();\n    if (rushConfiguration.subspacesFeatureEnabled) {\n      for (const subspace of rushConfiguration.subspaces) {\n        this.subspaceInstallFlags.set(subspace.subspaceName, getCommonTempFlag(rushConfiguration, subspace));\n      }\n    }\n  }\n\n  public async doInstallAsync(): Promise<void> {\n    const { allowShrinkwrapUpdates, selectedProjects, pnpmFilterArgumentValues, resolutionOnly, variant } =\n      this.options;\n    const isFilteredInstall: boolean = pnpmFilterArgumentValues.length > 0;\n    const useWorkspaces: boolean =\n      this.rushConfiguration.pnpmOptions && this.rushConfiguration.pnpmOptions.useWorkspaces;\n    // Prevent filtered installs when workspaces is disabled\n    if (isFilteredInstall && !useWorkspaces) {\n      // eslint-disable-next-line no-console\n      console.log();\n      // eslint-disable-next-line no-console\n      console.log(\n        Colorize.red(\n          'Project filtering arguments can only be used when running in a workspace environment. Run the ' +\n            'command again without specifying these arguments.'\n        )\n      );\n      throw new AlreadyReportedError();\n    }\n\n    // Prevent update when using a filter, as modifications to the shrinkwrap shouldn't be saved\n    if (allowShrinkwrapUpdates && isFilteredInstall) {\n      // Allow partial update when there are subspace projects\n      if (!this.rushConfiguration.subspacesFeatureEnabled) {\n        // eslint-disable-next-line no-console\n        console.log();\n        // eslint-disable-next-line no-console\n        console.log(\n          Colorize.red(\n            'Project filtering arguments cannot be used when running \"rush update\". Run the command again ' +\n              'without specifying these arguments.'\n          )\n        );\n        throw new AlreadyReportedError();\n      }\n    }\n\n    const subspace: Subspace = this.options.subspace;\n\n    const projectImpactGraphGenerator: ProjectImpactGraphGenerator | undefined = this.rushConfiguration\n      .experimentsConfiguration.configuration.generateProjectImpactGraphDuringRushUpdate\n      ? new ProjectImpactGraphGenerator(this._terminal, this.rushConfiguration)\n      : undefined;\n    const { shrinkwrapIsUpToDate, npmrcHash, projectImpactGraphIsUpToDate, variantIsUpToDate } =\n      await this.prepareAsync(subspace, variant, projectImpactGraphGenerator);\n\n    if (this.options.checkOnly) {\n      return;\n    }\n\n    // eslint-disable-next-line no-console\n    console.log('\\n' + Colorize.bold(`Checking installation in \"${subspace.getSubspaceTempFolderPath()}\"`));\n\n    // This marker file indicates that the last \"rush install\" completed successfully.\n    // Always perform a clean install if filter flags were provided. Additionally, if\n    // \"--purge\" was specified, or if the last install was interrupted, then we will\n    // need to perform a clean install.  Otherwise, we can do an incremental install.\n    const commonTempInstallFlag: LastInstallFlag = getCommonTempFlag(this.rushConfiguration, subspace, {\n      npmrcHash: npmrcHash || '<NO NPMRC>'\n    });\n    if (isFilteredInstall && selectedProjects) {\n      const selectedProjectNames: string[] = [];\n      for (const { packageName } of selectedProjects) {\n        selectedProjectNames.push(packageName);\n      }\n\n      selectedProjectNames.sort();\n      // Get the projects involved in this filtered install\n      commonTempInstallFlag.mergeFromObject({\n        selectedProjectNames\n      });\n    }\n    const optionsToIgnore: (keyof ILastInstallFlagJson)[] | undefined = !this.rushConfiguration\n      .experimentsConfiguration.configuration.cleanInstallAfterNpmrcChanges\n      ? ['npmrcHash'] // If the \"cleanInstallAfterNpmrcChanges\" experiment is disabled, ignore the npmrcHash\n      : undefined;\n    const cleanInstall: boolean = !(await commonTempInstallFlag.checkValidAndReportStoreIssuesAsync({\n      rushVerb: allowShrinkwrapUpdates ? 'update' : 'install',\n      statePropertiesToIgnore: optionsToIgnore\n    }));\n\n    // Allow us to defer the file read until we need it\n    const canSkipInstallAsync: () => Promise<boolean> = async () => {\n      // Based on timestamps, can we skip this install entirely?\n      const outputStats: FileSystemStats = await FileSystem.getStatisticsAsync(commonTempInstallFlag.path);\n      return this.canSkipInstallAsync(outputStats.mtime, subspace, variant);\n    };\n\n    if (\n      resolutionOnly ||\n      cleanInstall ||\n      !variantIsUpToDate ||\n      !shrinkwrapIsUpToDate ||\n      !(await canSkipInstallAsync()) ||\n      !projectImpactGraphIsUpToDate\n    ) {\n      // eslint-disable-next-line no-console\n      console.log();\n      await this.validateNpmSetupAsync();\n\n      if (!this.rushConfiguration.rushConfigurationJson.suppressRushIsPublicVersionCheck) {\n        let publishedRelease: boolean | undefined;\n        try {\n          publishedRelease = await this._checkIfReleaseIsPublishedAsync();\n        } catch {\n          // If the user is working in an environment that can't reach the registry,\n          // don't bother them with errors.\n        }\n\n        if (publishedRelease === false) {\n          // eslint-disable-next-line no-console\n          console.log(\n            Colorize.yellow('Warning: This release of the Rush tool was unpublished; it may be unstable.')\n          );\n        }\n      }\n\n      if (!resolutionOnly) {\n        // Delete the successful install file to indicate the install transaction has started\n        await commonTempInstallFlag.clearAsync();\n\n        // Since we're going to be tampering with common/node_modules, delete the \"rush link\" flag file if it exists;\n        // this ensures that a full \"rush link\" is required next time\n        await this._commonTempLinkFlag.clearAsync();\n      }\n\n      // Give plugins an opportunity to act before invoking the installation process\n      if (this.options.beforeInstallAsync !== undefined) {\n        await this.options.beforeInstallAsync(subspace);\n      }\n\n      await Promise.all([\n        // Perform the actual install\n        this.installAsync(cleanInstall, subspace),\n        // If allowed, generate the project impact graph\n        allowShrinkwrapUpdates ? projectImpactGraphGenerator?.generateAsync() : undefined\n      ]);\n\n      if (this.options.allowShrinkwrapUpdates && !shrinkwrapIsUpToDate) {\n        const committedShrinkwrapFileName: string = subspace.getCommittedShrinkwrapFilePath(variant);\n        const shrinkwrapFile: BaseShrinkwrapFile | undefined = ShrinkwrapFileFactory.getShrinkwrapFile(\n          this.rushConfiguration.packageManager,\n          committedShrinkwrapFileName\n        );\n        shrinkwrapFile?.validateShrinkwrapAfterUpdate(this.rushConfiguration, subspace, this._terminal);\n        // Copy (or delete) common\\temp\\pnpm-lock.yaml --> common\\config\\rush\\pnpm-lock.yaml\n        Utilities.syncFile(subspace.getTempShrinkwrapFilename(), committedShrinkwrapFileName);\n      } else {\n        // TODO: Validate whether the package manager updated it in a nontrivial way\n      }\n\n      // Always update the state file if running \"rush update\"\n      if (this.options.allowShrinkwrapUpdates) {\n        if (subspace.getRepoState().refreshState(this.rushConfiguration, subspace, variant)) {\n          // eslint-disable-next-line no-console\n          console.log(\n            Colorize.yellow(\n              `${RushConstants.repoStateFilename} has been modified and must be committed to source control.`\n            )\n          );\n        }\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('Installation is already up-to-date.');\n    }\n\n    const { configuration: experiments } = this.rushConfiguration.experimentsConfiguration;\n    // if usePnpmSyncForInjectedDependencies is true\n    // the pnpm-sync will generate the pnpm-sync.json based on lockfile\n    if (this.rushConfiguration.isPnpm && experiments?.usePnpmSyncForInjectedDependencies) {\n      const pnpmLockfilePath: string = subspace.getTempShrinkwrapFilename();\n      const dotPnpmFolder: string = `${subspace.getSubspaceTempFolderPath()}/node_modules/.pnpm`;\n\n      // we have an edge case here\n      // if a package.json has no dependencies, pnpm will still generate the pnpm-lock.yaml but not .pnpm folder\n      // so we need to make sure pnpm-lock.yaml and .pnpm exists before calling the pnpmSync APIs\n      if ((await FileSystem.existsAsync(pnpmLockfilePath)) && (await FileSystem.existsAsync(dotPnpmFolder))) {\n        await pnpmSyncPrepareAsync({\n          lockfilePath: pnpmLockfilePath,\n          dotPnpmFolder,\n          lockfileId: subspace.subspaceName,\n          ensureFolderAsync: FileSystem.ensureFolderAsync,\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          readPnpmLockfile: async (lockfilePath: string) => {\n            const wantedPnpmLockfile: PnpmShrinkwrapFile | undefined = PnpmShrinkwrapFile.loadFromFile(\n              lockfilePath,\n              { withCaching: true }\n            );\n\n            if (!wantedPnpmLockfile) {\n              return undefined;\n            } else {\n              const lockfilePackages: Record<string, ILockfilePackage> = Object.create(null);\n              for (const versionPath of wantedPnpmLockfile.packages.keys()) {\n                lockfilePackages[versionPath] = {\n                  dependencies: wantedPnpmLockfile.packages.get(versionPath)?.dependencies as Record<\n                    string,\n                    string\n                  >,\n                  optionalDependencies: wantedPnpmLockfile.packages.get(versionPath)\n                    ?.optionalDependencies as Record<string, string>\n                };\n              }\n\n              const result: ILockfile = {\n                lockfileVersion: wantedPnpmLockfile.shrinkwrapFileMajorVersion,\n                importers: Object.fromEntries(wantedPnpmLockfile.importers.entries()),\n                packages: lockfilePackages\n              };\n\n              return result;\n            }\n          },\n          logMessageCallback: (logMessageOptions: ILogMessageCallbackOptions) =>\n            PnpmSyncUtilities.processLogMessage(logMessageOptions, this._terminal)\n        });\n      }\n\n      // clean up the out of date .pnpm-sync.json\n      for (const rushProject of subspace.getProjects()) {\n        const pnpmSyncJsonPath: string = `${rushProject.projectFolder}/node_modules/.pnpm-sync.json`;\n        if (!existsSync(pnpmSyncJsonPath)) {\n          continue;\n        }\n\n        let existingPnpmSyncJsonFile: { version: string } | undefined;\n        try {\n          existingPnpmSyncJsonFile = JSON.parse((await readFile(pnpmSyncJsonPath)).toString());\n          if (existingPnpmSyncJsonFile?.version !== pnpmSyncGetJsonVersion()) {\n            await unlink(pnpmSyncJsonPath);\n          }\n        } catch (e) {\n          await unlink(pnpmSyncJsonPath);\n        }\n      }\n    }\n\n    // Perform any post-install work the install manager requires\n    await this.postInstallAsync(subspace);\n\n    if (!resolutionOnly) {\n      // Create the marker file to indicate a successful install\n      await commonTempInstallFlag.createAsync();\n    }\n\n    // Give plugins an opportunity to act after a successful install\n    if (this.options.afterInstallAsync !== undefined) {\n      await this.options.afterInstallAsync(subspace);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log('');\n  }\n\n  protected abstract prepareCommonTempAsync(\n    subspace: Subspace,\n    shrinkwrapFile: BaseShrinkwrapFile | undefined\n  ): Promise<{ shrinkwrapIsUpToDate: boolean; shrinkwrapWarnings: string[] }>;\n\n  protected abstract installAsync(cleanInstall: boolean, subspace: Subspace): Promise<void>;\n\n  protected abstract postInstallAsync(subspace: Subspace): Promise<void>;\n\n  protected async canSkipInstallAsync(\n    lastModifiedDate: Date,\n    subspace: Subspace,\n    variant: string | undefined\n  ): Promise<boolean> {\n    // Based on timestamps, can we skip this install entirely?\n    const potentiallyChangedFiles: string[] = [];\n\n    // Consider the timestamp on the node_modules folder; if someone tampered with it\n    // or deleted it entirely, then we can't skip this install\n    potentiallyChangedFiles.push(\n      path.join(subspace.getSubspaceTempFolderPath(), RushConstants.nodeModulesFolderName)\n    );\n\n    // Additionally, if they pulled an updated shrinkwrap file from Git,\n    // then we can't skip this install\n    potentiallyChangedFiles.push(subspace.getCommittedShrinkwrapFilePath(variant));\n\n    // Add common-versions.json file to the potentially changed files list.\n    potentiallyChangedFiles.push(subspace.getCommonVersionsFilePath(variant));\n\n    // Add pnpm-config.json file to the potentially changed files list.\n    potentiallyChangedFiles.push(subspace.getPnpmConfigFilePath());\n\n    if (this.rushConfiguration.isPnpm) {\n      // If the repo is using pnpmfile.js, consider that also\n      const pnpmFileFilePath: string = subspace.getPnpmfilePath(variant);\n      const pnpmFileExists: boolean = await FileSystem.existsAsync(pnpmFileFilePath);\n\n      if (pnpmFileExists) {\n        potentiallyChangedFiles.push(pnpmFileFilePath);\n      }\n    }\n\n    return await Utilities.isFileTimestampCurrentAsync(lastModifiedDate, potentiallyChangedFiles);\n  }\n\n  protected async prepareAsync(\n    subspace: Subspace,\n    variant: string | undefined,\n    projectImpactGraphGenerator: ProjectImpactGraphGenerator | undefined\n  ): Promise<{\n    shrinkwrapIsUpToDate: boolean;\n    npmrcHash: string | undefined;\n    projectImpactGraphIsUpToDate: boolean;\n    variantIsUpToDate: boolean;\n  }> {\n    const terminal: ITerminal = this._terminal;\n    const { allowShrinkwrapUpdates } = this.options;\n\n    // Check the policies\n    await PolicyValidator.validatePolicyAsync(this.rushConfiguration, subspace, variant, this.options);\n\n    await this._installGitHooksAsync();\n\n    const approvedPackagesChecker: ApprovedPackagesChecker = new ApprovedPackagesChecker(\n      this.rushConfiguration\n    );\n    if (approvedPackagesChecker.approvedPackagesFilesAreOutOfDate) {\n      approvedPackagesChecker.rewriteConfigFiles();\n      if (allowShrinkwrapUpdates) {\n        terminal.writeLine(\n          Colorize.yellow(\n            'Approved package files have been updated. These updates should be committed to source control'\n          )\n        );\n      } else {\n        throw new Error(`Approved packages files are out-of date. Run \"rush update\" to update them.`);\n      }\n    }\n\n    // Ensure that the package manager is installed\n    await InstallHelpers.ensureLocalPackageManagerAsync(\n      this.rushConfiguration,\n      this.rushGlobalFolder,\n      this.options.maxInstallAttempts\n    );\n\n    let shrinkwrapFile: BaseShrinkwrapFile | undefined = undefined;\n\n    // (If it's a full update, then we ignore the shrinkwrap from Git since it will be overwritten)\n    if (!this.options.fullUpgrade) {\n      const committedShrinkwrapFileName: string = subspace.getCommittedShrinkwrapFilePath(variant);\n      try {\n        shrinkwrapFile = ShrinkwrapFileFactory.getShrinkwrapFile(\n          this.rushConfiguration.packageManager,\n          committedShrinkwrapFileName\n        );\n      } catch (ex) {\n        terminal.writeLine();\n        terminal.writeLine(\n          `Unable to load the ${this.rushConfiguration.shrinkwrapFilePhrase}: ${(ex as Error).message}`\n        );\n\n        if (!allowShrinkwrapUpdates) {\n          terminal.writeLine();\n          terminal.writeLine(Colorize.red('You need to run \"rush update\" to fix this problem'));\n          throw new AlreadyReportedError();\n        }\n\n        shrinkwrapFile = undefined;\n      }\n    }\n\n    // Write a file indicating which variant is being installed.\n    // This will be used by bulk scripts to determine the correct Shrinkwrap file to track.\n    const currentVariantJsonFilePath: string = this.rushConfiguration.currentVariantJsonFilePath;\n    const currentVariantJson: ICurrentVariantJson = {\n      variant: variant ?? null\n    };\n\n    // Determine if the variant is already current by updating current-variant.json.\n    // If nothing is written, the variant has not changed.\n    const variantIsUpToDate: boolean = !(await JsonFile.saveAsync(\n      currentVariantJson,\n      currentVariantJsonFilePath,\n      {\n        onlyIfChanged: true\n      }\n    ));\n    this.rushConfiguration._currentVariantJsonLoadingPromise = undefined;\n\n    if (this.options.variant) {\n      terminal.writeLine();\n      terminal.writeLine(Colorize.bold(`Using variant '${this.options.variant}' for installation.`));\n    } else if (!variantIsUpToDate && !variant && this.rushConfiguration.variants.size > 0) {\n      terminal.writeLine();\n      terminal.writeLine(Colorize.bold('Using the default variant for installation.'));\n    }\n\n    const extraNpmrcLines: string[] = [];\n    if (this.rushConfiguration.subspacesFeatureEnabled) {\n      // Look for a monorepo level .npmrc file\n      const commonNpmrcPath: string = `${this.rushConfiguration.commonRushConfigFolder}/.npmrc`;\n      let commonNpmrcFileLines: string[] | undefined;\n      try {\n        commonNpmrcFileLines = (await FileSystem.readFileAsync(commonNpmrcPath)).split('\\n');\n      } catch (e) {\n        if (!FileSystem.isNotExistError(e)) {\n          throw e;\n        }\n      }\n\n      if (commonNpmrcFileLines) {\n        extraNpmrcLines.push(...commonNpmrcFileLines);\n      }\n\n      extraNpmrcLines.push(\n        `global-pnpmfile=${subspace.getSubspaceTempFolderPath()}/${RushConstants.pnpmfileGlobalFilename}`\n      );\n    }\n\n    // Also copy down the committed .npmrc file, if there is one\n    // \"common\\config\\rush\\.npmrc\" --> \"common\\temp\\.npmrc\"\n    // Also ensure that we remove any old one that may be hanging around\n    const npmrcText: string | undefined = Utilities.syncNpmrc({\n      sourceNpmrcFolder: subspace.getSubspaceConfigFolderPath(),\n      targetNpmrcFolder: subspace.getSubspaceTempFolderPath(),\n      linesToPrepend: extraNpmrcLines,\n      createIfMissing: this.rushConfiguration.subspacesFeatureEnabled,\n      supportEnvVarFallbackSyntax: this.rushConfiguration.isPnpm\n    });\n    this._syncNpmrcAlreadyCalled = true;\n\n    const npmrcHash: string | undefined = npmrcText\n      ? crypto.createHash('sha1').update(npmrcText).digest('hex')\n      : undefined;\n\n    if (this.rushConfiguration.isPnpm) {\n      // Copy the committed patches folder if using pnpm\n      const commonTempPnpmPatchesFolder: string = `${subspace.getSubspaceTempFolderPath()}/${\n        RushConstants.pnpmPatchesFolderName\n      }`;\n      const rushPnpmPatchesFolder: string = subspace.getSubspacePnpmPatchesFolderPath();\n      let rushPnpmPatches: FolderItem[] | undefined;\n      try {\n        rushPnpmPatches = await FileSystem.readFolderItemsAsync(rushPnpmPatchesFolder);\n      } catch (e) {\n        if (!FileSystem.isNotExistError(e)) {\n          throw e;\n        }\n      }\n\n      if (rushPnpmPatches) {\n        await FileSystem.ensureFolderAsync(commonTempPnpmPatchesFolder);\n        const existingPatches: FolderItem[] =\n          await FileSystem.readFolderItemsAsync(commonTempPnpmPatchesFolder);\n        const copiedPatchNames: Set<string> = new Set();\n        await Async.forEachAsync(\n          rushPnpmPatches,\n          async (patch: FolderItem) => {\n            const name: string = patch.name;\n            const sourcePath: string = `${rushPnpmPatchesFolder}/${name}`;\n            if (patch.isFile()) {\n              await FileSystem.copyFileAsync({\n                sourcePath,\n                destinationPath: `${commonTempPnpmPatchesFolder}/${name}`\n              });\n              copiedPatchNames.add(name);\n            } else {\n              throw new Error(`Unexpected non-file item found in ${rushPnpmPatchesFolder}: ${sourcePath}`);\n            }\n          },\n          { concurrency: 50 }\n        );\n\n        await Async.forEachAsync(\n          existingPatches,\n          async (patch: FolderItem) => {\n            const name: string = patch.name;\n            if (!copiedPatchNames.has(name)) {\n              await FileSystem.deleteFileAsync(`${commonTempPnpmPatchesFolder}/${name}`);\n            }\n          },\n          { concurrency: 50 }\n        );\n      } else {\n        await FileSystem.deleteFolderAsync(commonTempPnpmPatchesFolder);\n      }\n    }\n\n    // Shim support for pnpmfile in.\n    // Additionally when in workspaces, the shim implements support for common versions.\n    if (this.rushConfiguration.isPnpm) {\n      await PnpmfileConfiguration.writeCommonTempPnpmfileShimAsync(\n        this.rushConfiguration,\n        subspace.getSubspaceTempFolderPath(),\n        subspace,\n        variant\n      );\n\n      if (this.rushConfiguration.subspacesFeatureEnabled) {\n        await SubspacePnpmfileConfiguration.writeCommonTempSubspaceGlobalPnpmfileAsync(\n          this.rushConfiguration,\n          subspace,\n          variant\n        );\n      }\n    }\n\n    // eslint-disable-next-line prefer-const\n    let [{ shrinkwrapIsUpToDate, shrinkwrapWarnings }, projectImpactGraphIsUpToDate = true] =\n      await Promise.all([\n        // Allow for package managers to do their own preparation and check that the shrinkwrap is up to date\n        this.prepareCommonTempAsync(subspace, shrinkwrapFile),\n        projectImpactGraphGenerator?.validateAsync()\n      ]);\n    shrinkwrapIsUpToDate = shrinkwrapIsUpToDate && !this.options.recheckShrinkwrap;\n\n    this._syncTempShrinkwrap(subspace, variant, shrinkwrapFile);\n\n    // Write out the reported warnings\n    if (shrinkwrapWarnings.length > 0) {\n      terminal.writeLine();\n      terminal.writeLine(\n        Colorize.yellow(\n          PrintUtilities.wrapWords(\n            `The ${this.rushConfiguration.shrinkwrapFilePhrase} contains the following issues:`\n          )\n        )\n      );\n\n      for (const shrinkwrapWarning of shrinkwrapWarnings) {\n        terminal.writeLine(Colorize.yellow('  ' + shrinkwrapWarning));\n      }\n\n      terminal.writeLine();\n    }\n\n    let hasErrors: boolean = false;\n    // Force update if the shrinkwrap is out of date\n    if (!shrinkwrapIsUpToDate && !allowShrinkwrapUpdates) {\n      terminal.writeErrorLine();\n      terminal.writeErrorLine(\n        `The ${this.rushConfiguration.shrinkwrapFilePhrase} is out of date. You need to run \"rush update\".`\n      );\n      hasErrors = true;\n    }\n\n    if (!projectImpactGraphIsUpToDate && !allowShrinkwrapUpdates) {\n      hasErrors = true;\n      terminal.writeErrorLine();\n      terminal.writeErrorLine(\n        Colorize.red(\n          `The ${RushConstants.projectImpactGraphFilename} file is missing or out of date. You need to run \"rush update\".`\n        )\n      );\n    }\n\n    if (hasErrors) {\n      throw new AlreadyReportedError();\n    }\n\n    return { shrinkwrapIsUpToDate, npmrcHash, projectImpactGraphIsUpToDate, variantIsUpToDate };\n  }\n\n  /**\n   * Git hooks are only installed if the repo opts in by including files in /common/git-hooks\n   */\n  private async _installGitHooksAsync(): Promise<void> {\n    const hookSource: string = path.join(this.rushConfiguration.commonFolder, 'git-hooks');\n    const git: Git = new Git(this.rushConfiguration);\n    const hookDestination: string | undefined = git.getHooksFolder();\n\n    if (FileSystem.exists(hookSource) && hookDestination) {\n      const allHookFilenames: string[] = FileSystem.readFolderItemNames(hookSource);\n      // Ignore the \".sample\" file(s) in this folder.\n      const hookFilenames: string[] = allHookFilenames.filter((x) => !/\\.sample$/.test(x));\n      if (hookFilenames.length > 0) {\n        // eslint-disable-next-line no-console\n        console.log('\\n' + Colorize.bold('Found files in the \"common/git-hooks\" folder.'));\n\n        if (!(await git.getIsHooksPathDefaultAsync())) {\n          const hooksPath: string = await git.getConfigHooksPathAsync();\n          const color: (str: string) => string = this.options.bypassPolicy ? Colorize.yellow : Colorize.red;\n          // eslint-disable-next-line no-console\n          console.error(\n            color(\n              [\n                ' ',\n                `Rush cannot install the \"common/git-hooks\" scripts because your Git configuration `,\n                `specifies \"core.hooksPath=${hooksPath}\". You can remove the setting by running:`,\n                ' ',\n                '    git config --unset core.hooksPath',\n                ' '\n              ].join('\\n')\n            )\n          );\n          if (this.options.bypassPolicy) {\n            // If \"--bypass-policy\" is specified, skip installation of hooks because Rush doesn't\n            // own the hooks folder\n            return;\n          }\n          // eslint-disable-next-line no-console\n          console.error(\n            color(\n              [\n                '(Or, to temporarily ignore this problem, invoke Rush with the ' +\n                  `\"${RushConstants.bypassPolicyFlagLongName}\" option.)`,\n                ' '\n              ].join('\\n')\n            )\n          );\n          throw new AlreadyReportedError();\n        }\n\n        // Clear the currently installed git hooks and install fresh copies\n        FileSystem.ensureEmptyFolder(hookDestination);\n\n        // Find the relative path from Git hooks directory to the directory storing the actual scripts.\n        const hookRelativePath: string = Path.convertToSlashes(path.relative(hookDestination, hookSource));\n\n        // Only copy files that look like Git hook names\n        const filteredHookFilenames: string[] = hookFilenames.filter((x) => /^[a-z\\-]+/.test(x));\n        for (const filename of filteredHookFilenames) {\n          const hookFilePath: string = `${hookSource}/${filename}`;\n          // Make sure the actual script in the hookSource directory has correct Linux compatible line endings\n          const originalHookFileContent: string = FileSystem.readFile(hookFilePath);\n          FileSystem.writeFile(hookFilePath, originalHookFileContent, {\n            convertLineEndings: NewlineKind.Lf\n          });\n          // Make sure the actual script in the hookSource directory has required permission bits\n          const originalPosixModeBits: PosixModeBits = FileSystem.getPosixModeBits(hookFilePath);\n          FileSystem.changePosixModeBits(\n            hookFilePath,\n            // eslint-disable-next-line no-bitwise\n            originalPosixModeBits | PosixModeBits.UserRead | PosixModeBits.UserExecute\n          );\n\n          const gitLfsHookHandling: string = gitLfsHooks.has(filename)\n            ? `\n# Inspired by https://github.com/git-lfs/git-lfs/issues/2865#issuecomment-365742940\nif command -v git-lfs &> /dev/null; then\n  git lfs ${filename} \"$@\"\nfi\n`\n            : '';\n\n          const hookFileContent: string = `#!/bin/bash\nset -e\nSCRIPT_DIR=\"$( cd \"$( dirname \"\\${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\"\nSCRIPT_IMPLEMENTATION_PATH=\"$SCRIPT_DIR/${hookRelativePath}/${filename}\"\n\nif [[ -f \"$SCRIPT_IMPLEMENTATION_PATH\" ]]; then\n  \"$SCRIPT_IMPLEMENTATION_PATH\" $@\nelse\n  echo \"The ${filename} Git hook no longer exists in your version of the repo. Run 'rush install' or 'rush update' to refresh your installed Git hooks.\" >&2\nfi\n${gitLfsHookHandling}\n`;\n          // Create the hook file.  Important: For Bash scripts, the EOL must not be CRLF.\n          FileSystem.writeFile(path.join(hookDestination, filename), hookFileContent, {\n            convertLineEndings: NewlineKind.Lf\n          });\n\n          FileSystem.changePosixModeBits(\n            path.join(hookDestination, filename),\n            // eslint-disable-next-line no-bitwise\n            PosixModeBits.UserRead | PosixModeBits.UserExecute\n          );\n        }\n\n        // eslint-disable-next-line no-console\n        console.log(\n          'Successfully installed these Git hook scripts: ' + filteredHookFilenames.join(', ') + '\\n'\n        );\n      }\n    }\n  }\n\n  /**\n   * Used when invoking the NPM tool.  Appends the common configuration options\n   * to the command-line.\n   */\n  protected pushConfigurationArgs(args: string[], options: IInstallManagerOptions, subspace: Subspace): void {\n    const {\n      offline,\n      collectLogFile,\n      pnpmFilterArgumentValues,\n      onlyShrinkwrap,\n      networkConcurrency,\n      allowShrinkwrapUpdates,\n      resolutionOnly\n    } = options;\n\n    if (offline && this.rushConfiguration.packageManager !== 'pnpm') {\n      throw new Error('The \"--offline\" parameter is only supported when using the PNPM package manager.');\n    }\n    if (resolutionOnly && this.rushConfiguration.packageManager !== 'pnpm') {\n      throw new Error(\n        'The \"--resolution-only\" parameter is only supported when using the PNPM package manager.'\n      );\n    }\n    if (this.rushConfiguration.packageManager === 'npm') {\n      if (semver.lt(this.rushConfiguration.packageManagerToolVersion, '5.0.0')) {\n        // NOTE:\n        //\n        // When using an npm version older than v5.0.0, we do NOT install optional dependencies for\n        // Rush, because npm does not generate the shrinkwrap file consistently across platforms.\n        //\n        // Consider the \"fsevents\" package. This is a Mac specific package\n        // which is an optional second-order dependency. Optional dependencies work by attempting to install\n        // the package, but removes the package if the install failed.\n        // This means that someone running generate on a Mac WILL have fsevents included in their shrinkwrap.\n        // When someone using Windows attempts to install from the shrinkwrap, the install will fail.\n        //\n        // If someone generates the shrinkwrap using Windows, then fsevents will NOT be listed in the shrinkwrap.\n        // When someone using Mac attempts to install from the shrinkwrap, they will NOT have the\n        // optional dependency installed.\n        //\n        // This issue has been fixed as of npm v5.0.0: https://github.com/npm/npm/releases/tag/v5.0.0\n        //\n        // For more context, see https://github.com/microsoft/rushstack/issues/761#issuecomment-428689600\n        args.push('--no-optional');\n      }\n      args.push('--cache', this.rushConfiguration.npmCacheFolder);\n      args.push('--tmp', this.rushConfiguration.npmTmpFolder);\n\n      if (collectLogFile) {\n        args.push('--verbose');\n      }\n    } else if (this.rushConfiguration.isPnpm) {\n      // Only explicitly define the store path if `pnpmStore` is using the default, or has been set to\n      // 'local'.  If `pnpmStore` = 'global', then allow PNPM to use the system's default\n      // path.  In all cases, this will be overridden by RUSH_PNPM_STORE_PATH\n      if (\n        this.rushConfiguration.pnpmOptions.pnpmStore === 'local' ||\n        EnvironmentConfiguration.pnpmStorePathOverride\n      ) {\n        args.push('--store', this.rushConfiguration.pnpmOptions.pnpmStorePath);\n        if (semver.gte(this.rushConfiguration.packageManagerToolVersion, '6.10.0')) {\n          args.push(`${pnpmCacheDirParameter}=${this.rushConfiguration.pnpmOptions.pnpmStorePath}`);\n          args.push(`${pnpmStateDirParameter}=${this.rushConfiguration.pnpmOptions.pnpmStorePath}`);\n        }\n      }\n\n      const { pnpmVerifyStoreIntegrity } = EnvironmentConfiguration;\n      if (pnpmVerifyStoreIntegrity !== undefined) {\n        args.push(`--verify-store-integrity`, `${pnpmVerifyStoreIntegrity}`);\n      }\n\n      const { configuration: experiments } = this.rushConfiguration.experimentsConfiguration;\n\n      if (experiments.usePnpmFrozenLockfileForRushInstall && !allowShrinkwrapUpdates) {\n        args.push('--frozen-lockfile');\n\n        if (\n          pnpmFilterArgumentValues.length > 0 &&\n          Number.parseInt(this.rushConfiguration.packageManagerToolVersion, 10) >= 8 // PNPM Major version 8+\n        ) {\n          // On pnpm@8, disable the \"dedupe-peer-dependents\" feature when doing a filtered CI install so that filters take effect.\n          args.push('--config.dedupe-peer-dependents=false');\n        }\n      } else if (experiments.usePnpmPreferFrozenLockfileForRushUpdate) {\n        // In workspaces, we want to avoid unnecessary lockfile churn\n        args.push('--prefer-frozen-lockfile');\n      } else {\n        // Ensure that Rush's tarball dependencies get synchronized properly with the pnpm-lock.yaml file.\n        // See this GitHub issue: https://github.com/pnpm/pnpm/issues/1342\n        args.push('--no-prefer-frozen-lockfile');\n      }\n\n      if (onlyShrinkwrap) {\n        args.push(`--lockfile-only`);\n      }\n\n      if (collectLogFile) {\n        args.push('--reporter', 'ndjson');\n      }\n\n      if (networkConcurrency) {\n        args.push('--network-concurrency', networkConcurrency.toString());\n      }\n\n      if (offline) {\n        args.push('--offline');\n      }\n\n      if (this.rushConfiguration.pnpmOptions.strictPeerDependencies === false) {\n        args.push('--no-strict-peer-dependencies');\n      } else {\n        args.push('--strict-peer-dependencies');\n      }\n\n      if (resolutionOnly) {\n        args.push('--resolution-only');\n      }\n\n      /*\n        If user set auto-install-peers in pnpm-config.json only, use the value in pnpm-config.json\n        If user set auto-install-peers in pnpm-config.json and .npmrc, use the value in pnpm-config.json\n        If user set auto-install-peers in .npmrc only, do nothing, let pnpm handle it\n        If user does not set auto-install-peers in both pnpm-config.json and .npmrc, rush will default it to \"false\"\n      */\n      const isAutoInstallPeersInNpmrc: boolean = isVariableSetInNpmrcFile(\n        subspace.getSubspaceConfigFolderPath(),\n        'auto-install-peers',\n        this.rushConfiguration.isPnpm\n      );\n\n      let autoInstallPeers: boolean | undefined = this.rushConfiguration.pnpmOptions.autoInstallPeers;\n      if (autoInstallPeers !== undefined) {\n        if (isAutoInstallPeersInNpmrc) {\n          this._terminal.writeWarningLine(\n            `Warning: PNPM's auto-install-peers is specified in both .npmrc and pnpm-config.json. ` +\n              `The value in pnpm-config.json will take precedence.`\n          );\n        }\n      } else if (!isAutoInstallPeersInNpmrc) {\n        // if auto-install-peers isn't specified in either .npmrc or pnpm-config.json,\n        // then rush will default it to \"false\"\n        autoInstallPeers = false;\n      }\n      if (autoInstallPeers !== undefined) {\n        args.push(`--config.auto-install-peers=${autoInstallPeers}`);\n      }\n\n      /*\n        If user set resolution-mode in pnpm-config.json only, use the value in pnpm-config.json\n        If user set resolution-mode in pnpm-config.json and .npmrc, use the value in pnpm-config.json\n        If user set resolution-mode in .npmrc only, do nothing, let pnpm handle it\n        If user does not set resolution-mode in pnpm-config.json and .npmrc, rush will default it to \"highest\"\n      */\n      const isResolutionModeInNpmrc: boolean = isVariableSetInNpmrcFile(\n        subspace.getSubspaceConfigFolderPath(),\n        'resolution-mode',\n        this.rushConfiguration.isPnpm\n      );\n\n      let resolutionMode: PnpmResolutionMode | undefined = this.rushConfiguration.pnpmOptions.resolutionMode;\n      if (resolutionMode) {\n        if (isResolutionModeInNpmrc) {\n          this._terminal.writeWarningLine(\n            `Warning: PNPM's resolution-mode is specified in both .npmrc and pnpm-config.json. ` +\n              `The value in pnpm-config.json will take precedence.`\n          );\n        }\n      } else if (!isResolutionModeInNpmrc) {\n        // if resolution-mode isn't specified in either .npmrc or pnpm-config.json,\n        // then rush will default it to \"highest\"\n        resolutionMode = 'highest';\n      }\n      if (resolutionMode) {\n        args.push(`--config.resolutionMode=${resolutionMode}`);\n      }\n\n      if (\n        semver.satisfies(\n          this.rushConfiguration.packageManagerToolVersion,\n          '6.32.12 - 6.33.x || 7.0.1 - 7.8.x'\n        )\n      ) {\n        this._terminal.writeWarningLine(\n          `Warning: Your ${RushConstants.rushJsonFilename} specifies a pnpmVersion with a known issue ` +\n            'that may cause unintended version selections.' +\n            \" It's recommended to upgrade to PNPM >=6.34.0 or >=7.9.0. \" +\n            'For details see: https://rushjs.io/link/pnpm-issue-5132'\n        );\n      }\n      if (\n        semver.gte(this.rushConfiguration.packageManagerToolVersion, '7.9.0') ||\n        semver.satisfies(this.rushConfiguration.packageManagerToolVersion, '^6.34.0')\n      ) {\n        args.push(pnpmIgnoreCompatibilityDbParameter);\n      }\n    } else if (this.rushConfiguration.packageManager === 'yarn') {\n      args.push('--link-folder', 'yarn-link');\n      args.push('--cache-folder', this.rushConfiguration.yarnCacheFolder);\n\n      // Without this option, Yarn will sometimes stop and ask for user input on STDIN\n      // (e.g. \"Which command would you like to run?\").\n      args.push('--non-interactive');\n\n      if (networkConcurrency) {\n        args.push('--network-concurrency', networkConcurrency.toString());\n      }\n\n      if (this.rushConfiguration.yarnOptions.ignoreEngines) {\n        args.push('--ignore-engines');\n      }\n\n      if (collectLogFile) {\n        args.push('--verbose');\n      }\n    }\n  }\n\n  private async _checkIfReleaseIsPublishedAsync(): Promise<boolean> {\n    const lastCheckFile: string = path.join(\n      this.rushGlobalFolder.nodeSpecificPath,\n      'rush-' + Rush.version,\n      'last-check.flag'\n    );\n\n    if (FileSystem.exists(lastCheckFile)) {\n      let cachedResult: boolean | 'error' | undefined = undefined;\n      try {\n        // NOTE: mtimeMs is not supported yet in Node.js 6.x\n        const nowMs: number = new Date().getTime();\n        const ageMs: number = nowMs - FileSystem.getStatistics(lastCheckFile).mtime.getTime();\n        const HOUR: number = 60 * 60 * 1000;\n\n        // Is the cache too old?\n        if (ageMs < 24 * HOUR) {\n          // No, read the cached result\n          cachedResult = JsonFile.load(lastCheckFile);\n        }\n      } catch (e) {\n        // Unable to parse file\n      }\n      if (cachedResult === 'error') {\n        throw new Error('Unable to contact server');\n      }\n      if (cachedResult === true || cachedResult === false) {\n        return cachedResult;\n      }\n    }\n\n    // Before we start the network operation, record a failed state.  If the process exits for some reason,\n    // this will record the error.  It will also update the timestamp to prevent other Rush instances\n    // from attempting to update the file.\n    await JsonFile.saveAsync('error', lastCheckFile, { ensureFolderExists: true });\n\n    try {\n      // For this check we use the official registry, not the private registry\n      const publishedRelease: boolean = await this._queryIfReleaseIsPublishedAsync(\n        'https://registry.npmjs.org:443'\n      );\n      // Cache the result\n      await JsonFile.saveAsync(publishedRelease, lastCheckFile, { ensureFolderExists: true });\n      return publishedRelease;\n    } catch (error) {\n      await JsonFile.saveAsync('error', lastCheckFile, { ensureFolderExists: true });\n      throw error;\n    }\n  }\n\n  // Helper for checkIfReleaseIsPublished()\n  private async _queryIfReleaseIsPublishedAsync(registryUrl: string): Promise<boolean> {\n    let queryUrl: string = registryUrl;\n    if (queryUrl[-1] !== '/') {\n      queryUrl += '/';\n    }\n    // Note that the \"@\" symbol does not normally get URL-encoded\n    queryUrl += RushConstants.rushPackageName.replace('/', '%2F');\n\n    const { WebClient } = await import('../../utilities/WebClient');\n\n    const webClient: WebClientType = new WebClient();\n    webClient.userAgent = `pnpm/? npm/? node/${process.version} ${os.platform()} ${os.arch()}`;\n    webClient.accept = 'application/vnd.npm.install-v1+json; q=1.0, application/json; q=0.8, */*';\n\n    const response: IWebClientResponse = await webClient.fetchAsync(queryUrl);\n    if (!response.ok) {\n      throw new Error('Failed to query');\n    }\n\n    const data: { versions: { [version: string]: { dist: { tarball: string } } } } =\n      await response.getJsonAsync();\n    let url: string;\n    try {\n      if (!data.versions[Rush.version]) {\n        // Version was not published\n        return false;\n      }\n\n      url = data.versions[Rush.version].dist.tarball;\n      if (!url) {\n        throw new Error(`URL not found`);\n      }\n    } catch (e) {\n      throw new Error('Error parsing response');\n    }\n\n    // Make sure the tarball wasn't deleted from the CDN\n    webClient.accept = '*/*';\n\n    const response2: IWebClientResponse = await webClient.fetchAsync(url);\n\n    if (!response2.ok) {\n      if (response2.status === 404) {\n        return false;\n      } else {\n        throw new Error('Failed to fetch');\n      }\n    }\n\n    return true;\n  }\n\n  private _syncTempShrinkwrap(\n    subspace: Subspace,\n    variant: string | undefined,\n    shrinkwrapFile: BaseShrinkwrapFile | undefined\n  ): void {\n    const committedShrinkwrapFileName: string = subspace.getCommittedShrinkwrapFilePath(variant);\n    if (shrinkwrapFile) {\n      Utilities.syncFile(committedShrinkwrapFileName, subspace.getTempShrinkwrapFilename());\n      Utilities.syncFile(committedShrinkwrapFileName, subspace.getTempShrinkwrapPreinstallFilename());\n    } else {\n      // Otherwise delete the temporary file\n      FileSystem.deleteFile(subspace.getTempShrinkwrapFilename());\n\n      if (this.rushConfiguration.isPnpm) {\n        // Workaround for https://github.com/pnpm/pnpm/issues/1890\n        //\n        // When \"rush update --full\" is run, Rush deletes \"common/temp/pnpm-lock.yaml\"\n        // so that a new lockfile will be generated. However \"pnpm install\" by design will try to recover\n        // \"pnpm-lock.yaml\" from \"common/temp/node_modules/.pnpm/lock.yaml\", which may prevent a full upgrade.\n        // Deleting both files ensures that a new lockfile will always be generated.\n        const pnpmPackageManager: PnpmPackageManager = this.rushConfiguration\n          .packageManagerWrapper as PnpmPackageManager;\n\n        FileSystem.deleteFile(\n          path.join(subspace.getSubspaceTempFolderPath(), pnpmPackageManager.internalShrinkwrapRelativePath)\n        );\n      }\n    }\n  }\n\n  protected async validateNpmSetupAsync(): Promise<void> {\n    if (this._npmSetupValidated) {\n      return;\n    }\n\n    if (!this.options.bypassPolicy) {\n      const setupPackageRegistry: SetupPackageRegistry = new SetupPackageRegistry({\n        rushConfiguration: this.rushConfiguration,\n        isDebug: this.options.debug,\n        syncNpmrcAlreadyCalled: this._syncNpmrcAlreadyCalled\n      });\n      const valid: boolean = await setupPackageRegistry.checkOnlyAsync();\n      if (!valid) {\n        // eslint-disable-next-line no-console\n        console.error();\n        // eslint-disable-next-line no-console\n        console.error(Colorize.red('ERROR: NPM credentials are missing or expired'));\n        // eslint-disable-next-line no-console\n        console.error();\n        // eslint-disable-next-line no-console\n        console.error(\n          Colorize.bold(\n            '==> Please run \"rush setup\" to update your NPM token. ' +\n              `(Or append \"${RushConstants.bypassPolicyFlagLongName}\" to proceed anyway.)`\n          )\n        );\n        throw new AlreadyReportedError();\n      }\n    }\n\n    this._npmSetupValidated = true;\n  }\n}\n"]}