{"version":3,"file":"RushConstants.js","sourceRoot":"","sources":["../../src/logic/RushConstants.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D;;;;;;;;;GASG;AACH,MAAa,aAAa;;AAA1B,sCA2UC;AA1UC;;GAEG;AACoB,8BAAgB,GAAgB,WAAW,CAAC;AAEnE;;;;;;GAMG;AACoB,6CAA+B,GACpD,gCAAgC,CAAC;AAEnC;;GAEG;AACoB,mCAAqB,GAAc,SAAS,CAAC;AAEpE;;;;;;GAMG;AACoB,gDAAkC,GACvD,mCAAmC,CAAC;AAEtC;;GAEG;AACoB,8BAAgB,GAAa,QAAQ,CAAC;AAE7D;;GAEG;AACoB,8BAAgB,GAAiB,YAAY,CAAC;AAErE;;;;GAIG;AACoB,oCAAsB,GAAe,UAAU,CAAC;AAEvE;;;;GAIG;AACoB,gCAAkB,GAAW,MAAM,CAAC;AAE3D;;;GAGG;AACoB,wCAA0B,GAAe,UAAU,CAAC;AAE3E;;GAEG;AACoB,mCAAqB,GAA0B,qBAAqB,CAAC;AAE5F;;GAEG;AACoB,uCAAyB,GAAM,CAAC,CAAC;AAExD;;;GAGG;AACoB,sCAAwB,GAAqB,gBAAgB,CAAC;AAErF;;GAEG;AACoB,gCAAkB,GAAkB,aAAa,CAAC;AAEzE;;GAEG;AACoB,gCAAkB,GAAoB,eAAe,CAAC;AAE7E;;GAEG;AACoB,iCAAmB,GAAoB,eAAe,CAAC;AAE9E;;GAEG;AACoB,oCAAsB,GAA0B,qBAAqB,CAAC;AAE7F;;;;GAIG;AACoB,mCAAqB,GAAc,SAAS,CAAC;AAEpE;;;GAGG;AACoB,yCAA2B,GAAmB,QAAQ,aAAa,CAAC,qBAAqB,EAAE,CAAC;AAEnH;;GAEG;AACoB,oCAAsB,GAAgB,WAAW,CAAC;AAEzE;;GAEG;AACoB,mCAAqB,GAAmB,cAAc,CAAC;AAE9E;;;;;;GAMG;AACH,mFAAmF;AACnF,gFAAgF;AACzD,oCAAsB,GAA2B,sBAAsB,CAAC;AAE/F;;;;GAIG;AACoB,oCAAsB,GAA2B,sBAAsB,CAAC;AAE/F;;;GAGG;AACoB,+BAAiB,GAAsB,iBAAiB,CAAC;AAEhF;;;;GAIG;AACoB,gCAAkB,GAAuB,kBAAkB,CAAC;AAEnF;;;GAGG;AACoB,mCAAqB,GAAY,OAAO,CAAC;AAEhE;;;GAGG;AACoB,iCAAmB,GAAwB,mBAAmB,CAAC;AAE/D,qCAAuB,GAA4B,uBAAuB,CAAC;AAElG;;GAEG;AACoB,iCAAmB,GAAuB,kBAAkB,CAAC;AAEpF;;GAEG;AACoB,gCAAkB,GAAuB,kBAAkB,CAAC;AAEnF;;GAEG;AACoB,uCAAyB,GAAwB,mBAAmB,CAAC;AAE5F;;GAEG;AACoB,wCAA0B,GAC/C,2BAA2B,CAAC;AAE9B;;GAEG;AACoB,iCAAmB,GAAuB,kBAAkB,CAAC;AAEpF;;GAEG;AACoB,qCAAuB,GAAqB,gBAAgB,CAAC;AAEpF;;GAEG;AACoB,iCAAmB,GAAc,SAAS,CAAC;AAElE;;GAEG;AACoB,gCAAkB,GAAuB,kBAAkB,CAAC;AAEnF;;;GAGG;AACoB,+BAAiB,GAAM,CAAC,CAAC;AAEhD;;GAEG;AACoB,6BAAe,GAAmB,cAAc,CAAC;AAExE;;GAEG;AACoB,uCAAyB,GAAwB,mBAAmB,CAAC;AAE5F;;GAEG;AACoB,4BAAc,GAAwB,mBAAmB,CAAC;AAEjF;;GAEG;AACoB,6BAAe,GAAsB,iBAAiB,CAAC;AAE9E;;;GAGG;AACoB,oCAAsB,GAAoB,eAAe,CAAC;AAEjF;;;GAGG;AACoB,uCAAyB,GAA2B,sBAAsB,CAAC;AAElG;;GAEG;AACoB,6BAAe,GAAW,MAAM,CAAC;AAExD;;GAEG;AACoB,+BAAiB,GAAa,QAAQ,CAAC;AAE9D;;GAEG;AACoB,+BAAiB,GAAa,QAAQ,CAAC;AAE9D;;GAEG;AACoB,8BAAgB,GAAY,OAAO,CAAC;AAE3D;;GAEG;AACoB,gCAAkB,GAAc,SAAS,CAAC;AAE1C,+CAAiC,GACtD,0BAA0B,CAAC;AAE7B;;;;GAIG;AACoB,2BAAa,GAAQ,GAAG,CAAC;AAEhD;;GAEG;AACoB,6CAA+B,GAAiB,YAAY,CAAC;AAEpF;;GAEG;AACoB,gCAAkB,GAAgB,WAAW,CAAC;AAErE;;GAEG;AACoB,6BAAe,GAAc,SAAS,CAAC;AAE9D;;;;GAIG;AACoB,oCAAsB,GAAS,IAAI,CAAC;AAE3D;;GAEG;AACoB,sCAAwB,GAAsB,iBAAiB,CAAC;AAEvF;;GAEG;AACoB,sCAAwB,GAAwB,mBAAmB,CAAC;AAE3F;;GAEG;AACoB,wCAA0B,GAC/C,2BAA2B,CAAC;AAE9B;;GAEG;AACoB,kCAAoB,GAAgB,WAAW,CAAC;AAEvE;;GAEG;AACoB,sCAAwB,GAAuB,kBAAkB,CAAC;AAEzF;;GAEG;AACoB,qCAAuB,GAA4B,uBAAuB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * Constants used by the Rush tool.\n * @beta\n *\n * @remarks\n *\n * These are NOT part of the public API surface for rush-lib.\n * The rationale is that we don't want people implementing custom parsers for\n * the Rush config files; instead, they should rely on the official APIs from rush-lib.\n */\nexport class RushConstants {\n  /**\n   * The filename (\"rush.json\") for the root-level configuration file.\n   */\n  public static readonly rushJsonFilename: 'rush.json' = 'rush.json';\n\n  /**\n   * The filename (\"browser-approved-packages.json\") for an optional policy configuration file\n   * that stores a list of NPM packages that have been approved for usage by Rush projects.\n   * This is part of a pair of config files, one for projects that run in a web browser\n   * (e.g. whose approval criteria mostly focuses on licensing and code size), and one for everywhere else\n   * (e.g. tooling projects whose approval criteria mostly focuses on avoiding node_modules sprawl).\n   */\n  public static readonly browserApprovedPackagesFilename: 'browser-approved-packages.json' =\n    'browser-approved-packages.json';\n\n  /**\n   * The folder name (\"changes\") where change files will be stored.\n   */\n  public static readonly changeFilesFolderName: 'changes' = 'changes';\n\n  /**\n   * The filename (\"nonbrowser-approved-packages.json\") for an optional policy configuration file\n   * that stores a list of NPM packages that have been approved for usage by Rush projects.\n   * This is part of a pair of config files, one for projects that run in a web browser\n   * (e.g. whose approval criteria mostly focuses on licensing and code size), and one for everywhere else\n   * (e.g. tooling projects whose approval criteria mostly focuses on avoiding node_modules sprawl).\n   */\n  public static readonly nonbrowserApprovedPackagesFilename: 'nonbrowser-approved-packages.json' =\n    'nonbrowser-approved-packages.json';\n\n  /**\n   * The folder name (\"common\") where Rush's common data will be stored.\n   */\n  public static readonly commonFolderName: 'common' = 'common';\n\n  /**\n   * The NPM scope (\"\\@rush-temp\") that is used for Rush's temporary projects.\n   */\n  public static readonly rushTempNpmScope: '@rush-temp' = '@rush-temp';\n\n  /**\n   * The folder name (\"variants\") under which named variant configurations for\n   * alternate dependency sets may be found.\n   * Example: `C:\\MyRepo\\common\\config\\rush\\variants`\n   */\n  public static readonly rushVariantsFolderName: 'variants' = 'variants';\n\n  /**\n   * The folder name (\"temp\") under the common folder, or under the .rush folder in each project's directory where\n   * temporary files will be stored.\n   * Example: `C:\\MyRepo\\common\\temp`\n   */\n  public static readonly rushTempFolderName: 'temp' = 'temp';\n\n  /**\n   * The folder name (\"projects\") where temporary projects will be stored.\n   * Example: `C:\\MyRepo\\common\\temp\\projects`\n   */\n  public static readonly rushTempProjectsFolderName: 'projects' = 'projects';\n\n  /**\n   * The filename (\"npm-shrinkwrap.json\") used to store an installation plan for the NPM package manger.\n   */\n  public static readonly npmShrinkwrapFilename: 'npm-shrinkwrap.json' = 'npm-shrinkwrap.json';\n\n  /**\n   * Number of installation attempts\n   */\n  public static readonly defaultMaxInstallAttempts: 1 = 1;\n\n  /**\n   * The filename (\"pnpm-lock.yaml\") used to store an installation plan for the PNPM package manger\n   * (PNPM version 3.x and later).\n   */\n  public static readonly pnpmV3ShrinkwrapFilename: 'pnpm-lock.yaml' = 'pnpm-lock.yaml';\n\n  /**\n   * The filename (\"pnpmfile.js\") used to add custom configuration to PNPM (PNPM version 1.x and later).\n   */\n  public static readonly pnpmfileV1Filename: 'pnpmfile.js' = 'pnpmfile.js';\n\n  /**\n   * The filename (\".pnpmfile.cjs\") used to add custom configuration to PNPM (PNPM version 6.x and later).\n   */\n  public static readonly pnpmfileV6Filename: '.pnpmfile.cjs' = '.pnpmfile.cjs';\n\n  /**\n   * The filename (\".modules.yaml\") used by pnpm to specify configurations in the node_modules directory\n   */\n  public static readonly pnpmModulesFilename: '.modules.yaml' = '.modules.yaml';\n\n  /**\n   * The filename (\"global-pnpmfile.cjs\") used to add custom configuration to subspaces\n   */\n  public static readonly pnpmfileGlobalFilename: 'global-pnpmfile.cjs' = 'global-pnpmfile.cjs';\n\n  /**\n   * The folder name used to store patch files for pnpm\n   * Example: `C:\\MyRepo\\common\\config\\pnpm-patches`\n   * Example: `C:\\MyRepo\\common\\temp\\patches`\n   */\n  public static readonly pnpmPatchesFolderName: 'patches' = 'patches';\n\n  /**\n   * The folder name under `/common/temp` used to store checked-in patches.\n   * Example: `C:\\MyRepo\\common\\pnpm-patches`\n   */\n  public static readonly pnpmPatchesCommonFolderName: `pnpm-patches` = `pnpm-${RushConstants.pnpmPatchesFolderName}`;\n\n  /**\n   * The filename (\"shrinkwrap.yaml\") used to store state for pnpm\n   */\n  public static readonly yarnShrinkwrapFilename: 'yarn.lock' = 'yarn.lock';\n\n  /**\n   * The folder name (\"node_modules\") where NPM installs its packages.\n   */\n  public static readonly nodeModulesFolderName: 'node_modules' = 'node_modules';\n\n  /**\n   * The filename (\"pinned-versions.json\") for an old configuration file that\n   * that is no longer supported.\n   *\n   * @deprecated This feature has been superseded by the \"preferredVersions\" setting\n   * in common-versions.json\n   */\n  // NOTE: Although this is marked as \"deprecated\", we will probably never retire it,\n  // since we always want to report the warning when someone upgrades an old repo.\n  public static readonly pinnedVersionsFilename: 'pinned-versions.json' = 'pinned-versions.json';\n\n  /**\n   * The filename (\"common-versions.json\") for an optional configuration file\n   * that stores dependency version information that affects all projects in the repo.\n   * This configuration file should go in the \"common/config/rush\" folder.\n   */\n  public static readonly commonVersionsFilename: 'common-versions.json' = 'common-versions.json';\n\n  /**\n   * The filename (\"repo-state.json\") for a file used by Rush to\n   * store the state of various features as they stand in the repo.\n   */\n  public static readonly repoStateFilename: 'repo-state.json' = 'repo-state.json';\n\n  /**\n   * The filename (\"custom-tips.json\") for the file used by Rush to\n   * print user-customized messages.\n   * This configuration file should go in the \"common/config/rush\" folder.\n   */\n  public static readonly customTipsFilename: 'custom-tips.json' = 'custom-tips.json';\n\n  /**\n   * The name of the per-project folder where project-specific Rush files are stored. For example,\n   * the package-deps files, which are used by commands to determine if a particular project needs to be rebuilt.\n   */\n  public static readonly projectRushFolderName: '.rush' = '.rush';\n\n  /**\n   * Custom command line configuration file, which is used by rush for implementing\n   * custom command and options.\n   */\n  public static readonly commandLineFilename: 'command-line.json' = 'command-line.json';\n\n  public static readonly versionPoliciesFilename: 'version-policies.json' = 'version-policies.json';\n\n  /**\n   * Experiments configuration file.\n   */\n  public static readonly experimentsFilename: 'experiments.json' = 'experiments.json';\n\n  /**\n   * Pnpm configuration file\n   */\n  public static readonly pnpmConfigFilename: 'pnpm-config.json' = 'pnpm-config.json';\n\n  /**\n   * Rush plugins configuration file name.\n   */\n  public static readonly rushPluginsConfigFilename: 'rush-plugins.json' = 'rush-plugins.json';\n\n  /**\n   * Rush plugin manifest file name.\n   */\n  public static readonly rushPluginManifestFilename: 'rush-plugin-manifest.json' =\n    'rush-plugin-manifest.json';\n\n  /**\n   * The artifactory.json configuration file name.\n   */\n  public static readonly artifactoryFilename: 'artifactory.json' = 'artifactory.json';\n\n  /**\n   * The subspaces.json configuration file name\n   */\n  public static readonly subspacesConfigFilename: 'subspaces.json' = 'subspaces.json';\n\n  /**\n   * The name of the default subspace if one isn't specified but subspaces is enabled.\n   */\n  public static readonly defaultSubspaceName: 'default' = 'default';\n\n  /**\n   * Build cache configuration file.\n   */\n  public static readonly buildCacheFilename: 'build-cache.json' = 'build-cache.json';\n\n  /**\n   * Build cache version number, incremented when the logic to create cache entries changes.\n   * Changing this ensures that cache entries generated by an old version will no longer register as a cache hit.\n   */\n  public static readonly buildCacheVersion: 1 = 1;\n\n  /**\n   * Cobuild configuration file.\n   */\n  public static readonly cobuildFilename: 'cobuild.json' = 'cobuild.json';\n\n  /**\n   * Per-project configuration filename.\n   */\n  public static readonly rushProjectConfigFilename: 'rush-project.json' = 'rush-project.json';\n\n  /**\n   * The URL (\"http://rushjs.io\") for the Rush web site.\n   */\n  public static readonly rushWebSiteUrl: 'https://rushjs.io' = 'https://rushjs.io';\n\n  /**\n   * The name of the NPM package for the Rush tool (\"\\@microsoft/rush\").\n   */\n  public static readonly rushPackageName: '@microsoft/rush' = '@microsoft/rush';\n\n  /**\n   * The folder name (\"rush-recycler\") where Rush moves large folder trees\n   * before asynchronously deleting them.\n   */\n  public static readonly rushRecyclerFolderName: 'rush-recycler' = 'rush-recycler';\n\n  /**\n   * The name of the file to drop in project-folder/.rush/temp/ containing a listing of the project's direct\n   * and indirect dependencies. This is used to detect if a project's dependencies have changed since the last build.\n   */\n  public static readonly projectShrinkwrapFilename: 'shrinkwrap-deps.json' = 'shrinkwrap-deps.json';\n\n  /**\n   * The value of the \"commandKind\" property for a bulk command in command-line.json\n   */\n  public static readonly bulkCommandKind: 'bulk' = 'bulk';\n\n  /**\n   * The value of the \"commandKind\" property for a global command in command-line.json\n   */\n  public static readonly globalCommandKind: 'global' = 'global';\n\n  /**\n   * The value of the \"commandKind\" property for a phased command in command-line.json\n   */\n  public static readonly phasedCommandKind: 'phased' = 'phased';\n\n  /**\n   * The name of the incremental build command.\n   */\n  public static readonly buildCommandName: 'build' = 'build';\n\n  /**\n   * The name of the non-incremental build command.\n   */\n  public static readonly rebuildCommandName: 'rebuild' = 'rebuild';\n\n  public static readonly updateCloudCredentialsCommandName: 'update-cloud-credentials' =\n    'update-cloud-credentials';\n\n  /**\n   * When a hash generated that contains multiple input segments, this character may be used\n   * to separate them to avoid issues like\n   * crypto.createHash('sha1').update('a').update('bc').digest('hex') === crypto.createHash('sha1').update('ab').update('c').digest('hex')\n   */\n  public static readonly hashDelimiter: '|' = '|';\n\n  /**\n   * The name of the per-user Rush configuration data folder.\n   */\n  public static readonly rushUserConfigurationFolderName: '.rush-user' = '.rush-user';\n\n  /**\n   * The name of the project `rush-logs` folder.\n   */\n  public static readonly rushLogsFolderName: 'rush-logs' = 'rush-logs';\n\n  /**\n   * The expected prefix for phase names in \"common/config/rush/command-line.json\"\n   */\n  public static readonly phaseNamePrefix: '_phase:' = '_phase:';\n\n  /**\n   * The default debounce value for Rush multi-project watch mode. When watching, controls\n   * how long to wait after the last encountered file system event before execution. If another\n   * file system event occurs in this interval, the timeout will reset.\n   */\n  public static readonly defaultWatchDebounceMs: 1000 = 1000;\n\n  /**\n   * The name of the parameter that can be used to bypass policies.\n   */\n  public static readonly bypassPolicyFlagLongName: '--bypass-policy' = '--bypass-policy';\n\n  /**\n   * Merge Queue ignore configuration file.\n   */\n  public static readonly mergeQueueIgnoreFileName: '.mergequeueignore' = '.mergequeueignore';\n\n  /**\n   * The filename (\"project-impact-graph.yaml\") for the project impact graph file.\n   */\n  public static readonly projectImpactGraphFilename: 'project-impact-graph.yaml' =\n    'project-impact-graph.yaml';\n\n  /**\n   * The filename for the last link flag\n   */\n  public static readonly lastLinkFlagFilename: 'last-link' = 'last-link';\n\n  /**\n   * The filename for the Rush alerts config file.\n   */\n  public static readonly rushAlertsConfigFilename: 'rush-alerts.json' = 'rush-alerts.json';\n\n  /**\n   * The filename for the file that tracks which variant is currently installed.\n   */\n  public static readonly currentVariantsFilename: 'current-variants.json' = 'current-variants.json';\n}\n"]}