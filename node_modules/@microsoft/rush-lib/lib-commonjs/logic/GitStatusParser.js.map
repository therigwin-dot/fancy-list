{"version":3,"file":"GitStatusParser.js","sourceRoot":"","sources":["../../src/logic/GitStatusParser.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nexport interface IGitStatusEntryBase {\n  kind: 'untracked' | 'changed' | 'unmerged' | 'renamed' | 'copied';\n  path: string;\n}\n\nexport interface IUntrackedGitStatusEntry extends IGitStatusEntryBase {\n  kind: 'untracked';\n}\n\nexport type GitStatusChangeType = 'added' | 'deleted' | 'modified' | 'renamed' | 'copied' | 'type-changed';\n\nexport interface IChangedGitStatusEntryFields {\n  stagedChangeType: GitStatusChangeType | undefined;\n  unstagedChangeType: GitStatusChangeType | undefined;\n  isInSubmodule: boolean;\n  headFileMode: string;\n  indexFileMode: string;\n  worktreeFileMode: string;\n  headObjectName: string;\n  indexObjectName: string;\n}\n\nexport interface IChangedGitStatusEntry extends IGitStatusEntryBase, IChangedGitStatusEntryFields {\n  kind: 'changed';\n}\n\nexport interface IRenamedOrCopiedGitStatusEntry extends IGitStatusEntryBase, IChangedGitStatusEntryFields {\n  kind: 'renamed' | 'copied';\n  renameOrCopyScore: number;\n  originalPath: string;\n}\n\nexport interface IUnmergedGitStatusEntry extends IGitStatusEntryBase {\n  kind: 'unmerged';\n  stagedChangeType: GitStatusChangeType | undefined;\n  unstagedChangeType: GitStatusChangeType | undefined;\n  isInSubmodule: boolean;\n  stage1FileMode: string;\n  stage2FileMode: string;\n  stage3FileMode: string;\n  worktreeFileMode: string;\n  stage1ObjectName: string;\n  stage2ObjectName: string;\n  stage3ObjectName: string;\n}\n\nexport type IGitStatusEntry =\n  | IUntrackedGitStatusEntry\n  | IChangedGitStatusEntry\n  | IRenamedOrCopiedGitStatusEntry\n  | IUnmergedGitStatusEntry;\n\nfunction _parseGitStatusChangeType(str: string): GitStatusChangeType | undefined {\n  switch (str) {\n    case 'M': {\n      return 'modified';\n    }\n\n    case 'T': {\n      return 'type-changed';\n    }\n\n    case 'A': {\n      return 'added';\n    }\n\n    case 'D': {\n      return 'deleted';\n    }\n\n    case 'R': {\n      return 'renamed';\n    }\n\n    case 'C': {\n      return 'copied';\n    }\n\n    case '.': {\n      return undefined;\n    }\n\n    default: {\n      throw new Error(`Unexpected git status change type: ${str}`);\n    }\n  }\n}\n\nfunction _parseIsInSubmodule(submoduleState: string): boolean {\n  // This field is actually four characters long, but this parser only handles if the entry is in a\n  // submodule or not. That is represented by a \"N\" or an \"S\" in the first character.\n  const submoduleMode: string = submoduleState.charAt(0);\n  if (submoduleMode === 'N') {\n    return false;\n  } else if (submoduleMode === 'S') {\n    return true;\n  } else {\n    throw new Error(`Unexpected submodule state: ${submoduleState}`);\n  }\n}\n\nexport function* parseGitStatus(gitStatusOutput: string): Iterable<IGitStatusEntry> {\n  // See reference https://git-scm.com/docs/git-status?msclkid=1cff552bcdce11ecadf77a086eded66c#_porcelain_format_version_2\n\n  let pos: number = 0;\n\n  function getFieldAndAdvancePos(delimiter: string): string {\n    const newPos: number = gitStatusOutput.indexOf(delimiter, pos);\n    if (newPos === -1) {\n      throw new Error(`Unexpected end of git status output after position ${pos}`);\n    }\n\n    const field: string = gitStatusOutput.substring(pos, newPos);\n    pos = newPos + delimiter.length;\n    return field;\n  }\n\n  /**\n   * @example\n   * ```\n   * ? path/g.ts\n   * ```\n   */\n  function parseUntrackedEntry(): IUntrackedGitStatusEntry {\n    const path: string = getFieldAndAdvancePos('\\0');\n    const entry: IUntrackedGitStatusEntry = {\n      kind: 'untracked',\n      path\n    };\n    return entry;\n  }\n\n  /**\n   * @example\n   * ```\n   * 1 A. N... 000000 100644 100644 0000000000000000000000000000000000000000 a171a25d2c978ba071959f39dbeaa339fe84f768 path/a.ts\\0\n   * 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n   * 1 .D N... 100644 100644 000000 3fcb58810c113c90c366dd81d16443425c7b95fa 3fcb58810c113c90c366dd81d16443425c7b95fa path/c.ts\\0\n   * 1 D. N... 100644 000000 000000 91b0203b85a7bb605e35f842d1d05d66a6275e10 0000000000000000000000000000000000000000 path/d.ts\\0\n   * 1 A. N... 000000 100644 100644 0000000000000000000000000000000000000000 451de43c5cb012af55a79cc3463849ab3cfa0457 path/f.ts\\0\n   * 1 AM N... 000000 100644 100644 0000000000000000000000000000000000000000 9d9ab4adc79c591c0aa72f7fd29a008c80893e3e path/h.ts\\0\n   * ```\n   */\n  function parseAddModifyOrDeleteEntry(): IChangedGitStatusEntry {\n    // 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n    //   ^\n    const changeTypeField: string = getFieldAndAdvancePos(' ');\n    const rawStagedChangeType: string = changeTypeField.charAt(0);\n    const stagedChangeType: GitStatusChangeType | undefined = _parseGitStatusChangeType(rawStagedChangeType);\n    const rawUnstagedChangeType: string = changeTypeField.charAt(1);\n    const unstagedChangeType: GitStatusChangeType | undefined =\n      _parseGitStatusChangeType(rawUnstagedChangeType);\n\n    // 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n    //      ^\n    const submoduleState: string = getFieldAndAdvancePos(' ');\n    const isInSubmodule: boolean = _parseIsInSubmodule(submoduleState);\n\n    // 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n    //           ^\n    const headFileMode: string = getFieldAndAdvancePos(' ');\n    // 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n    //                  ^\n    const indexFileMode: string = getFieldAndAdvancePos(' ');\n    // 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n    //                         ^\n    const worktreeFileMode: string = getFieldAndAdvancePos(' ');\n\n    // 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n    //                                ^\n    const headObjectName: string = getFieldAndAdvancePos(' ');\n    // 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n    //                                                                         ^\n    const indexObjectName: string = getFieldAndAdvancePos(' ');\n\n    // 1 MM N... 100644 100644 100644 d20c7e41acf4295db610f395f50a554145b4ece7 8299b2a7d657ec1211649f14c85737d68a920d9e path/b.ts\\0\n    //                                                                                                                  ^\n    const path: string = getFieldAndAdvancePos('\\0');\n\n    const entry: IChangedGitStatusEntry = {\n      kind: 'changed',\n      stagedChangeType,\n      unstagedChangeType,\n      isInSubmodule,\n      headFileMode,\n      indexFileMode,\n      worktreeFileMode,\n      headObjectName,\n      indexObjectName,\n      path\n    };\n    return entry;\n  }\n\n  /**\n   * @example\n   * ```\n   * 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n   * ```\n   */\n  function parseRenamedOrCopiedEntry(): IRenamedOrCopiedGitStatusEntry {\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //   ^\n    const changeTypeField: string = getFieldAndAdvancePos(' ');\n    const rawStagedChangeType: string = changeTypeField.charAt(0);\n    const stagedChangeType: GitStatusChangeType | undefined = _parseGitStatusChangeType(rawStagedChangeType);\n    const rawUnstagedChangeType: string = changeTypeField.charAt(1);\n    const unstagedChangeType: GitStatusChangeType | undefined =\n      _parseGitStatusChangeType(rawUnstagedChangeType);\n\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //      ^\n    const submoduleState: string = getFieldAndAdvancePos(' ');\n    const isInSubmodule: boolean = _parseIsInSubmodule(submoduleState);\n\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //           ^\n    const headFileMode: string = getFieldAndAdvancePos(' ');\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //                  ^\n    const indexFileMode: string = getFieldAndAdvancePos(' ');\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //                         ^\n    const worktreeFileMode: string = getFieldAndAdvancePos(' ');\n\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //                                ^\n    const headObjectName: string = getFieldAndAdvancePos(' ');\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //                                                                         ^\n    const indexObjectName: string = getFieldAndAdvancePos(' ');\n\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //                                                                                                                  ^\n    const renameOrCopyScoreField: string = getFieldAndAdvancePos(' ');\n    const renameOrCopyMode: string = renameOrCopyScoreField.charAt(0);\n    const rawRenameOrCopyScore: string = renameOrCopyScoreField.substring(1);\n    const renameOrCopyScore: number = parseInt(rawRenameOrCopyScore, 10);\n    let kind: 'renamed' | 'copied';\n    if (renameOrCopyMode === 'R') {\n      kind = 'renamed';\n    } else if (renameOrCopyMode === 'C') {\n      kind = 'copied';\n    } else {\n      throw new Error(`Unexpected rename or copy mode: ${renameOrCopyMode}`);\n    }\n\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //                                                                                                                       ^\n    const path: string = getFieldAndAdvancePos('\\0');\n    // 2 R. N... 100644 100644 100644 451de43c5cb012af55a79cc3463849ab3cfa0457 451de43c5cb012af55a79cc3463849ab3cfa0457 R100 path/e.ts\\0e2.ts\\0\n    //                                                                                                                                  ^\n    const originalPath: string = getFieldAndAdvancePos('\\0');\n\n    const entry: IRenamedOrCopiedGitStatusEntry = {\n      kind,\n      stagedChangeType,\n      unstagedChangeType,\n      isInSubmodule,\n      headFileMode,\n      indexFileMode,\n      worktreeFileMode,\n      headObjectName,\n      indexObjectName,\n      renameOrCopyScore,\n      path,\n      originalPath\n    };\n    return entry;\n  }\n\n  /**\n   * @example\n   * ```\n   * u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n   * ```\n   */\n  function parseUnmergedEntry(): IUnmergedGitStatusEntry {\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //   ^\n    const changeTypeField: string = getFieldAndAdvancePos(' ');\n    const rawStagedChangeType: string = changeTypeField.charAt(0);\n    const stagedChangeType: GitStatusChangeType | undefined = _parseGitStatusChangeType(rawStagedChangeType);\n    const rawUnstagedChangeType: string = changeTypeField.charAt(1);\n    const unstagedChangeType: GitStatusChangeType | undefined =\n      _parseGitStatusChangeType(rawUnstagedChangeType);\n\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //      ^\n    const submoduleState: string = getFieldAndAdvancePos(' ');\n    const isInSubmodule: boolean = _parseIsInSubmodule(submoduleState);\n\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //           ^\n    const stage1FileMode: string = getFieldAndAdvancePos(' ');\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //                  ^\n    const stage2FileMode: string = getFieldAndAdvancePos(' ');\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //                         ^\n    const stage3FileMode: string = getFieldAndAdvancePos(' ');\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //                                ^\n    const worktreeFileMode: string = getFieldAndAdvancePos(' ');\n\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //                                       ^\n    const stage1ObjectName: string = getFieldAndAdvancePos(' ');\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //                                                                                ^\n    const stage2ObjectName: string = getFieldAndAdvancePos(' ');\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //                                                                                                                         ^\n    const stage3ObjectName: string = getFieldAndAdvancePos(' ');\n\n    // u .M N... 100644 100644 100644 100644 07b1571a387db3072be485e6cc5591fef35bf666 63f37aa0393e142e2c8329593eb0f78e4cc77032 ebac91ffe8227e6e9b99d9816ce0a6d166b4a524 path/unmerged.ts\\0\n    //                                                                                                                                                                  ^\n    const path: string = getFieldAndAdvancePos('\\0');\n\n    const entry: IUnmergedGitStatusEntry = {\n      kind: 'unmerged',\n      stagedChangeType,\n      unstagedChangeType,\n      isInSubmodule,\n      stage1FileMode,\n      stage2FileMode,\n      stage3FileMode,\n      worktreeFileMode,\n      stage1ObjectName,\n      stage2ObjectName,\n      stage3ObjectName,\n      path\n    };\n    return entry;\n  }\n\n  while (pos < gitStatusOutput.length) {\n    const modeField: string = getFieldAndAdvancePos(' ');\n    switch (modeField) {\n      case '?': {\n        // Untracked\n        yield parseUntrackedEntry();\n        break;\n      }\n\n      case '1': {\n        // Simple change\n        yield parseAddModifyOrDeleteEntry();\n        break;\n      }\n\n      case '2': {\n        // Renamed or copied\n        yield parseRenamedOrCopiedEntry();\n        break;\n      }\n\n      case 'u': {\n        // Unmerged\n        yield parseUnmergedEntry();\n        break;\n      }\n\n      default: {\n        throw new Error(`Unexpected git status mode: ${modeField}`);\n      }\n    }\n  }\n}\n"]}