{"version":3,"file":"IPnpmfile.js","sourceRoot":"","sources":["../../../src/logic/pnpm/IPnpmfile.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { LogBase } from '@pnpm/logger';\nimport type { IPackageJson } from '@rushstack/node-core-library';\nimport type { IPnpmShrinkwrapYaml } from './PnpmShrinkwrapFile';\nimport type { RushConfigurationProject } from '../../api/RushConfigurationProject';\n\n/**\n * The `settings` parameter passed to {@link IPnpmfileShim.hooks.readPackage} and\n * {@link IPnpmfileShim.hooks.afterAllResolved}.\n */\nexport interface IPnpmfileShimSettings {\n  semverPath: string;\n  allPreferredVersions: { [dependencyName: string]: string };\n  allowedAlternativeVersions: { [dependencyName: string]: ReadonlyArray<string> };\n  /**\n   * The versions of all packages that are part of the workspace.\n   */\n  workspaceVersions: Record<string, string>;\n  userPnpmfilePath?: string;\n}\n\nexport interface IWorkspaceProjectInfo\n  extends Pick<RushConfigurationProject, 'packageName' | 'projectRelativeFolder'> {\n  packageVersion: RushConfigurationProject['packageJson']['version'];\n  injectedDependencies: Array<string>;\n}\n\n/**\n * The `settings` parameter passed to {@link IPnpmfileShim.hooks.readPackage} and\n * {@link IPnpmfileShim.hooks.afterAllResolved}.\n */\nexport interface ISubspacePnpmfileShimSettings {\n  semverPath: string;\n  workspaceProjects: Record<string, IWorkspaceProjectInfo>;\n  subspaceProjects: Record<string, IWorkspaceProjectInfo>;\n  userPnpmfilePath?: string;\n}\n\n/**\n * The `context` parameter passed to {@link IPnpmfile.hooks.readPackage}, as defined by the\n * pnpmfile API contract.\n */\nexport interface IPnpmfileContext {\n  log: (message: string) => void;\n  pnpmfileShimSettings?: IPnpmfileShimSettings;\n  subspacePnpmfileShimSettings?: ISubspacePnpmfileShimSettings;\n}\n\n/**\n * The `log` parameter passed to {@link IPnpmfile.hooks.filterLog}.\n */\nexport type IPnpmLog = LogBase & {\n  [key: string]: unknown;\n};\n\n/**\n * The 'hooks' property of the pnpmfile\n */\nexport interface IPnpmfileHooks {\n  afterAllResolved?: (lockfile: IPnpmShrinkwrapYaml, context: IPnpmfileContext) => IPnpmShrinkwrapYaml;\n  readPackage?: (pkg: IPackageJson, context: IPnpmfileContext) => IPackageJson;\n  /**\n   * @remarks\n   * This function is not supported by PNPM versions before 6.17.0.\n   */\n  filterLog?: (log: IPnpmLog) => boolean;\n}\n\n/**\n * The pnpmfile, as defined by the pnpmfile API contract.\n */\nexport interface IPnpmfile {\n  hooks?: IPnpmfileHooks;\n}\n"]}