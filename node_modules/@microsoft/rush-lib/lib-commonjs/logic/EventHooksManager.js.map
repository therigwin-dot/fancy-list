{"version":3,"file":"EventHooksManager.js","sourceRoot":"","sources":["../../src/logic/EventHooksManager.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,kDAA+C;AAG/C,sDAAsE;AACtE,kDAA0C;AAC1C,sDAAmD;AAEnD,8EAA2E;AAE3E,MAAa,iBAAiB;IAK5B,YAAmB,iBAAoC;QACrD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,UAAU,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,gBAAgB,CAAC;IAC9D,CAAC;IAEM,MAAM,CAAC,KAAY,EAAE,OAAgB,EAAE,WAAoB;QAChE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACtB,OAAO;QACT,CAAC;QAED,MAAM,OAAO,GAAa,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACvB,IAAI,WAAW,EAAE,CAAC;gBAChB,sCAAsC;gBACtC,OAAO,CAAC,GAAG,CAAC,4BAA4B,kBAAK,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBAC3F,OAAO;YACT,CAAC;YAED,MAAM,SAAS,GAAc,qBAAS,CAAC,KAAK,EAAE,CAAC;YAC/C,sCAAsC;YACtC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,mBAAQ,CAAC,KAAK,CAAC,6BAA6B,kBAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAEhF,MAAM,8BAA8B,GAClC,OAAO;gBACP,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,aAAa,CAAC,8BAA8B,CAAC;YAChG,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;gBACzB,IAAI,CAAC;oBACH,MAAM,WAAW,qBAAsB,OAAO,CAAC,GAAG,CAAE,CAAC;oBAErD,mGAAmG;oBACnG,kGAAkG;oBAClG,sGAAsG;oBACtG,WAAW,CAAC,mDAAwB,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBAEvF,qBAAS,CAAC,uBAAuB,CAAC,MAAM,EAAE;wBACxC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB;wBAC1C,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,cAAc;wBACxD,OAAO,EAAE,IAAI,CAAC,iBAAiB;wBAC/B,YAAY,EAAE,CAAC,8BAA8B;wBAC7C,kBAAkB,EAAE,WAAW;wBAC/B,sBAAsB,EAAE;4BACtB,cAAc,EAAE,IAAI;yBACrB;qBACF,CAAC,CAAC;gBACL,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,sCAAsC;oBACtC,OAAO,CAAC,KAAK,CACX,IAAI;wBACF,mBAAQ,CAAC,MAAM,CACb,eAAe,MAAM,aAAa,KAAK,2BAA2B;4BAChE,qCAAqC,CACxC,CACJ,CAAC;oBACF,IAAI,OAAO,EAAE,CAAC;wBACZ,sCAAsC;wBACtC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAI,KAAe,CAAC,OAAO,CAAC,CAAC;oBACjD,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;YACH,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,sCAAsC;YACtC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,mBAAQ,CAAC,KAAK,CAAC,0BAA0B,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QACxF,CAAC;IACH,CAAC;CACF;AAtED,8CAsEC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { Colorize } from '@rushstack/terminal';\n\nimport type { EventHooks } from '../api/EventHooks';\nimport { type IEnvironment, Utilities } from '../utilities/Utilities';\nimport { Event } from '../api/EventHooks';\nimport { Stopwatch } from '../utilities/Stopwatch';\nimport type { RushConfiguration } from '../api/RushConfiguration';\nimport { EnvironmentVariableNames } from '../api/EnvironmentConfiguration';\n\nexport class EventHooksManager {\n  private _rushConfiguration: RushConfiguration;\n  private _eventHooks: EventHooks;\n  private _commonTempFolder: string;\n\n  public constructor(rushConfiguration: RushConfiguration) {\n    this._rushConfiguration = rushConfiguration;\n    this._eventHooks = rushConfiguration.eventHooks;\n    this._commonTempFolder = rushConfiguration.commonTempFolder;\n  }\n\n  public handle(event: Event, isDebug: boolean, ignoreHooks: boolean): void {\n    if (!this._eventHooks) {\n      return;\n    }\n\n    const scripts: string[] = this._eventHooks.get(event);\n    if (scripts.length > 0) {\n      if (ignoreHooks) {\n        // eslint-disable-next-line no-console\n        console.log(`Skipping event hooks for ${Event[event]} since --ignore-hooks was specified`);\n        return;\n      }\n\n      const stopwatch: Stopwatch = Stopwatch.start();\n      // eslint-disable-next-line no-console\n      console.log('\\n' + Colorize.green(`Executing event hooks for ${Event[event]}`));\n\n      const printEventHooksOutputToConsole: boolean | undefined =\n        isDebug ||\n        this._rushConfiguration.experimentsConfiguration.configuration.printEventHooksOutputToConsole;\n      scripts.forEach((script) => {\n        try {\n          const environment: IEnvironment = { ...process.env };\n\n          // NOTE: Do NOT expose this variable to other subprocesses besides telemetry hooks.  We do NOT want\n          // child processes to inspect Rush's raw command line and magically change their behavior in a way\n          // that might be confusing to end users, or rely on CLI parameters that the build cache is unaware of.\n          environment[EnvironmentVariableNames.RUSH_INVOKED_ARGS] = JSON.stringify(process.argv);\n\n          Utilities.executeLifecycleCommand(script, {\n            rushConfiguration: this._rushConfiguration,\n            workingDirectory: this._rushConfiguration.rushJsonFolder,\n            initCwd: this._commonTempFolder,\n            handleOutput: !printEventHooksOutputToConsole,\n            initialEnvironment: environment,\n            environmentPathOptions: {\n              includeRepoBin: true\n            }\n          });\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.error(\n            '\\n' +\n              Colorize.yellow(\n                `Event hook \"${script}\" failed: ${error}\\nRun \"rush\" with --debug` +\n                  ` to see detailed error information.`\n              )\n          );\n          if (isDebug) {\n            // eslint-disable-next-line no-console\n            console.error('\\n' + (error as Error).message);\n          }\n        }\n      });\n      stopwatch.stop();\n      // eslint-disable-next-line no-console\n      console.log('\\n' + Colorize.green(`Event hooks finished. (${stopwatch.toString()})`));\n    }\n  }\n}\n"]}