{"version":3,"file":"EnvironmentPolicy.js","sourceRoot":"","sources":["../../../src/logic/policy/EnvironmentPolicy.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,oEAAuF;AAIvF,oDAAiD;AAEjD;;GAEG;AACI,KAAK,UAAU,aAAa,CACjC,iBAAoC,EACpC,OAAgC;IAEhC,IAAI,iBAAiB,CAAC,wBAAwB,CAAC,aAAa,CAAC,yCAAyC,EAAE,CAAC;QACvG,MAAM,SAAS,GAAa,iBAAiB,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC7E,MAAM,wBAAwB,GAAa,EAAE,CAAC;QAC9C,MAAM,yBAAK,CAAC,YAAY,CACtB,SAAS,EACT,KAAK,EAAE,QAAgB,EAAE,KAAa,EAAE,EAAE;YACxC,MAAM,wBAAwB,GAAW,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;YACnG,MAAM,UAAU,GAAY,MAAM,8BAAU,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;YACnF,IAAI,UAAU,EAAE,CAAC;gBACf,wBAAwB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC,EACD,EAAE,WAAW,EAAE,CAAC,EAAE,CACnB,CAAC;QAEF,IAAI,wBAAwB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACxC,MAAM,KAAK,GAAW,wBAAwB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjE,IAAI,YAAY,GACd,0EAA0E,KAAK,IAAI;gBACnF,8CAA8C,CAAC;YACjD,IAAI,OAAO,CAAC,mBAAmB,EAAE,CAAC;gBAChC,YAAY,IAAI,wBAAwB,6BAAa,CAAC,wBAAwB,SAAS,CAAC;YAC1F,CAAC;YAED,sCAAsC;YACtC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC5B,MAAM,IAAI,wCAAoB,EAAE,CAAC;QACnC,CAAC;IACH,CAAC;AACH,CAAC;AAjCD,sCAiCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { AlreadyReportedError, Async, FileSystem } from '@rushstack/node-core-library';\n\nimport type { RushConfiguration } from '../../api/RushConfiguration';\nimport type { IPolicyValidatorOptions } from './PolicyValidator';\nimport { RushConstants } from '../RushConstants';\n\n/**\n * Ensures the environment where the Rush repo exists is valid\n */\nexport async function validateAsync(\n  rushConfiguration: RushConfiguration,\n  options: IPolicyValidatorOptions\n): Promise<void> {\n  if (rushConfiguration.experimentsConfiguration.configuration.forbidPhantomResolvableNodeModulesFolders) {\n    const pathParts: string[] = rushConfiguration.rushJsonFolder.split(/[\\/\\\\]/);\n    const existingNodeModulesPaths: string[] = [];\n    await Async.forEachAsync(\n      pathParts,\n      async (pathPart: string, index: number) => {\n        const potentialNodeModulesPath: string = `${pathParts.slice(0, index + 1).join('/')}/node_modules`;\n        const pathExists: boolean = await FileSystem.existsAsync(potentialNodeModulesPath);\n        if (pathExists) {\n          existingNodeModulesPaths.push(potentialNodeModulesPath);\n        }\n      },\n      { concurrency: 5 }\n    );\n\n    if (existingNodeModulesPaths.length > 0) {\n      const paths: string = existingNodeModulesPaths.sort().join(', ');\n      let errorMessage: string =\n        `The following node_modules folders exist in the path to the Rush repo: ${paths}. ` +\n        `This is not supported, and may cause issues.`;\n      if (options.bypassPolicyAllowed) {\n        errorMessage += ` To ignore, use the \"${RushConstants.bypassPolicyFlagLongName}\" flag.`;\n      }\n\n      // eslint-disable-next-line no-console\n      console.error(errorMessage);\n      throw new AlreadyReportedError();\n    }\n  }\n}\n"]}