"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlagFile = void 0;
const node_core_library_1 = require("@rushstack/node-core-library");
const objectUtilities_1 = require("../utilities/objectUtilities");
/**
 * A base class for flag file.
 * @internal
 */
class FlagFile {
    /**
     * Creates a new flag file
     * @param folderPath - the folder that this flag is managing
     * @param state - optional, the state that should be managed or compared
     */
    constructor(folderPath, flagName, initialState) {
        this.path = `${folderPath}/${flagName}.flag`;
        this._state = initialState;
    }
    /**
     * Returns true if the file exists and the contents match the current state.
     */
    async isValidAsync() {
        let oldState;
        try {
            oldState = await node_core_library_1.JsonFile.loadAsync(this.path);
            const newState = this._state;
            return (0, objectUtilities_1.objectsAreDeepEqual)(oldState, newState);
        }
        catch (err) {
            return false;
        }
    }
    /**
     * Writes the flag file to disk with the current state
     */
    async createAsync() {
        await node_core_library_1.JsonFile.saveAsync(this._state, this.path, {
            ensureFolderExists: true
        });
    }
    /**
     * Removes the flag file
     */
    async clearAsync() {
        await node_core_library_1.FileSystem.deleteFileAsync(this.path);
    }
}
exports.FlagFile = FlagFile;
//# sourceMappingURL=FlagFile.js.map