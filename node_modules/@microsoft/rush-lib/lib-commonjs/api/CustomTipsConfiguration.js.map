{"version":3,"file":"CustomTipsConfiguration.js","sourceRoot":"","sources":["../../src/api/CustomTipsConfiguration.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAAgF;AAChF,kDAA+E;AAE/E,iGAA4D;AAgC5D;;;;;;;;;;;GAWG;AACH,IAAY,WAcX;AAdD,WAAY,WAAW;IACrB,wDAAwD;IACxD,gFAAiE,CAAA;IACjE,kFAAmE,CAAA;IAEnE,+DAA+D;IAC/D,sEAAuD,CAAA;IACvD,4EAA6D,CAAA;IAC7D,8GAA+F,CAAA;IAC/F,oEAAqD,CAAA;IACrD,wEAAyD,CAAA;IACzD,wEAAyD,CAAA;IACzD,0FAA2E,CAAA;IAC3E,8EAA+D,CAAA;AACjE,CAAC,EAdW,WAAW,2BAAX,WAAW,QActB;AAED;;;;;GAKG;AACH,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IAC3B,wCAAmB,CAAA;IACnB,oCAAe,CAAA;IACf,kCAAa,CAAA;AACf,CAAC,EAJW,iBAAiB,iCAAjB,iBAAiB,QAI5B;AAED;;;;;;;GAOG;AACH,IAAY,aAGX;AAHD,WAAY,aAAa;IACvB,8BAAa,CAAA;IACb,8BAAa,CAAA;AACf,CAAC,EAHW,aAAa,6BAAb,aAAa,QAGxB;AAqCY,QAAA,gBAAgB,GAAyE;IACpG,CAAC,WAAW,CAAC,+BAA+B,CAAC,EAAE;QAC7C,KAAK,EAAE,WAAW,CAAC,+BAA+B;QAClD,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,OAAO,GAAG,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;QACzD,CAAC;KACF;IACD,CAAC,WAAW,CAAC,8BAA8B,CAAC,EAAE;QAC5C,KAAK,EAAE,WAAW,CAAC,8BAA8B;QACjD,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;KACzB;CACF,CAAC;AAEW,QAAA,gBAAgB,GAAyE;IACpG,CAAC,WAAW,CAAC,yBAAyB,CAAC,EAAE;QACvC,KAAK,EAAE,WAAW,CAAC,yBAAyB;QAC5C,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,OAAO,GAAG,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC;QACnD,CAAC;KACF;IACD,CAAC,WAAW,CAAC,4BAA4B,CAAC,EAAE;QAC1C,KAAK,EAAE,WAAW,CAAC,4BAA4B;QAC/C,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,qHAAqH;YAErH,kGAAkG;YAClG,kDAAkD;YAClD,sBAAsB;YACtB,sBAAsB;YAEtB,OAAO,GAAG,CAAC,QAAQ,CAAC,+BAA+B,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QAChG,CAAC;KACF;IACD,CAAC,WAAW,CAAC,6CAA6C,CAAC,EAAE;QAC3D,KAAK,EAAE,WAAW,CAAC,6CAA6C;QAChE,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,OAAO,GAAG,CAAC,QAAQ,CAAC,+CAA+C,CAAC,CAAC;QACvE,CAAC;KACF;IACD,CAAC,WAAW,CAAC,wBAAwB,CAAC,EAAE;QACtC,KAAK,EAAE,WAAW,CAAC,wBAAwB;QAC3C,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,OAAO,GAAG,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;QAClD,CAAC;KACF;IACD,CAAC,WAAW,CAAC,0BAA0B,CAAC,EAAE;QACxC,KAAK,EAAE,WAAW,CAAC,0BAA0B;QAC7C,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,oBAAoB;YACpB,OAAO,GAAG,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;QACpD,CAAC;KACF;IAED,CAAC,WAAW,CAAC,0BAA0B,CAAC,EAAE;QACxC,KAAK,EAAE,WAAW,CAAC,0BAA0B;QAC7C,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,oBAAoB;YACpB,OAAO,GAAG,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;QACpD,CAAC;KACF;IAED,CAAC,WAAW,CAAC,mCAAmC,CAAC,EAAE;QACjD,KAAK,EAAE,WAAW,CAAC,mCAAmC;QACtD,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,oBAAoB;YACpB,OAAO,GAAG,CAAC,QAAQ,CAAC,qCAAqC,CAAC,CAAC;QAC7D,CAAC;KACF;IAED,CAAC,WAAW,CAAC,6BAA6B,CAAC,EAAE;QAC3C,KAAK,EAAE,WAAW,CAAC,6BAA6B;QAChD,QAAQ,EAAE,iBAAiB,CAAC,KAAK;QACjC,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;YACvB,oBAAoB;YACpB,OAAO,GAAG,CAAC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;QACvD,CAAC;KACF;CACF,CAAC;AAEF;;;;;GAKG;AACH,MAAa,uBAAuB;IA6BlC,YAAmB,cAAsB;QACvC,MAAM,kBAAkB,GAAyC,IAAI,GAAG,EAAE,CAAC;QAE3E,IAAI,aAA0C,CAAC;QAC/C,IAAI,CAAC;YACH,aAAa,GAAG,4BAAQ,CAAC,eAAe,CAAC,cAAc,EAAE,uBAAuB,CAAC,WAAW,CAAC,CAAC;QAChG,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,IAAI,CAAC,8BAAU,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC;gBACnC,MAAM,CAAC,CAAC;YACV,CAAC;QACH,CAAC;QAED,MAAM,UAAU,GAAqC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,CAAC;QAC/E,IAAI,UAAU,EAAE,CAAC;YACf,KAAK,MAAM,OAAO,IAAI,UAAU,EAAE,CAAC;gBACjC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,WAAW,CAAC,EAAE,CAAC;oBACpC,MAAM,IAAI,KAAK,CACb,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,gBAAgB;wBAClD,8BAA8B,OAAO,CAAC,KAAK,GAAG,CACjD,CAAC;gBACJ,CAAC;gBAED,IAAI,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC1C,MAAM,IAAI,KAAK,CACb,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,gBAAgB;wBAClD,0CAA0C,OAAO,CAAC,KAAK,GAAG,CAC7D,CAAC;gBACJ,CAAC;qBAAM,CAAC;oBACN,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;gBACjD,CAAC;YACH,CAAC;QACH,CAAC;QAED,IAAI,CAAC,yBAAyB,GAAG,kBAAkB,CAAC;IACtD,CAAC;IAED;;;;;;;;;;;;OAYG;IACI,QAAQ,CAAC,QAAmB,EAAE,KAAkB;QACrD,MAAM,yBAAyB,GAC7B,uBAAuB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;QAE5D,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,yBAAyB,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;IAED;;;;;;OAMG;IACI,YAAY,CAAC,QAAmB,EAAE,KAAkB;QACzD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IAED;;;;;;OAMG;IACI,eAAe,CAAC,QAAmB,EAAE,KAAkB;QAC5D,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1E,CAAC;IAED;;;;;;OAMG;IACI,aAAa,CAAC,QAAmB,EAAE,KAAkB;QAC1D,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACxE,CAAC;IAEO,sBAAsB,CAAC,QAAmB,EAAE,QAA2B,EAAE,KAAkB;QACjG,MAAM,iBAAiB,GAAmC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpG,IAAI,iBAAiB,EAAE,CAAC;YACtB,IAAI,aAGyB,CAAC;YAC9B,IAAI,MAAc,CAAC;YACnB,QAAQ,QAAQ,EAAE,CAAC;gBACjB,KAAK,iBAAiB,CAAC,KAAK;oBAC1B,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACvD,MAAM,GAAG,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAC5B,MAAM;gBACR,KAAK,iBAAiB,CAAC,OAAO;oBAC5B,aAAa,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACzD,MAAM,GAAG,mBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAC/B,MAAM;gBACR;oBACE,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAClD,MAAM,GAAG,IAAI,CAAC;oBACd,MAAM;YACV,CAAC;YAED,aAAa,CAAC,iBAAiB,KAAK,GAAG,CAAC,CAAC;YACzC,aAAa,CAAC,GAAG,CAAC,CAAC;YAEnB,MAAM,OAAO,GAAW,iBAAiB,CAAC,OAAO,CAAC;YAClD,MAAM,yBAAyB,GAAW,yBAAc,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YAC/F,aAAa,CAAC,GAAG,yBAAyB,EAAE,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,CAAC;YAC7E,QAAQ,CAAC,SAAS,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;;AArJH,0DAsJC;AArJgB,mCAAW,GAAe,8BAAU,CAAC,gBAAgB,CAAC,iCAAU,CAAC,CAAC;AAIjF;;;;;;;;;;;;;;;;;;GAkBG;AACW,yCAAiB,mCAC1B,wBAAgB,GAChB,wBAAgB,EACnB","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport { FileSystem, JsonFile, JsonSchema } from '@rushstack/node-core-library';\nimport { type ITerminal, PrintUtilities, Colorize } from '@rushstack/terminal';\n\nimport schemaJson from '../schemas/custom-tips.schema.json';\n\n/**\n * This interface represents the raw custom-tips.json file which allows repo maintainers\n * to configure extra details to be printed alongside certain Rush messages.\n * @beta\n */\nexport interface ICustomTipsJson {\n  /**\n   *  Specifies the custom tips to be displayed by Rush.\n   */\n  customTips?: ICustomTipItemJson[];\n}\n\n/**\n * An item from the {@link ICustomTipsJson.customTips} list.\n * @beta\n */\nexport interface ICustomTipItemJson {\n  /**\n   * (REQUIRED) An identifier indicating a message that may be printed by Rush.\n   * If that message is printed, then this custom tip will be shown.\n   * Consult the Rush documentation for the current list of possible identifiers.\n   */\n  tipId: CustomTipId;\n\n  /**\n   * (REQUIRED) The message text to be displayed for this tip.\n   */\n  message: string;\n}\n\n/**\n * An identifier representing a Rush message that can be customized by\n * defining a custom tip in `common/config/rush/custom-tips.json`.\n * @remarks\n * Custom tip ids always start with the `TIP_` prefix.\n *\n * @privateRemarks\n * Events from the Rush process should with \"TIP_RUSH_\".\n * Events from a PNPM subprocess should start with \"TIP_PNPM_\".\n *\n * @beta\n */\nexport enum CustomTipId {\n  // Events from the Rush process should with \"TIP_RUSH_\".\n  TIP_RUSH_INCONSISTENT_VERSIONS = 'TIP_RUSH_INCONSISTENT_VERSIONS',\n  TIP_RUSH_DISALLOW_INSECURE_SHA1 = 'TIP_RUSH_DISALLOW_INSECURE_SHA1',\n\n  // Events from a PNPM subprocess should start with \"TIP_PNPM_\".\n  TIP_PNPM_UNEXPECTED_STORE = 'TIP_PNPM_UNEXPECTED_STORE',\n  TIP_PNPM_NO_MATCHING_VERSION = 'TIP_PNPM_NO_MATCHING_VERSION',\n  TIP_PNPM_NO_MATCHING_VERSION_INSIDE_WORKSPACE = 'TIP_PNPM_NO_MATCHING_VERSION_INSIDE_WORKSPACE',\n  TIP_PNPM_PEER_DEP_ISSUES = 'TIP_PNPM_PEER_DEP_ISSUES',\n  TIP_PNPM_OUTDATED_LOCKFILE = 'TIP_PNPM_OUTDATED_LOCKFILE',\n  TIP_PNPM_TARBALL_INTEGRITY = 'TIP_PNPM_TARBALL_INTEGRITY',\n  TIP_PNPM_MISMATCHED_RELEASE_CHANNEL = 'TIP_PNPM_MISMATCHED_RELEASE_CHANNEL',\n  TIP_PNPM_INVALID_NODE_VERSION = 'TIP_PNPM_INVALID_NODE_VERSION'\n}\n\n/**\n * The severity of a custom tip.\n * It determines the printing severity (\"Error\" = red, \"Warning\" = yellow, \"Info\" = normal).\n *\n * @beta\n */\nexport enum CustomTipSeverity {\n  Warning = 'Warning',\n  Error = 'Error',\n  Info = 'Info'\n}\n\n/**\n * The type of the custom tip.\n *\n * @remarks\n * There might be types like `git` in the future.\n *\n * @beta\n */\nexport enum CustomTipType {\n  rush = 'rush',\n  pnpm = 'pnpm'\n}\n\n/**\n * Metadata for a custom tip.\n *\n * @remarks\n * This differs from the  {@link ICustomTipItemJson} interface in that these are not configurable by the user;\n * it's the inherent state of a custom tip. For example, the custom tip for `ERR_PNPM_NO_MATCHING_VERSION`\n * has a inherent severity of `Error`, and a inherent match function that rush maintainer defines.\n *\n * @beta\n */\nexport interface ICustomTipInfo {\n  tipId: CustomTipId;\n  /**\n   * The severity of the custom tip. It will determine the printing severity (\"Error\" = red, \"Warning\" = yellow, \"Info\" = normal).\n   *\n   * @remarks\n   *  The severity should be consistent with the original message, unless there are strong reasons not to.\n   */\n  severity: CustomTipSeverity;\n\n  /**\n   * The type of the custom tip.\n   */\n  type: CustomTipType;\n\n  /**\n   * The function to determine how to match this tipId.\n   *\n   * @remarks\n   * This function might need to be updated if the depending package is updated.\n   * For example, if `pnpm` change the error logs for \"ERR_PNPM_NO_MATCHING_VERSION\", we will need to update the match function accordingly.\n   */\n  isMatch?: (str: string) => boolean;\n}\n\nexport const RUSH_CUSTOM_TIPS: Readonly<Record<`TIP_RUSH_${string}` & CustomTipId, ICustomTipInfo>> = {\n  [CustomTipId.TIP_RUSH_DISALLOW_INSECURE_SHA1]: {\n    tipId: CustomTipId.TIP_RUSH_DISALLOW_INSECURE_SHA1,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      return str.includes('ERR_PNPM_DISALLOW_INSECURE_SHA1');\n    }\n  },\n  [CustomTipId.TIP_RUSH_INCONSISTENT_VERSIONS]: {\n    tipId: CustomTipId.TIP_RUSH_INCONSISTENT_VERSIONS,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.rush\n  }\n};\n\nexport const PNPM_CUSTOM_TIPS: Readonly<Record<`TIP_PNPM_${string}` & CustomTipId, ICustomTipInfo>> = {\n  [CustomTipId.TIP_PNPM_UNEXPECTED_STORE]: {\n    tipId: CustomTipId.TIP_PNPM_UNEXPECTED_STORE,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      return str.includes('ERR_PNPM_UNEXPECTED_STORE');\n    }\n  },\n  [CustomTipId.TIP_PNPM_NO_MATCHING_VERSION]: {\n    tipId: CustomTipId.TIP_PNPM_NO_MATCHING_VERSION,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      // Example message: (do notice the difference between this one and the TIP_PNPM_NO_MATCHING_VERSION_INSIDE_WORKSPACE)\n\n      // Error Message: ERR_PNPM_NO_MATCHING_VERSION  No matching version found for @babel/types@^7.22.5\n      // The latest release of @babel/types is \"7.22.4\".\n      // Other releases are:\n      // * esm: 7.21.4-esm.4\n\n      return str.includes('No matching version found for') && str.includes('The latest release of');\n    }\n  },\n  [CustomTipId.TIP_PNPM_NO_MATCHING_VERSION_INSIDE_WORKSPACE]: {\n    tipId: CustomTipId.TIP_PNPM_NO_MATCHING_VERSION_INSIDE_WORKSPACE,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      return str.includes('ERR_PNPM_NO_MATCHING_VERSION_INSIDE_WORKSPACE');\n    }\n  },\n  [CustomTipId.TIP_PNPM_PEER_DEP_ISSUES]: {\n    tipId: CustomTipId.TIP_PNPM_PEER_DEP_ISSUES,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      return str.includes('ERR_PNPM_PEER_DEP_ISSUES');\n    }\n  },\n  [CustomTipId.TIP_PNPM_OUTDATED_LOCKFILE]: {\n    tipId: CustomTipId.TIP_PNPM_OUTDATED_LOCKFILE,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      // Todo: verify this\n      return str.includes('ERR_PNPM_OUTDATED_LOCKFILE');\n    }\n  },\n\n  [CustomTipId.TIP_PNPM_TARBALL_INTEGRITY]: {\n    tipId: CustomTipId.TIP_PNPM_TARBALL_INTEGRITY,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      // Todo: verify this\n      return str.includes('ERR_PNPM_TARBALL_INTEGRITY');\n    }\n  },\n\n  [CustomTipId.TIP_PNPM_MISMATCHED_RELEASE_CHANNEL]: {\n    tipId: CustomTipId.TIP_PNPM_MISMATCHED_RELEASE_CHANNEL,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      // Todo: verify this\n      return str.includes('ERR_PNPM_MISMATCHED_RELEASE_CHANNEL');\n    }\n  },\n\n  [CustomTipId.TIP_PNPM_INVALID_NODE_VERSION]: {\n    tipId: CustomTipId.TIP_PNPM_INVALID_NODE_VERSION,\n    severity: CustomTipSeverity.Error,\n    type: CustomTipType.pnpm,\n    isMatch: (str: string) => {\n      // Todo: verify this\n      return str.includes('ERR_PNPM_INVALID_NODE_VERSION');\n    }\n  }\n};\n\n/**\n * Used to access the `common/config/rush/custom-tips.json` config file,\n * which allows repo maintainers to configure extra details to be printed alongside\n * certain Rush messages.\n * @beta\n */\nexport class CustomTipsConfiguration {\n  private static _jsonSchema: JsonSchema = JsonSchema.fromLoadedObject(schemaJson);\n\n  public readonly providedCustomTipsByTipId: ReadonlyMap<CustomTipId, ICustomTipItemJson>;\n\n  /**\n   * A registry mapping custom tip IDs to their corresponding metadata.\n   *\n   * @remarks\n   * This registry is used to look up metadata for custom tips based on their IDs. The metadata includes\n   * information such as the severity level, the type of tip, and an optional matching function.\n   *\n   * Each key in the registry corresponds to a `CustomTipIdEnum` value, and each value is an object\n   * implementing the `ICustomTipInfo` interface.\n   *\n   * @example\n   * ```typescript\n   * const tipInfo = CustomTipsConfiguration.customTipRegistry[CustomTipIdEnum.TIP_RUSH_INCONSISTENT_VERSIONS];\n   * console.log(tipInfo.severity);  // Output: CustomTipSeverity.Error\n   * ```\n   *\n   * See {@link CustomTipId} for the list of custom tip IDs.\n   * See {@link ICustomTipInfo} for the structure of the metadata.\n   */\n  public static customTipRegistry: Readonly<Record<CustomTipId, ICustomTipInfo>> = {\n    ...RUSH_CUSTOM_TIPS,\n    ...PNPM_CUSTOM_TIPS\n  };\n\n  public constructor(configFilePath: string) {\n    const providedCustomTips: Map<CustomTipId, ICustomTipItemJson> = new Map();\n\n    let configuration: ICustomTipsJson | undefined;\n    try {\n      configuration = JsonFile.loadAndValidate(configFilePath, CustomTipsConfiguration._jsonSchema);\n    } catch (e) {\n      if (!FileSystem.isNotExistError(e)) {\n        throw e;\n      }\n    }\n\n    const customTips: ICustomTipItemJson[] | undefined = configuration?.customTips;\n    if (customTips) {\n      for (const tipItem of customTips) {\n        if (!(tipItem.tipId in CustomTipId)) {\n          throw new Error(\n            `The ${path.basename(configFilePath)} configuration` +\n              ` references an unknown ID \"${tipItem.tipId}\"`\n          );\n        }\n\n        if (providedCustomTips.has(tipItem.tipId)) {\n          throw new Error(\n            `The ${path.basename(configFilePath)} configuration` +\n              ` specifies a duplicate definition for \"${tipItem.tipId}\"`\n          );\n        } else {\n          providedCustomTips.set(tipItem.tipId, tipItem);\n        }\n      }\n    }\n\n    this.providedCustomTipsByTipId = providedCustomTips;\n  }\n\n  /**\n   * If custom-tips.json defines a tip for the specified tipId,  display the tip on the terminal.\n   *\n   * @remarks\n   * The severity of the tip is defined in ${@link CustomTipsConfiguration.customTipRegistry}.\n   * If you want to change the severity specifically for this call,\n   * use other APIs such as {@link CustomTipsConfiguration._showErrorTip}.\n   *\n   * Custom tips by design do not replace Rush's standard messaging; instead, they annotate Rush's\n   * output with additional team-specific advice.\n   *\n   * @internal\n   */\n  public _showTip(terminal: ITerminal, tipId: CustomTipId): void {\n    const severityOfOriginalMessage: CustomTipSeverity =\n      CustomTipsConfiguration.customTipRegistry[tipId].severity;\n\n    this._writeMessageWithPipes(terminal, severityOfOriginalMessage, tipId);\n  }\n\n  /**\n   * If custom-tips.json defines a tip for the specified tipId, display the tip on the terminal.\n   * @remarks\n   * Custom tips by design do not replace Rush's standard messaging; instead, they annotate Rush's\n   * output with additional team-specific advice.\n   * @internal\n   */\n  public _showInfoTip(terminal: ITerminal, tipId: CustomTipId): void {\n    this._writeMessageWithPipes(terminal, CustomTipSeverity.Info, tipId);\n  }\n\n  /**\n   * If custom-tips.json defines a tip for the specified tipId, display the tip on the terminal.\n   * @remarks\n   * Custom tips by design do not replace Rush's standard messaging; instead, they annotate Rush's\n   * output with additional team-specific advice.\n   * @internal\n   */\n  public _showWarningTip(terminal: ITerminal, tipId: CustomTipId): void {\n    this._writeMessageWithPipes(terminal, CustomTipSeverity.Warning, tipId);\n  }\n\n  /**\n   * If custom-tips.json defines a tip for the specified tipId, display the tip on the terminal.\n   * @remarks\n   * Custom tips by design do not replace Rush's standard messaging; instead, they annotate Rush's\n   * output with additional team-specific advice.\n   * @internal\n   */\n  public _showErrorTip(terminal: ITerminal, tipId: CustomTipId): void {\n    this._writeMessageWithPipes(terminal, CustomTipSeverity.Error, tipId);\n  }\n\n  private _writeMessageWithPipes(terminal: ITerminal, severity: CustomTipSeverity, tipId: CustomTipId): void {\n    const customTipJsonItem: ICustomTipItemJson | undefined = this.providedCustomTipsByTipId.get(tipId);\n    if (customTipJsonItem) {\n      let writeFunction:\n        | typeof terminal.writeErrorLine\n        | typeof terminal.writeWarningLine\n        | typeof terminal.writeLine;\n      let prefix: string;\n      switch (severity) {\n        case CustomTipSeverity.Error:\n          writeFunction = terminal.writeErrorLine.bind(terminal);\n          prefix = Colorize.red('| ');\n          break;\n        case CustomTipSeverity.Warning:\n          writeFunction = terminal.writeWarningLine.bind(terminal);\n          prefix = Colorize.yellow('| ');\n          break;\n        default:\n          writeFunction = terminal.writeLine.bind(terminal);\n          prefix = '| ';\n          break;\n      }\n\n      writeFunction(`| Custom Tip (${tipId})`);\n      writeFunction('|');\n\n      const message: string = customTipJsonItem.message;\n      const wrappedAndIndentedMessage: string = PrintUtilities.wrapWords(message, undefined, prefix);\n      writeFunction(...wrappedAndIndentedMessage, { doNotOverrideSgrCodes: true });\n      terminal.writeLine();\n    }\n  }\n}\n"]}