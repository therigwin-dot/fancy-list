{"version":3,"file":"EventHooks.js","sourceRoot":"","sources":["../../src/api/EventHooks.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,oEAAoD;AAEpD;;;GAGG;AACH,IAAY,KAyBX;AAzBD,WAAY,KAAK;IACf;;OAEG;IACH,qDAAkB,CAAA;IAClB;;OAEG;IACH,uDAAmB,CAAA;IACnB;;OAEG;IACH,iDAAgB,CAAA;IAChB;;OAEG;IACH,mDAAiB,CAAA;IACjB;;OAEG;IACH,yCAAY,CAAA;IACZ;;OAEG;IACH,2CAAa,CAAA;AACf,CAAC,EAzBW,KAAK,qBAAL,KAAK,QAyBhB;AAED;;;;;GAKG;AACH,MAAa,UAAU;IAGrB;;OAEG;IACH,YAAmB,cAA+B;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAmB,CAAC;QACzC,KAAK,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC;YAChE,MAAM,SAAS,GAAsB,wBAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACxE,IAAI,SAAS,EAAE,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;YACpD,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;OAGG;IACI,GAAG,CAAC,KAAY;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;CACF;AAvBD,gCAuBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { IEventHooksJson } from './RushConfiguration';\nimport { Enum } from '@rushstack/node-core-library';\n\n/**\n * Events happen during Rush runs.\n * @beta\n */\nexport enum Event {\n  /**\n   * Pre Rush install event\n   */\n  preRushInstall = 1,\n  /**\n   * Post Rush install event\n   */\n  postRushInstall = 2,\n  /**\n   * Pre Rush build event\n   */\n  preRushBuild = 3,\n  /**\n   * Post Rush build event\n   */\n  postRushBuild = 4,\n  /**\n   * Start of rushx execution event\n   */\n  preRushx = 5,\n  /**\n   * End of rushx execution event\n   */\n  postRushx = 6\n}\n\n/**\n * This class represents Rush event hooks configured for this repo.\n * Hooks are customized script actions that Rush executes when specific events occur.\n * The actions are expressed as a command-line that is executed using the operating system shell.\n * @beta\n */\nexport class EventHooks {\n  private _hooks: Map<Event, string[]>;\n\n  /**\n   * @internal\n   */\n  public constructor(eventHooksJson: IEventHooksJson) {\n    this._hooks = new Map<Event, string[]>();\n    for (const [name, eventHooks] of Object.entries(eventHooksJson)) {\n      const eventName: Event | undefined = Enum.tryGetValueByKey(Event, name);\n      if (eventName) {\n        this._hooks.set(eventName, [...eventHooks] || []);\n      }\n    }\n  }\n\n  /**\n   * Return all the scripts associated with the specified event.\n   * @param event - Rush event\n   */\n  public get(event: Event): string[] {\n    return this._hooks.get(event) || [];\n  }\n}\n"]}