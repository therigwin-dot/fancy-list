{"version":3,"file":"Variants.js","sourceRoot":"","sources":["../../src/api/Variants.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAI3D,yEAAsE;AAEtE,0DAAuD;AAEvD;;GAEG;AACU,QAAA,iBAAiB,GAAiC;IAC7D,iBAAiB,EAAE,WAAW;IAC9B,YAAY,EAAE,SAAS;IACvB,WAAW,EAAE,wDAAwD;IACrE,mBAAmB,EAAE,mDAAwB,CAAC,YAAY;CAC3D,CAAC;AAEK,KAAK,UAAU,eAAe,CACnC,iBAAyD,EACzD,iBAAoC,EACpC,kCAA2C;IAE3C,IAAI,OAAO,GAAuB,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,KAAK,CAAC;IAC3D,IAAI,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;QACxD,MAAM,IAAI,KAAK,CAAC,gBAAgB,OAAO,uBAAuB,6BAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC;IAClG,CAAC;IAED,IAAI,CAAC,OAAO,IAAI,kCAAkC,EAAE,CAAC;QACnD,OAAO,GAAG,MAAM,iBAAiB,CAAC,iCAAiC,EAAE,CAAC;IACxE,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAfD,0CAeC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { CommandLineStringParameter, ICommandLineStringDefinition } from '@rushstack/ts-command-line';\n\nimport { EnvironmentVariableNames } from './EnvironmentConfiguration';\nimport type { RushConfiguration } from './RushConfiguration';\nimport { RushConstants } from '../logic/RushConstants';\n\n/**\n * Provides the parameter configuration for '--variant'.\n */\nexport const VARIANT_PARAMETER: ICommandLineStringDefinition = {\n  parameterLongName: '--variant',\n  argumentName: 'VARIANT',\n  description: 'Run command using a variant installation configuration',\n  environmentVariable: EnvironmentVariableNames.RUSH_VARIANT\n};\n\nexport async function getVariantAsync(\n  variantsParameter: CommandLineStringParameter | undefined,\n  rushConfiguration: RushConfiguration,\n  defaultToCurrentlyInstalledVariant: boolean\n): Promise<string | undefined> {\n  let variant: string | undefined = variantsParameter?.value;\n  if (variant && !rushConfiguration.variants.has(variant)) {\n    throw new Error(`The variant \"${variant}\" is not defined in ${RushConstants.rushJsonFilename}`);\n  }\n\n  if (!variant && defaultToCurrentlyInstalledVariant) {\n    variant = await rushConfiguration.getCurrentlyInstalledVariantAsync();\n  }\n\n  return variant;\n}\n"]}