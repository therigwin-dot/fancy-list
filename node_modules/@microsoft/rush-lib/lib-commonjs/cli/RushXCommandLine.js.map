{"version":3,"file":"RushXCommandLine.js","sourceRoot":"","sources":["../../src/cli/RushXCommandLine.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport { PackageJsonLookup, type IPackageJson, Text, FileSystem, Async } from '@rushstack/node-core-library';\nimport {\n  Colorize,\n  ConsoleTerminalProvider,\n  DEFAULT_CONSOLE_WIDTH,\n  type ITerminalProvider,\n  PrintUtilities,\n  Terminal,\n  type ITerminal\n} from '@rushstack/terminal';\nimport { type ILogMessageCallbackOptions, pnpmSyncCopyAsync } from 'pnpm-sync-lib';\n\nimport { Utilities } from '../utilities/Utilities';\nimport { ProjectCommandSet } from '../logic/ProjectCommandSet';\nimport { type ILaunchOptions, Rush } from '../api/Rush';\nimport { RushConfiguration } from '../api/RushConfiguration';\nimport { NodeJsCompatibility } from '../logic/NodeJsCompatibility';\nimport { RushStartupBanner } from './RushStartupBanner';\nimport { EventHooksManager } from '../logic/EventHooksManager';\nimport { Event } from '../api/EventHooks';\nimport { EnvironmentVariableNames } from '../api/EnvironmentConfiguration';\nimport { RushConstants } from '../logic/RushConstants';\nimport { PnpmSyncUtilities } from '../utilities/PnpmSyncUtilities';\n\ninterface IRushXCommandLineArguments {\n  /**\n   * Flag indicating whether to suppress any rushx startup information.\n   */\n  quiet: boolean;\n\n  /**\n   * Flag indicating whether the user has asked for help.\n   */\n  help: boolean;\n\n  /**\n   * Flag indicating whether the user has requested debug mode.\n   */\n  isDebug: boolean;\n\n  /**\n   * Flag indicating whether the user wants to not call hooks.\n   */\n  ignoreHooks: boolean;\n\n  /**\n   * The command to run (i.e., the target \"script\" in package.json.)\n   */\n  commandName: string;\n\n  /**\n   * Any additional arguments/parameters passed after the command name.\n   */\n  commandArgs: string[];\n}\n\nclass ProcessError extends Error {\n  public readonly exitCode: number;\n  public constructor(message: string, exitCode: number) {\n    super(message);\n\n    // Manually set the prototype, as we can no longer extend built-in classes like Error, Array, Map, etc.\n    // https://github.com/microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    //\n    // Note: the prototype must also be set on any classes which extend this one\n    (this as any).__proto__ = ProcessError.prototype; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n    this.exitCode = exitCode;\n  }\n}\n\nexport class RushXCommandLine {\n  public static async launchRushXAsync(launcherVersion: string, options: ILaunchOptions): Promise<void> {\n    try {\n      const rushxArguments: IRushXCommandLineArguments = RushXCommandLine._parseCommandLineArguments();\n      const rushConfiguration: RushConfiguration | undefined = RushConfiguration.tryLoadFromDefaultLocation({\n        showVerbose: false\n      });\n      const eventHooksManager: EventHooksManager | undefined = rushConfiguration\n        ? new EventHooksManager(rushConfiguration)\n        : undefined;\n\n      const suppressHooks: boolean = process.env[EnvironmentVariableNames._RUSH_RECURSIVE_RUSHX_CALL] === '1';\n      const attemptHooks: boolean = !suppressHooks && !rushxArguments.help;\n      if (attemptHooks) {\n        try {\n          eventHooksManager?.handle(Event.preRushx, rushxArguments.isDebug, rushxArguments.ignoreHooks);\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.error(Colorize.red('PreRushx hook error: ' + (error as Error).message));\n        }\n      }\n      // Node.js can sometimes accidentally terminate with a zero exit code  (e.g. for an uncaught\n      // promise exception), so we start with the assumption that the exit code is 1\n      // and set it to 0 only on success.\n      process.exitCode = 1;\n      await RushXCommandLine._launchRushXInternalAsync(rushxArguments, rushConfiguration, options);\n      if (attemptHooks) {\n        try {\n          eventHooksManager?.handle(Event.postRushx, rushxArguments.isDebug, rushxArguments.ignoreHooks);\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.error(Colorize.red('PostRushx hook error: ' + (error as Error).message));\n        }\n      }\n\n      // Getting here means that we are all done with no major errors\n      process.exitCode = 0;\n    } catch (error) {\n      if (error instanceof ProcessError) {\n        process.exitCode = error.exitCode;\n      } else {\n        process.exitCode = 1;\n      }\n      // eslint-disable-next-line no-console\n      console.error(Colorize.red('Error: ' + (error as Error).message));\n    }\n  }\n\n  private static async _launchRushXInternalAsync(\n    rushxArguments: IRushXCommandLineArguments,\n    rushConfiguration: RushConfiguration | undefined,\n    options: ILaunchOptions\n  ): Promise<void> {\n    if (!rushxArguments.quiet) {\n      RushStartupBanner.logStreamlinedBanner(Rush.version, options.isManaged);\n    }\n    // Are we in a Rush repo?\n    NodeJsCompatibility.warnAboutCompatibilityIssues({\n      isRushLib: true,\n      alreadyReportedNodeTooNewError: options.alreadyReportedNodeTooNewError || false,\n      rushConfiguration\n    });\n\n    // Find the governing package.json for this folder:\n    const packageJsonLookup: PackageJsonLookup = new PackageJsonLookup();\n\n    const packageJsonFilePath: string | undefined = packageJsonLookup.tryGetPackageJsonFilePathFor(\n      process.cwd()\n    );\n    if (!packageJsonFilePath) {\n      throw Error(\n        'This command should be used inside a project folder. ' +\n          'Unable to find a package.json file in the current working directory or any of its parents.'\n      );\n    }\n\n    if (rushConfiguration && !rushConfiguration.tryGetProjectForPath(process.cwd())) {\n      // GitHub #2713: Users reported confusion resulting from a situation where \"rush install\"\n      // did not install the project's dependencies, because the project was not registered.\n      // eslint-disable-next-line no-console\n      console.log(\n        Colorize.yellow(\n          'Warning: You are invoking \"rushx\" inside a Rush repository, but this project is not registered in ' +\n            `${RushConstants.rushJsonFilename}.`\n        )\n      );\n    }\n\n    const packageJson: IPackageJson = packageJsonLookup.loadPackageJson(packageJsonFilePath);\n\n    const projectCommandSet: ProjectCommandSet = new ProjectCommandSet(packageJson);\n\n    if (rushxArguments.help) {\n      RushXCommandLine._showUsage(packageJson, projectCommandSet);\n      return;\n    }\n\n    const scriptBody: string | undefined = projectCommandSet.tryGetScriptBody(rushxArguments.commandName);\n\n    if (scriptBody === undefined) {\n      let errorMessage: string = `The command \"${rushxArguments.commandName}\" is not defined in the package.json file for this project.`;\n\n      if (projectCommandSet.commandNames.length > 0) {\n        errorMessage +=\n          '\\nAvailable commands for this project are: ' +\n          projectCommandSet.commandNames.map((x) => `\"${x}\"`).join(', ');\n      }\n\n      throw Error(errorMessage);\n    }\n\n    let commandWithArgs: string = scriptBody;\n    let commandWithArgsForDisplay: string = scriptBody;\n    if (rushxArguments.commandArgs.length > 0) {\n      // This approach is based on what NPM 7 now does:\n      // https://github.com/npm/run-script/blob/47a4d539fb07220e7215cc0e482683b76407ef9b/lib/run-script-pkg.js#L34\n      const escapedRemainingArgs: string[] = rushxArguments.commandArgs.map((x) =>\n        Utilities.escapeShellParameter(x)\n      );\n\n      commandWithArgs += ' ' + escapedRemainingArgs.join(' ');\n\n      // Display it nicely without the extra quotes\n      commandWithArgsForDisplay += ' ' + rushxArguments.commandArgs.join(' ');\n    }\n\n    if (!rushxArguments.quiet) {\n      // eslint-disable-next-line no-console\n      console.log(`> ${JSON.stringify(commandWithArgsForDisplay)}\\n`);\n    }\n\n    const packageFolder: string = path.dirname(packageJsonFilePath);\n\n    const exitCode: number = Utilities.executeLifecycleCommand(commandWithArgs, {\n      rushConfiguration,\n      workingDirectory: packageFolder,\n      // If there is a rush.json then use its .npmrc from the temp folder.\n      // Otherwise look for npmrc in the project folder.\n      initCwd: rushConfiguration ? rushConfiguration.commonTempFolder : packageFolder,\n      handleOutput: false,\n      environmentPathOptions: {\n        includeProjectBin: true\n      }\n    });\n\n    const terminalProvider: ITerminalProvider = new ConsoleTerminalProvider({\n      debugEnabled: rushxArguments.isDebug,\n      verboseEnabled: rushxArguments.isDebug\n    });\n    const terminal: ITerminal = new Terminal(terminalProvider);\n\n    if (rushConfiguration?.isPnpm && rushConfiguration?.experimentsConfiguration) {\n      const { configuration: experiments } = rushConfiguration?.experimentsConfiguration;\n\n      if (experiments?.usePnpmSyncForInjectedDependencies) {\n        const pnpmSyncJsonPath: string = packageFolder + '/node_modules/.pnpm-sync.json';\n        if (await FileSystem.existsAsync(pnpmSyncJsonPath)) {\n          const { PackageExtractor } = await import(\n            /* webpackChunkName: 'PackageExtractor' */\n            '@rushstack/package-extractor'\n          );\n          await pnpmSyncCopyAsync({\n            pnpmSyncJsonPath,\n            ensureFolderAsync: FileSystem.ensureFolderAsync,\n            forEachAsyncWithConcurrency: Async.forEachAsync,\n            getPackageIncludedFiles: PackageExtractor.getPackageIncludedFilesAsync,\n            logMessageCallback: (logMessageOptions: ILogMessageCallbackOptions) =>\n              PnpmSyncUtilities.processLogMessage(logMessageOptions, terminal)\n          });\n        }\n      }\n    }\n\n    if (exitCode > 0) {\n      throw new ProcessError(\n        `Failed calling ${commandWithArgsForDisplay}.  Exit code: ${exitCode}`,\n        exitCode\n      );\n    }\n  }\n\n  private static _parseCommandLineArguments(): IRushXCommandLineArguments {\n    // 0 = node.exe\n    // 1 = rushx\n    const args: string[] = process.argv.slice(2);\n    const unknownArgs: string[] = [];\n\n    let help: boolean = false;\n    let quiet: boolean = false;\n    let commandName: string = '';\n    let isDebug: boolean = false;\n    let ignoreHooks: boolean = false;\n    const commandArgs: string[] = [];\n\n    for (let index: number = 0; index < args.length; index++) {\n      const argValue: string = args[index];\n\n      if (!commandName) {\n        if (argValue === '-q' || argValue === '--quiet') {\n          quiet = true;\n        } else if (argValue === '-h' || argValue === '--help') {\n          help = true;\n        } else if (argValue === '-d' || argValue === '--debug') {\n          isDebug = true;\n        } else if (argValue === '--ignore-hooks') {\n          ignoreHooks = true;\n        } else if (argValue.startsWith('-')) {\n          unknownArgs.push(args[index]);\n        } else {\n          commandName = args[index];\n        }\n      } else {\n        commandArgs.push(args[index]);\n      }\n    }\n\n    if (!commandName) {\n      help = true;\n    }\n\n    if (unknownArgs.length > 0) {\n      // Future TODO: Instead of just displaying usage info, we could display a\n      // specific error about the unknown flag the user tried to pass to rushx.\n      // eslint-disable-next-line no-console\n      console.log(Colorize.red(`Unknown arguments: ${unknownArgs.map((x) => JSON.stringify(x)).join(', ')}`));\n      help = true;\n    }\n\n    return {\n      help,\n      quiet,\n      isDebug,\n      ignoreHooks,\n      commandName,\n      commandArgs\n    };\n  }\n\n  private static _showUsage(packageJson: IPackageJson, projectCommandSet: ProjectCommandSet): void {\n    // eslint-disable-next-line no-console\n    console.log('usage: rushx [-h]');\n    // eslint-disable-next-line no-console\n    console.log('       rushx [-q/--quiet] [-d/--debug] [--ignore-hooks] <command> ...\\n');\n\n    // eslint-disable-next-line no-console\n    console.log('Optional arguments:');\n    // eslint-disable-next-line no-console\n    console.log('  -h, --help            Show this help message and exit.');\n    // eslint-disable-next-line no-console\n    console.log('  -q, --quiet           Hide rushx startup information.');\n    // eslint-disable-next-line no-console\n    console.log('  -d, --debug           Run in debug mode.\\n');\n\n    if (projectCommandSet.commandNames.length > 0) {\n      // eslint-disable-next-line no-console\n      console.log(`Project commands for ${Colorize.cyan(packageJson.name)}:`);\n\n      // Calculate the length of the longest script name, for formatting\n      let maxLength: number = 0;\n      for (const commandName of projectCommandSet.commandNames) {\n        maxLength = Math.max(maxLength, commandName.length);\n      }\n\n      for (const commandName of projectCommandSet.commandNames) {\n        const escapedScriptBody: string = JSON.stringify(projectCommandSet.getScriptBody(commandName));\n\n        // The length of the string e.g. \"  command: \"\n        const firstPartLength: number = 2 + maxLength + 2;\n        // The length for truncating the escaped escapedScriptBody so it doesn't wrap\n        // to the next line\n        const consoleWidth: number = PrintUtilities.getConsoleWidth() || DEFAULT_CONSOLE_WIDTH;\n        const truncateLength: number = Math.max(0, consoleWidth - firstPartLength) - 1;\n\n        // eslint-disable-next-line no-console\n        console.log(\n          // Example: \"  command: \"\n          '  ' +\n            Colorize.cyan(Text.padEnd(commandName + ':', maxLength + 2)) +\n            // Example: \"do some thin...\"\n            Text.truncateWithEllipsis(escapedScriptBody, truncateLength)\n        );\n      }\n\n      if (projectCommandSet.malformedScriptNames.length > 0) {\n        // eslint-disable-next-line no-console\n        console.log(\n          '\\n' +\n            Colorize.yellow(\n              'Warning: Some \"scripts\" entries in the package.json file' +\n                ' have malformed names: ' +\n                projectCommandSet.malformedScriptNames.map((x) => `\"${x}\"`).join(', ')\n            )\n        );\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.log(Colorize.yellow('Warning: No commands are defined yet for this project.'));\n      // eslint-disable-next-line no-console\n      console.log(\n        'You can define a command by adding a \"scripts\" table to the project\\'s package.json file.'\n      );\n    }\n  }\n}\n"]}