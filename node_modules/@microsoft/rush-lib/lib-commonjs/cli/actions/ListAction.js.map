{"version":3,"file":"ListAction.js","sourceRoot":"","sources":["../../../src/cli/actions/ListAction.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { Sort } from '@rushstack/node-core-library';\nimport { ConsoleTerminalProvider, Terminal } from '@rushstack/terminal';\nimport type { CommandLineFlagParameter } from '@rushstack/ts-command-line';\n\nimport { BaseRushAction } from './BaseRushAction';\nimport type { RushCommandLineParser } from '../RushCommandLineParser';\nimport type { RushConfigurationProject } from '../../api/RushConfigurationProject';\nimport { VersionPolicyDefinitionName } from '../../api/VersionPolicy';\nimport { SelectionParameterSet } from '../parsing/SelectionParameterSet';\n\n/**\n * Shape of \"rush list --json\" output.\n *\n * It contains parts (with different names) coming from\n * {@link ../../api/RushConfigurationProject#RushConfigurationProject | RushConfigurationProject}.\n */\nexport interface IJsonEntry {\n  name: string;\n  version: string;\n  /**\n   * @see {@link ../../api/RushConfigurationProject#RushConfigurationProject.publishFolder | RushConfigurationProject.publishFolder}\n   */\n  path: string;\n  fullPath: string;\n  /**\n   * @see {@link ../../api/RushConfigurationProject#RushConfigurationProject.versionPolicyName | RushConfigurationProject.versionPolicyName}\n   */\n  versionPolicyName: string | undefined;\n  /**\n   * @see {@link ../../api/VersionPolicy#VersionPolicyDefinitionName | VersionPolicyDefinitionName}\n   */\n  versionPolicy: string | undefined;\n  /**\n   * @see {@link ../../api/RushConfigurationProject#RushConfigurationProject.shouldPublish | RushConfigurationProject.shouldPublish}\n   */\n  shouldPublish: boolean | undefined;\n  /**\n   * @see {@link ../../api/RushConfigurationProject#RushConfigurationProject.reviewCategory | RushConfigurationProject.reviewCategory}\n   */\n  reviewCategory: string | undefined;\n  /**\n   * @see {@link ../../api/RushConfigurationProject#RushConfigurationProject.tags | RushConfigurationProject.tags}\n   */\n  tags: string[];\n}\n\nexport interface IJsonOutput {\n  projects: IJsonEntry[];\n}\n\nexport class ListAction extends BaseRushAction {\n  private readonly _version: CommandLineFlagParameter;\n  private readonly _path: CommandLineFlagParameter;\n  private readonly _fullPath: CommandLineFlagParameter;\n  private readonly _jsonFlag: CommandLineFlagParameter;\n  private readonly _detailedFlag: CommandLineFlagParameter;\n  private readonly _selectionParameters: SelectionParameterSet;\n\n  public constructor(parser: RushCommandLineParser) {\n    super({\n      actionName: 'list',\n      summary: 'List package information for all projects in the repo',\n      documentation:\n        'List package names, and optionally version (--version) and ' +\n        'path (--path) or full path (--full-path), for projects in the ' +\n        'current rush config.',\n      parser,\n      safeForSimultaneousRushProcesses: true\n    });\n\n    this._version = this.defineFlagParameter({\n      parameterLongName: '--version',\n      parameterShortName: '-v',\n      description:\n        'If this flag is specified, the project version will be ' +\n        'displayed in a column along with the package name.'\n    });\n\n    this._path = this.defineFlagParameter({\n      parameterLongName: '--path',\n      parameterShortName: '-p',\n      description:\n        'If this flag is specified, the project path will be ' +\n        'displayed in a column along with the package name.'\n    });\n\n    this._fullPath = this.defineFlagParameter({\n      parameterLongName: '--full-path',\n      description:\n        'If this flag is specified, the project full path will ' +\n        'be displayed in a column along with the package name.'\n    });\n\n    this._detailedFlag = this.defineFlagParameter({\n      parameterLongName: '--detailed',\n      description:\n        'For the non --json view, if this flag is specified, ' +\n        'include path (-p), version (-v) columns along with ' +\n        \"the project's applicable: versionPolicy, versionPolicyName, \" +\n        'shouldPublish, reviewPolicy, and tags fields.'\n    });\n\n    this._jsonFlag = this.defineFlagParameter({\n      parameterLongName: '--json',\n      description: 'If this flag is specified, output will be in JSON format.'\n    });\n\n    this._selectionParameters = new SelectionParameterSet(this.rushConfiguration, this, {\n      gitOptions: {\n        // Include lockfile processing since this expands the selection, and we need to select\n        // at least the same projects selected with the same query to \"rush build\"\n        includeExternalDependencies: true,\n        // Disable filtering because rush-project.json is riggable and therefore may not be available\n        enableFiltering: false\n      },\n      includeSubspaceSelector: false\n    });\n  }\n\n  protected async runAsync(): Promise<void> {\n    const terminal: Terminal = new Terminal(new ConsoleTerminalProvider());\n    const selection: Set<RushConfigurationProject> =\n      await this._selectionParameters.getSelectedProjectsAsync(terminal);\n    Sort.sortSetBy(selection, (x: RushConfigurationProject) => x.packageName);\n    if (this._jsonFlag.value && this._detailedFlag.value) {\n      throw new Error(`The parameters \"--json\" and \"--detailed\" cannot be used together.`);\n    }\n\n    if (this._jsonFlag.value) {\n      this._printJson(selection);\n    } else if (this._version.value || this._path.value || this._fullPath.value || this._detailedFlag.value) {\n      await this._printListTableAsync(selection);\n    } else {\n      this._printList(selection);\n    }\n  }\n\n  private _printJson(selection: Set<RushConfigurationProject>): void {\n    const projects: IJsonEntry[] = Array.from(selection, (config: RushConfigurationProject): IJsonEntry => {\n      let reviewCategory: undefined | string;\n      let shouldPublish: undefined | boolean;\n      let versionPolicy: undefined | string;\n      let versionPolicyName: undefined | string;\n      if (config.versionPolicy !== undefined) {\n        const definitionName: string = VersionPolicyDefinitionName[config.versionPolicy.definitionName];\n        versionPolicy = `${definitionName}`;\n        versionPolicyName = config.versionPolicy.policyName;\n      } else {\n        shouldPublish = config.shouldPublish;\n      }\n\n      if (config.reviewCategory) {\n        reviewCategory = config.reviewCategory;\n      }\n\n      return {\n        name: config.packageName,\n        version: config.packageJson.version,\n        path: config.projectRelativeFolder,\n        fullPath: config.projectFolder,\n        versionPolicy,\n        versionPolicyName,\n        shouldPublish,\n        reviewCategory,\n        tags: Array.from(config.tags)\n      };\n    });\n\n    const output: IJsonOutput = {\n      projects\n    };\n    // eslint-disable-next-line no-console\n    console.log(JSON.stringify(output, undefined, 2));\n  }\n\n  private _printList(selection: Set<RushConfigurationProject>): void {\n    for (const project of selection) {\n      // eslint-disable-next-line no-console\n      console.log(project.packageName);\n    }\n  }\n\n  private async _printListTableAsync(selection: Set<RushConfigurationProject>): Promise<void> {\n    const tableHeader: string[] = ['Project'];\n    if (this._version.value || this._detailedFlag.value) {\n      tableHeader.push('Version');\n    }\n\n    if (this._path.value || this._detailedFlag.value) {\n      tableHeader.push('Path');\n    }\n\n    if (this._fullPath.value) {\n      tableHeader.push('Full Path');\n    }\n\n    if (this._detailedFlag.value) {\n      tableHeader.push('Version policy');\n      tableHeader.push('Version policy name');\n      tableHeader.push('Should publish');\n      tableHeader.push('Review category');\n      tableHeader.push('Tags');\n    }\n\n    const { default: CliTable } = await import('cli-table');\n    const table: import('cli-table') = new CliTable({\n      head: tableHeader\n    });\n\n    for (const project of selection) {\n      const packageRow: string[] = [];\n      function appendToPackageRow(value: string): void {\n        packageRow.push(value === undefined ? 'UNDEFINED' : value);\n      }\n\n      appendToPackageRow(project.packageName);\n\n      if (this._version.value || this._detailedFlag.value) {\n        appendToPackageRow(project.packageJson.version);\n      }\n\n      if (this._path.value || this._detailedFlag.value) {\n        appendToPackageRow(project.projectRelativeFolder);\n      }\n\n      if (this._fullPath.value) {\n        appendToPackageRow(project.projectFolder);\n      }\n\n      if (this._detailedFlag.value) {\n        // When we HAVE a version policy\n        let versionPolicyDefinitionName: string = '';\n        let versionPolicyName: string = '';\n        // When we DO NOT have version policy, fallback to shouldPublish boolean\n        let shouldPublish: string = '';\n        let reviewCategory: string = '';\n        if (project.versionPolicy !== undefined) {\n          const definitionName: string = VersionPolicyDefinitionName[project.versionPolicy.definitionName];\n          versionPolicyDefinitionName = definitionName;\n          versionPolicyName = project.versionPolicy.policyName;\n        } else {\n          shouldPublish = `${project.shouldPublish}`;\n        }\n\n        if (project.reviewCategory) {\n          reviewCategory = project.reviewCategory;\n        }\n\n        appendToPackageRow(versionPolicyDefinitionName);\n        appendToPackageRow(versionPolicyName);\n        appendToPackageRow(shouldPublish);\n        appendToPackageRow(reviewCategory);\n        appendToPackageRow(Array.from(project.tags).join(', '));\n      }\n\n      table.push(packageRow);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(table.toString());\n  }\n}\n"]}