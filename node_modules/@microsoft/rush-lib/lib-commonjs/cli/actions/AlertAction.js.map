{"version":3,"file":"AlertAction.js","sourceRoot":"","sources":["../../../src/cli/actions/AlertAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,kDAAwE;AAIxE,qDAAkD;AAClD,2DAAwD;AAExD,MAAa,WAAY,SAAQ,+BAAc;IAK7C,YAAmB,MAA6B;QAC9C,KAAK,CAAC;YACJ,UAAU,EAAE,OAAO;YACnB,OAAO,EAAE,+DAA+D;YACxE,aAAa,EACX,wGAAwG;gBACxG,mEAAmE;gBACnE,2EAA2E;YAC7E,MAAM;SACP,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,mBAAQ,CAAC,IAAI,kCAAuB,CAAC,EAAE,cAAc,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE/F,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACjD,iBAAiB,EAAE,UAAU;YAC7B,kBAAkB,EAAE,IAAI;YACxB,YAAY,EAAE,UAAU;YACxB,WAAW,EAAE,sDAAsD;SACpE,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACvD,iBAAiB,EAAE,WAAW;YAC9B,WAAW,EAAE,yEAAyE;SACvF,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,QAAQ;QACnB,MAAM,UAAU,GAAe,MAAM,uBAAU,CAAC,0BAA0B,CACxE,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,SAAS,CACf,CAAC;QACF,MAAM,aAAa,GAAuB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QACtE,IAAI,aAAa,EAAE,CAAC;YAClB,MAAM,cAAc,GAAY,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;YACpE,MAAM,UAAU,CAAC,0BAA0B,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QAC7E,CAAC;QACD,MAAM,UAAU,CAAC,mBAAmB,EAAE,CAAC;IACzC,CAAC;CACF;AA1CD,kCA0CC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { ConsoleTerminalProvider, Terminal } from '@rushstack/terminal';\nimport type { CommandLineFlagParameter, CommandLineStringParameter } from '@rushstack/ts-command-line';\n\nimport type { RushCommandLineParser } from '../RushCommandLineParser';\nimport { BaseRushAction } from './BaseRushAction';\nimport { RushAlerts } from '../../utilities/RushAlerts';\n\nexport class AlertAction extends BaseRushAction {\n  private readonly _terminal: Terminal;\n  private readonly _snoozeParameter: CommandLineStringParameter;\n  private readonly _snoozeTimeFlagParameter: CommandLineFlagParameter;\n\n  public constructor(parser: RushCommandLineParser) {\n    super({\n      actionName: 'alert',\n      summary: '(EXPERIMENTAL) View and manage Rush alerts for the repository',\n      documentation:\n        'This command displays the Rush alerts for this repository.  Rush alerts are customizable announcements' +\n        ' and reminders that Rush prints occasionally on the command line.' +\n        '  The alert definitions can be found in the rush-alerts.json config file.',\n      parser\n    });\n    this._terminal = new Terminal(new ConsoleTerminalProvider({ verboseEnabled: parser.isDebug }));\n\n    this._snoozeParameter = this.defineStringParameter({\n      parameterLongName: '--snooze',\n      parameterShortName: '-s',\n      argumentName: 'ALERT_ID',\n      description: 'Temporarily suspend the specified alert for one week'\n    });\n\n    this._snoozeTimeFlagParameter = this.defineFlagParameter({\n      parameterLongName: '--forever',\n      description: 'Combined with \"--snooze\", causes that alert to be suspended permanently'\n    });\n  }\n\n  public async runAsync(): Promise<void> {\n    const rushAlerts: RushAlerts = await RushAlerts.loadFromConfigurationAsync(\n      this.rushConfiguration,\n      this._terminal\n    );\n    const snoozeAlertId: string | undefined = this._snoozeParameter.value;\n    if (snoozeAlertId) {\n      const snoozeTimeFlag: boolean = this._snoozeTimeFlagParameter.value;\n      await rushAlerts.snoozeAlertsByAlertIdAsync(snoozeAlertId, snoozeTimeFlag);\n    }\n    await rushAlerts.printAllAlertsAsync();\n  }\n}\n"]}