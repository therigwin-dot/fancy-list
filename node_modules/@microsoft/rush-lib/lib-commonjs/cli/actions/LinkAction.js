"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinkAction = void 0;
const BaseRushAction_1 = require("./BaseRushAction");
class LinkAction extends BaseRushAction_1.BaseRushAction {
    constructor(parser) {
        super({
            actionName: 'link',
            summary: 'Create node_modules symlinks for all projects',
            documentation: 'Create node_modules symlinks for all projects.  This operation is normally performed' +
                ' automatically as part of "rush install" or "rush update".  You should only need to use "rush link"' +
                ' if you performed "rush unlink" for some reason, or if you specified the "--no-link" option' +
                ' for "rush install" or "rush update".',
            parser
        });
        this._force = this.defineFlagParameter({
            parameterLongName: '--force',
            parameterShortName: '-f',
            description: 'Deletes and recreates all links, even if the filesystem state seems to indicate that this is ' +
                'unnecessary.'
        });
    }
    async runAsync() {
        const linkManagerFactoryModule = await Promise.resolve().then(() => __importStar(require(
        /* webpackChunkName: 'LinkManagerFactory' */
        '../../logic/LinkManagerFactory')));
        const linkManager = linkManagerFactoryModule.LinkManagerFactory.getLinkManager(this.rushConfiguration);
        await linkManager.createSymlinksForProjectsAsync(this._force.value);
    }
}
exports.LinkAction = LinkAction;
//# sourceMappingURL=LinkAction.js.map