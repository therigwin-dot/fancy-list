{"version":3,"file":"InitSubspaceAction.js","sourceRoot":"","sources":["../../../src/cli/actions/InitSubspaceAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,iEAAiE;AAEjE,qDAAkD;AAClD,6EAA4G;AAC5G,oEAA2E;AAC3E,kDAAwE;AACxE,yEAA0E;AAE1E,MAAa,kBAAmB,SAAQ,+BAAc;IAGpD,YAAmB,MAA6B;QAC9C,KAAK,CAAC;YACJ,UAAU,EAAE,eAAe;YAC3B,OAAO,EAAE,wBAAwB;YACjC,aAAa,EACX,0FAA0F;YAC5F,MAAM;SACP,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACvD,iBAAiB,EAAE,QAAQ;YAC3B,kBAAkB,EAAE,IAAI;YACxB,YAAY,EAAE,eAAe;YAC7B,WAAW,EAAE,qDAAqD;YAClE,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAES,KAAK,CAAC,QAAQ;;QACtB,MAAM,QAAQ,GAAa,IAAI,mBAAQ,CAAC,IAAI,kCAAuB,EAAE,CAAC,CAAC;QAEvE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,EAAE,CAAC;YACpD,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;QAC/F,CAAC;QAED,MAAM,sBAAsB,GAA2B,IAAI,CAAC,iBAAiB;aAC1E,sBAAgD,CAAC;QACpD,mDAAmD;QACnD,MAAM,qBAAqB,GAAwB,sBAAsB,CAAC,aAAa,CAAC;QACxF,MAAM,eAAe,GAAW,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;QAClE,IAAI,qBAAqB,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;YAC/C,MAAM,IAAI,KAAK,CACb,sBAAsB,IAAI,CAAC,sBAAsB,CAAC,KAAK,4CAA4C,CACpG,CAAC;QACJ,CAAC;QACD,IACE,+CAAsB,CAAC,4BAA4B,CACjD,eAAe,EACf,MAAA,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,0CAAE,2BAA2B,CAC3E,EACD,CAAC;YACD,OAAO;QACT,CAAC;QAED,MAAM,kBAAkB,GAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,qBAAqB,eAAe,EAAE,CAAC;QAChH,MAAM,eAAe,GAAW,GAAG,gCAAgB,YAAY,CAAC;QAChE,MAAM,iBAAiB,GAAa;YAClC,YAAY;YACZ,eAAe;YACf,sBAAsB;YACtB,kBAAkB;SACnB,CAAC;QAEF,MAAM,8BAAU,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;QAC5D,MAAM,yBAAK,CAAC,YAAY,CACtB,iBAAiB,EACjB,KAAK,EAAE,gBAAgB,EAAE,EAAE;YACzB,MAAM,UAAU,GAAW,GAAG,eAAe,uBAAuB,gBAAgB,EAAE,CAAC;YACvF,MAAM,eAAe,GAAW,GAAG,kBAAkB,IAAI,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,CAAC;YAClG,MAAM,IAAA,yCAAqB,EAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QACjE,CAAC,EACD,EAAE,WAAW,EAAE,EAAE,EAAE,CACpB,CAAC;QAEF,0CAA0C;QAC1C,MAAM,YAAY,GAAgC,MAAM,4BAAQ,CAAC,SAAS,CACxE,sBAAsB,CAAC,oBAAoB,CAC5C,CAAC;QACF,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACjD,MAAM,4BAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,sBAAsB,CAAC,oBAAoB,EAAE;YAClF,kBAAkB,EAAE,IAAI;SACzB,CAAC,CAAC;QAEH,sCAAsC;QACtC,QAAQ,CAAC,SAAS,CAChB,oGAAoG,CACrG,CAAC;IACJ,CAAC;CACF;AAjFD,gDAiFC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { IRequiredCommandLineStringParameter } from '@rushstack/ts-command-line';\nimport { assetsFolderPath } from '../../utilities/PathConstants';\nimport type { RushCommandLineParser } from '../RushCommandLineParser';\nimport { BaseRushAction } from './BaseRushAction';\nimport { type ISubspacesConfigurationJson, SubspacesConfiguration } from '../../api/SubspacesConfiguration';\nimport { Async, FileSystem, JsonFile } from '@rushstack/node-core-library';\nimport { ConsoleTerminalProvider, Terminal } from '@rushstack/terminal';\nimport { copyTemplateFileAsync } from '../../utilities/templateUtilities';\n\nexport class InitSubspaceAction extends BaseRushAction {\n  private readonly _subspaceNameParameter: IRequiredCommandLineStringParameter;\n\n  public constructor(parser: RushCommandLineParser) {\n    super({\n      actionName: 'init-subspace',\n      summary: 'Create a new subspace.',\n      documentation:\n        'Use this command to create a new subspace with the default subspace configuration files.',\n      parser\n    });\n\n    this._subspaceNameParameter = this.defineStringParameter({\n      parameterLongName: '--name',\n      parameterShortName: '-n',\n      argumentName: 'SUBSPACE_NAME',\n      description: 'The name of the subspace that is being initialized.',\n      required: true\n    });\n  }\n\n  protected async runAsync(): Promise<void> {\n    const terminal: Terminal = new Terminal(new ConsoleTerminalProvider());\n\n    if (!this.rushConfiguration.subspacesFeatureEnabled) {\n      throw new Error('Unable to create a subspace because the subspaces feature is not enabled.');\n    }\n\n    const subspacesConfiguration: SubspacesConfiguration = this.rushConfiguration\n      .subspacesConfiguration as SubspacesConfiguration;\n    // Verify this subspace name does not already exist\n    const existingSubspaceNames: ReadonlySet<string> = subspacesConfiguration.subspaceNames;\n    const newSubspaceName: string = this._subspaceNameParameter.value;\n    if (existingSubspaceNames.has(newSubspaceName)) {\n      throw new Error(\n        `The subspace name: ${this._subspaceNameParameter.value} already exists in the subspace.json file.`\n      );\n    }\n    if (\n      SubspacesConfiguration.explainIfInvalidSubspaceName(\n        newSubspaceName,\n        this.rushConfiguration.subspacesConfiguration?.splitWorkspaceCompatibility\n      )\n    ) {\n      return;\n    }\n\n    const subspaceConfigPath: string = `${this.rushConfiguration.commonFolder}/config/subspaces/${newSubspaceName}`;\n    const assetsSubfolder: string = `${assetsFolderPath}/rush-init`;\n    const templateFilePaths: string[] = [\n      '[dot]npmrc',\n      '.pnpmfile.cjs',\n      'common-versions.json',\n      'pnpm-config.json'\n    ];\n\n    await FileSystem.ensureEmptyFolderAsync(subspaceConfigPath);\n    await Async.forEachAsync(\n      templateFilePaths,\n      async (templateFilePath) => {\n        const sourcePath: string = `${assetsSubfolder}/common/config/rush/${templateFilePath}`;\n        const destinationPath: string = `${subspaceConfigPath}/${templateFilePath.replace('[dot]', '.')}`;\n        await copyTemplateFileAsync(sourcePath, destinationPath, true);\n      },\n      { concurrency: 10 }\n    );\n\n    // Add the subspace name to subspaces.json\n    const subspaceJson: ISubspacesConfigurationJson = await JsonFile.loadAsync(\n      subspacesConfiguration.subspaceJsonFilePath\n    );\n    subspaceJson.subspaceNames.push(newSubspaceName);\n    await JsonFile.saveAsync(subspaceJson, subspacesConfiguration.subspaceJsonFilePath, {\n      updateExistingFile: true\n    });\n\n    // eslint-disable-next-line no-console\n    terminal.writeLine(\n      '\\nSubspace successfully created. Please review the subspace configuration files before committing.'\n    );\n  }\n}\n"]}