{"version":3,"file":"BaseAddAndRemoveAction.js","sourceRoot":"","sources":["../../../src/cli/actions/BaseAddAndRemoveAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;;AAI3D,qDAA+E;AAO/E,6DAA0D;AAqB1D;;GAEG;AACH,MAAsB,sBAAuB,SAAQ,+BAAc;IAKjE,IAAc,wBAAwB;QACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAO,CAAC;IACvC,CAAC;IAED,YAAmB,OAA+B;QAChD,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC9C,iBAAiB,EAAE,eAAe;YAClC,kBAAkB,EAAE,IAAI;YACxB,WAAW,EACT,gGAAgG;SACnG,CAAC,CAAC;IACL,CAAC;IAIS,WAAW;QACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;QACzC,CAAC;aAAM,CAAC;YACN,MAAM,cAAc,GAClB,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;YAE7D,IAAI,CAAC,cAAc,EAAE,CAAC;gBACpB,MAAM,IAAI,KAAK,CACb,aAAa,IAAI,CAAC,UAAU,2CAA2C;oBACrE,iCAAiC,6BAAa,CAAC,gBAAgB,eAAe,IAAI,CAAC,QAAQ,CAAC,QAAQ,WAAW,CAClH,CAAC;YACJ,CAAC;YAED,OAAO,CAAC,cAAc,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,QAAQ;QACnB,MAAM,kBAAkB,GAAkC;QACxD,4CAA4C,CAAC,gCAAgC,GAC9E,CAAC;QACF,MAAM,OAAO,GAA8C,IAAI,kBAAkB,CAAC,kBAAkB,CAClG,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,gBAAgB,CACtB,CAAC;QAEF,MAAM,aAAa,GAA6C,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACnG,MAAM,OAAO,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;IACjD,CAAC;CACF;AApDD,wDAoDC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { CommandLineFlagParameter, CommandLineStringListParameter } from '@rushstack/ts-command-line';\n\nimport { BaseRushAction, type IBaseRushActionOptions } from './BaseRushAction';\nimport type { RushConfigurationProject } from '../../api/RushConfigurationProject';\nimport type * as PackageJsonUpdaterType from '../../logic/PackageJsonUpdater';\nimport type {\n  IPackageForRushUpdate,\n  IPackageJsonUpdaterRushBaseUpdateOptions\n} from '../../logic/PackageJsonUpdaterTypes';\nimport { RushConstants } from '../../logic/RushConstants';\n\nexport interface IBasePackageJsonUpdaterRushOptions {\n  /**\n   * The projects whose package.jsons should get updated\n   */\n  projects: RushConfigurationProject[];\n  /**\n   * The dependencies to be added.\n   */\n  packagesToHandle: IPackageForRushUpdate[];\n  /**\n   * If specified, \"rush update\" will not be run after updating the package.json file(s).\n   */\n  skipUpdate: boolean;\n  /**\n   * If specified, \"rush update\" will be run in debug mode.\n   */\n  debugInstall: boolean;\n}\n\n/**\n * This is the common base class for AddAction and RemoveAction.\n */\nexport abstract class BaseAddAndRemoveAction extends BaseRushAction {\n  protected abstract readonly _allFlag: CommandLineFlagParameter;\n  protected readonly _skipUpdateFlag!: CommandLineFlagParameter;\n  protected abstract readonly _packageNameList: CommandLineStringListParameter;\n\n  protected get specifiedPackageNameList(): readonly string[] {\n    return this._packageNameList.values!;\n  }\n\n  public constructor(options: IBaseRushActionOptions) {\n    super(options);\n\n    this._skipUpdateFlag = this.defineFlagParameter({\n      parameterLongName: '--skip-update',\n      parameterShortName: '-s',\n      description:\n        'If specified, the \"rush update\" command will not be run after updating the package.json files.'\n    });\n  }\n\n  protected abstract getUpdateOptionsAsync(): Promise<IPackageJsonUpdaterRushBaseUpdateOptions>;\n\n  protected getProjects(): RushConfigurationProject[] {\n    if (this._allFlag.value) {\n      return this.rushConfiguration.projects;\n    } else {\n      const currentProject: RushConfigurationProject | undefined =\n        this.rushConfiguration.tryGetProjectForPath(process.cwd());\n\n      if (!currentProject) {\n        throw new Error(\n          `The rush \"${this.actionName}\" command must be invoked under a project` +\n            ` folder that is registered in ${RushConstants.rushJsonFilename} unless the ${this._allFlag.longName} is used.`\n        );\n      }\n\n      return [currentProject];\n    }\n  }\n\n  public async runAsync(): Promise<void> {\n    const packageJsonUpdater: typeof PackageJsonUpdaterType = await import(\n      /* webpackChunkName: 'PackageJsonUpdater' */ '../../logic/PackageJsonUpdater'\n    );\n    const updater: PackageJsonUpdaterType.PackageJsonUpdater = new packageJsonUpdater.PackageJsonUpdater(\n      this.rushConfiguration,\n      this.rushGlobalFolder\n    );\n\n    const updateOptions: IPackageJsonUpdaterRushBaseUpdateOptions = await this.getUpdateOptionsAsync();\n    await updater.doRushUpdateAsync(updateOptions);\n  }\n}\n"]}