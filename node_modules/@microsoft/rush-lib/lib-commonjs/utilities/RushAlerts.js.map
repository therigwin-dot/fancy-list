{"version":3,"file":"RushAlerts.js","sourceRoot":"","sources":["../../src/utilities/RushAlerts.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { Colorize, PrintUtilities, type Terminal } from '@rushstack/terminal';\nimport type { RushConfiguration } from '../api/RushConfiguration';\nimport { FileSystem, JsonFile, JsonSchema, JsonSyntax } from '@rushstack/node-core-library';\nimport rushAlertsSchemaJson from '../schemas/rush-alerts.schema.json';\nimport { RushConstants } from '../logic/RushConstants';\n\nexport interface IRushAlertsOptions {\n  terminal: Terminal;\n  rushJsonFolder: string;\n  rushAlertsConfig: IRushAlertsConfig | undefined;\n  rushAlertsState: IRushAlertsState | undefined;\n  rushAlertsConfigFilePath: string;\n  rushAlertsStateFilePath: string;\n}\n\ninterface IRushAlertsConfig {\n  alerts: Array<IRushAlertsConfigEntry>;\n}\ninterface IRushAlertsConfigEntry {\n  alertId: string;\n  title: string;\n  message: Array<string>;\n  detailsUrl: string;\n  startTime: string;\n  endTime: string;\n  conditionScript?: string;\n  priority?: AlertPriority;\n  maximumDisplayInterval?: AlertDisplayInterval;\n}\ninterface IRushAlertsState {\n  [alertId: string]: IRushAlertStateEntry;\n}\ninterface IRushAlertStateEntry {\n  lastDisplayTime?: string;\n  snooze?: boolean;\n  snoozeEndTime?: string;\n}\n\ntype AlertStatus = 'active' | 'inactive' | 'snoozed';\n\nconst enum AlertDisplayInterval {\n  ALWAYS = 'always',\n  MONTHLY = 'monthly',\n  WEEKLY = 'weekly',\n  DAILY = 'daily',\n  HOURLY = 'hourly'\n}\n\nconst enum AlertPriority {\n  HIGH = 'high',\n  NORMAL = 'normal',\n  LOW = 'low'\n}\n\nexport class RushAlerts {\n  private readonly _terminal: Terminal;\n\n  private readonly _rushAlertsConfig: IRushAlertsConfig | undefined;\n  private readonly _rushAlertsState: IRushAlertsState;\n\n  private readonly _rushJsonFolder: string;\n  public readonly rushAlertsStateFilePath: string;\n  public readonly rushAlertsConfigFilePath: string;\n\n  public static readonly ALERT_PRIORITY: string[] = [\n    AlertPriority.HIGH,\n    AlertPriority.NORMAL,\n    AlertPriority.LOW\n  ];\n  public static readonly alertDisplayIntervalDurations: Map<AlertDisplayInterval, number> = new Map([\n    [AlertDisplayInterval.ALWAYS, -1],\n    [AlertDisplayInterval.MONTHLY, 1000 * 60 * 60 * 24 * 30],\n    [AlertDisplayInterval.WEEKLY, 1000 * 60 * 60 * 24 * 7],\n    [AlertDisplayInterval.DAILY, 1000 * 60 * 60 * 24],\n    [AlertDisplayInterval.HOURLY, 1000 * 60 * 60]\n  ]);\n  // only display alerts when certain specific actions are triggered\n  public static readonly alertTriggerActions: string[] = [\n    'add',\n    'change',\n    'deploy',\n    'init',\n    'publish',\n    'purge',\n    'remove',\n    'update',\n    'install',\n    'build',\n    'list',\n    'version'\n  ];\n\n  public constructor(options: IRushAlertsOptions) {\n    this._terminal = options.terminal;\n    this._rushJsonFolder = options.rushJsonFolder;\n    this.rushAlertsStateFilePath = options.rushAlertsStateFilePath;\n    this.rushAlertsConfigFilePath = options.rushAlertsConfigFilePath;\n    this._rushAlertsConfig = options.rushAlertsConfig;\n    this._rushAlertsState = options.rushAlertsState ?? {};\n  }\n\n  public static async loadFromConfigurationAsync(\n    rushConfiguration: RushConfiguration,\n    terminal: Terminal\n  ): Promise<RushAlerts> {\n    const rushAlertsStateFilePath: string = `${rushConfiguration.commonTempFolder}/${RushConstants.rushAlertsConfigFilename}`;\n    const rushAlertsConfigFilePath: string = `${rushConfiguration.commonRushConfigFolder}/${RushConstants.rushAlertsConfigFilename}`;\n    const rushJsonFolder: string = rushConfiguration.rushJsonFolder;\n\n    const [isRushAlertsStateFileExists, isRushAlertsConfigFileExists] = await Promise.all([\n      FileSystem.existsAsync(rushAlertsStateFilePath),\n      FileSystem.existsAsync(rushAlertsConfigFilePath)\n    ]);\n\n    const [rushAlertsConfig, rushAlertsState] = await Promise.all([\n      isRushAlertsConfigFileExists\n        ? JsonFile.loadAndValidateAsync(\n            rushAlertsConfigFilePath,\n            JsonSchema.fromLoadedObject(rushAlertsSchemaJson)\n          )\n        : undefined,\n      isRushAlertsStateFileExists\n        ? JsonFile.loadAsync(rushAlertsStateFilePath, { jsonSyntax: JsonSyntax.JsonWithComments })\n        : undefined\n    ]);\n\n    return new RushAlerts({\n      terminal,\n      rushAlertsStateFilePath,\n      rushAlertsConfigFilePath,\n      rushJsonFolder,\n      rushAlertsConfig,\n      rushAlertsState\n    });\n  }\n\n  private _ensureAlertStateIsUpToDate(): void {\n    // ensure `temp/rush-alerts.json` is up to date\n    if (this._rushAlertsConfig) {\n      for (const alert of this._rushAlertsConfig.alerts) {\n        if (!(alert.alertId in this._rushAlertsState)) {\n          this._rushAlertsState[alert.alertId] = {\n            snooze: false\n          };\n        }\n      }\n    }\n  }\n\n  public async printAlertsAsync(): Promise<void> {\n    if (!this._rushAlertsConfig || this._rushAlertsConfig.alerts.length === 0) return;\n\n    this._ensureAlertStateIsUpToDate();\n\n    this._terminal.writeLine();\n\n    const alert: IRushAlertsConfigEntry | undefined = await this._selectAlertByPriorityAsync();\n    if (alert) {\n      this._printMessageInBoxStyle(alert);\n      this._rushAlertsState[alert.alertId].lastDisplayTime = new Date().toISOString();\n    }\n\n    await this._writeRushAlertStateAsync();\n  }\n\n  public async printAllAlertsAsync(): Promise<void> {\n    const allAlerts: IRushAlertsConfigEntry[] = this._rushAlertsConfig?.alerts ?? [];\n\n    const activeAlerts: IRushAlertsConfigEntry[] = [];\n    const snoozedAlerts: IRushAlertsConfigEntry[] = [];\n    const inactiveAlerts: IRushAlertsConfigEntry[] = [];\n\n    await Promise.all(\n      allAlerts.map(async (alert) => {\n        const isAlertValid: boolean = await this._isAlertValidAsync(alert);\n        const alertState: IRushAlertStateEntry = this._rushAlertsState[alert.alertId];\n\n        if (!isAlertValid) {\n          inactiveAlerts.push(alert);\n          return;\n        }\n\n        if (this._isSnoozing(alertState)) {\n          snoozedAlerts.push(alert);\n          return;\n        }\n\n        activeAlerts.push(alert);\n      })\n    );\n\n    this._printAlerts(activeAlerts, 'active');\n    this._printAlerts(snoozedAlerts, 'snoozed');\n    this._printAlerts(inactiveAlerts, 'inactive');\n  }\n\n  private _printAlerts(alerts: IRushAlertsConfigEntry[], status: AlertStatus): void {\n    if (alerts.length === 0) return;\n    switch (status) {\n      case 'active':\n      case 'inactive':\n        this._terminal.writeLine(Colorize.yellow(`The following alerts are currently ${status}:`));\n        break;\n      case 'snoozed':\n        this._terminal.writeLine(Colorize.yellow('The following alerts are currently active but snoozed:'));\n        break;\n    }\n    alerts.forEach(({ title }) => {\n      this._terminal.writeLine(Colorize.green(`\"${title}\"`));\n    });\n    this._terminal.writeLine();\n  }\n\n  public async snoozeAlertsByAlertIdAsync(alertId: string, forever: boolean = false): Promise<void> {\n    this._ensureAlertStateIsUpToDate();\n    if (forever) {\n      this._rushAlertsState[alertId].snooze = true;\n    } else {\n      this._rushAlertsState[alertId].snooze = true;\n      const snoozeEndTime: Date = new Date();\n      snoozeEndTime.setDate(snoozeEndTime.getDate() + 7);\n      this._rushAlertsState[alertId].snoozeEndTime = snoozeEndTime.toISOString();\n    }\n    await this._writeRushAlertStateAsync();\n  }\n\n  private async _selectAlertByPriorityAsync(): Promise<IRushAlertsConfigEntry | undefined> {\n    const alerts: Array<IRushAlertsConfigEntry> = this._rushAlertsConfig!.alerts;\n    const alertsState: IRushAlertsState = this._rushAlertsState;\n\n    const needDisplayAlerts: Array<IRushAlertsConfigEntry> = (\n      await Promise.all(\n        alerts.map(async (alert) => {\n          const isAlertValid: boolean = await this._isAlertValidAsync(alert);\n          const alertState: IRushAlertStateEntry = alertsState[alert.alertId];\n          if (\n            isAlertValid &&\n            !this._isSnoozing(alertState) &&\n            (!alertState.lastDisplayTime ||\n              Number(new Date()) - Number(new Date(alertState.lastDisplayTime)) >\n                RushAlerts.alertDisplayIntervalDurations.get(\n                  alert.maximumDisplayInterval ?? AlertDisplayInterval.ALWAYS\n                )!)\n          ) {\n            return alert;\n          }\n        })\n      )\n    ).filter((alert) => alert !== undefined) as Array<IRushAlertsConfigEntry>;\n\n    const alertsSortedByPriority: IRushAlertsConfigEntry[] = needDisplayAlerts.sort((a, b) => {\n      return (\n        RushAlerts.ALERT_PRIORITY.indexOf(a.priority ?? AlertPriority.NORMAL) -\n        RushAlerts.ALERT_PRIORITY.indexOf(b.priority ?? AlertPriority.NORMAL)\n      );\n    });\n    return alertsSortedByPriority[0];\n  }\n\n  private static _parseDate(dateString: string): Date {\n    const parsedDate: Date = new Date(dateString);\n    if (isNaN(parsedDate.getTime())) {\n      throw new Error(`Invalid date/time value ${JSON.stringify(dateString)}`);\n    }\n    return parsedDate;\n  }\n\n  private _isSnoozing(alertState: IRushAlertStateEntry): boolean {\n    return (\n      Boolean(alertState.snooze) &&\n      (!alertState.snoozeEndTime || Number(new Date()) < Number(new Date(alertState.snoozeEndTime)))\n    );\n  }\n\n  private async _isAlertValidAsync(alert: IRushAlertsConfigEntry): Promise<boolean> {\n    const timeNow: Date = new Date();\n\n    if (alert.startTime) {\n      const startTime: Date = RushAlerts._parseDate(alert.startTime);\n      if (timeNow < startTime) {\n        return false;\n      }\n    }\n\n    if (alert.endTime) {\n      const endTime: Date = RushAlerts._parseDate(alert.endTime);\n      if (timeNow > endTime) {\n        return false;\n      }\n    }\n\n    const conditionScript: string | undefined = alert.conditionScript;\n    if (conditionScript) {\n      // \"(OPTIONAL) The filename of a script that determines whether this alert can be shown,\n      // found in the \"common/config/rush/alert-scripts\" folder.\" ... \"To ensure up-to-date alerts, Rush\n      // may fetch and checkout the \"common/config/rush-alerts\" folder in an unpredictable temporary\n      // path.  Therefore, your script should avoid importing dependencies from outside its folder,\n      // generally be kept as simple and reliable and quick as possible.\"\n      if (conditionScript.indexOf('/') >= 0 || conditionScript.indexOf('\\\\') >= 0) {\n        throw new Error(\n          `The rush-alerts.json file contains a \"conditionScript\" that is not inside the \"alert-scripts\" folder: ` +\n            JSON.stringify(conditionScript)\n        );\n      }\n      const conditionScriptPath: string = `${this._rushJsonFolder}/common/config/rush/alert-scripts/${conditionScript}`;\n      if (!(await FileSystem.existsAsync(conditionScriptPath))) {\n        throw new Error(\n          'The \"conditionScript\" field in rush-alerts.json refers to a nonexistent file:\\n' +\n            conditionScriptPath\n        );\n      }\n\n      this._terminal.writeDebugLine(`Invoking condition script \"${conditionScript}\" from rush-alerts.json`);\n      const startTimemark: number = performance.now();\n\n      interface IAlertsConditionScriptModule {\n        canShowAlert(): boolean;\n      }\n\n      let conditionScriptModule: IAlertsConditionScriptModule;\n      try {\n        conditionScriptModule = require(conditionScriptPath);\n\n        if (typeof conditionScriptModule.canShowAlert !== 'function') {\n          throw new Error('The \"canShowAlert\" module export is missing');\n        }\n      } catch (e) {\n        throw new Error(\n          `Error loading condition script \"${conditionScript}\" from rush-alerts.json:\\n${e.stack}`\n        );\n      }\n\n      const oldCwd: string = process.cwd();\n\n      let conditionResult: boolean;\n      try {\n        // \"Rush will invoke this script with the working directory set to the monorepo root folder,\n        // with no guarantee that `rush install` has been run.\"\n        process.chdir(this._rushJsonFolder);\n        conditionResult = conditionScriptModule.canShowAlert();\n\n        if (typeof conditionResult !== 'boolean') {\n          throw new Error('canShowAlert() did not return a boolean value');\n        }\n      } catch (e) {\n        throw new Error(\n          `Error invoking condition script \"${conditionScript}\" from rush-alerts.json:\\n${e.stack}`\n        );\n      } finally {\n        process.chdir(oldCwd);\n      }\n\n      const totalMs: number = performance.now() - startTimemark;\n      this._terminal.writeDebugLine(\n        `Invoked conditionScript \"${conditionScript}\"` +\n          ` in ${Math.round(totalMs)} ms with result \"${conditionResult}\"`\n      );\n\n      if (!conditionResult) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private _printMessageInBoxStyle(alert: IRushAlertsConfigEntry): void {\n    const boxTitle: string = alert.title.toUpperCase();\n\n    const boxMessage: string = typeof alert.message === 'string' ? alert.message : alert.message.join('');\n\n    const boxDetails: string = alert.detailsUrl ? 'Details: ' + alert.detailsUrl : '';\n\n    // ...minus the padding.\n    const PADDING: number = '╔══╗'.length;\n\n    // Try to make it wide enough to fit the (unwrapped) strings...\n    let lineLength: number = Math.max(boxTitle.length, boxMessage.length, boxDetails.length);\n\n    // ...but don't exceed the console width, and also keep it under 80...\n    lineLength = Math.min(lineLength, (PrintUtilities.getConsoleWidth() ?? 80) - PADDING, 80 - PADDING);\n\n    // ...and the width needs to be at least 40 characters...\n    lineLength = Math.max(lineLength, 40 - PADDING);\n\n    const lines: string[] = [\n      ...PrintUtilities.wrapWordsToLines(boxTitle, lineLength).map((x) =>\n        Colorize.bold(x.padEnd(lineLength))\n      ),\n      '',\n      ...PrintUtilities.wrapWordsToLines(boxMessage, lineLength).map((x) => x.padEnd(lineLength))\n    ];\n    if (boxDetails) {\n      lines.push(\n        '',\n        ...PrintUtilities.wrapWordsToLines(boxDetails, lineLength).map((x) =>\n          Colorize.cyan(x.padEnd(lineLength))\n        )\n      );\n    }\n\n    // Print the box\n    this._terminal.writeLine('╔═' + '═'.repeat(lineLength) + '═╗');\n    for (const line of lines) {\n      this._terminal.writeLine(`║ ${line.padEnd(lineLength)} ║`);\n    }\n    this._terminal.writeLine('╚═' + '═'.repeat(lineLength) + '═╝');\n    this._terminal.writeLine(`To stop seeing this alert, run \"rush alert --snooze ${alert.alertId}\"`);\n  }\n\n  private async _writeRushAlertStateAsync(): Promise<void> {\n    await JsonFile.saveAsync(this._rushAlertsState, this.rushAlertsStateFilePath, {\n      ignoreUndefinedValues: true,\n      headerComment: '// THIS FILE IS MACHINE-GENERATED -- DO NOT MODIFY',\n      jsonSyntax: JsonSyntax.JsonWithComments\n    });\n  }\n}\n"]}