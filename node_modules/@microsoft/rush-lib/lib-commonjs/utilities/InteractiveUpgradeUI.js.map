{"version":3,"file":"InteractiveUpgradeUI.js","sourceRoot":"","sources":["../../src/utilities/InteractiveUpgradeUI.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n// UI Code, Table creation, and choice layout leveraged from npm-check\n// https://github.com/dylang/npm-check/blob/master/lib/out/interactive-update.js\n// Extended to use one type of text table\n\nimport inquirer from 'inquirer';\nimport CliTable from 'cli-table';\nimport type Separator from 'inquirer/lib/objects/separator';\nimport type * as NpmCheck from 'npm-check';\nimport { AnsiEscape, Colorize } from '@rushstack/terminal';\n\nexport interface IUIGroup {\n  title: string;\n  bgColor?: string;\n  filter: {\n    mismatch?: boolean;\n    bump?: undefined | 'major' | 'minor' | 'patch' | 'nonSemver';\n    notInstalled?: boolean;\n  };\n}\n\nexport interface IDepsToUpgradeAnswers {\n  packages: NpmCheck.INpmCheckPackage[];\n}\n\nexport interface IUpgradeInteractiveDepChoice {\n  value: NpmCheck.INpmCheckPackage;\n  name: string | string[];\n  short: string;\n}\n\ntype ChoiceTable = (Separator | IUpgradeInteractiveDepChoice | boolean | undefined)[] | undefined;\n\nfunction greenUnderlineBold(text: string): string {\n  return Colorize.underline(Colorize.bold(Colorize.green(text)));\n}\n\nfunction yellowUnderlineBold(text: string): string {\n  return Colorize.underline(Colorize.bold(Colorize.yellow(text)));\n}\n\nfunction redUnderlineBold(text: string): string {\n  return Colorize.underline(Colorize.bold(Colorize.red(text)));\n}\n\nfunction magentaUnderlineBold(text: string): string {\n  return Colorize.underline(Colorize.bold(Colorize.magenta(text)));\n}\n\nexport const UI_GROUPS: IUIGroup[] = [\n  {\n    title: greenUnderlineBold('Update package.json to match version installed.'),\n    filter: { mismatch: true, bump: undefined }\n  },\n  {\n    title: `${greenUnderlineBold('Missing.')} ${Colorize.green('You probably want these.')}`,\n    filter: { notInstalled: true, bump: undefined }\n  },\n  {\n    title: `${greenUnderlineBold('Patch Update')} ${Colorize.green('Backwards-compatible bug fixes.')}`,\n    filter: { bump: 'patch' }\n  },\n  {\n    title: `${yellowUnderlineBold('Minor Update')} ${Colorize.yellow('New backwards-compatible features.')}`,\n    bgColor: 'yellow',\n    filter: { bump: 'minor' }\n  },\n  {\n    title: `${redUnderlineBold('Major Update')} ${Colorize.red(\n      'Potentially breaking API changes. Use caution.'\n    )}`,\n    filter: { bump: 'major' }\n  },\n  {\n    title: `${magentaUnderlineBold('Non-Semver')} ${Colorize.magenta('Versions less than 1.0.0, caution.')}`,\n    filter: { bump: 'nonSemver' }\n  }\n];\n\nfunction label(dep: NpmCheck.INpmCheckPackage): string[] {\n  const bumpInstalled: string = dep.bump ? dep.installed : '';\n  const installed: string = dep.mismatch ? dep.packageJson : bumpInstalled;\n  const name: string = Colorize.yellow(dep.moduleName);\n  const type: string = dep.devDependency ? Colorize.green(' devDep') : '';\n  const missing: string = dep.notInstalled ? Colorize.red(' missing') : '';\n  const homepage: string = dep.homepage ? Colorize.blue(Colorize.underline(dep.homepage)) : '';\n\n  return [\n    name + type + missing,\n    installed,\n    installed && '>',\n    Colorize.bold(dep.latest || ''),\n    dep.latest ? homepage : dep.regError || dep.pkgError\n  ];\n}\n\nfunction short(dep: NpmCheck.INpmCheckPackage): string {\n  return `${dep.moduleName}@${dep.latest}`;\n}\n\nfunction getChoice(dep: NpmCheck.INpmCheckPackage): IUpgradeInteractiveDepChoice | boolean | Separator {\n  if (!dep.mismatch && !dep.bump && !dep.notInstalled) {\n    return false;\n  }\n\n  return {\n    value: dep,\n    name: label(dep),\n    short: short(dep)\n  };\n}\n\nfunction unselectable(options?: { title: string }): Separator {\n  return new inquirer.Separator(AnsiEscape.removeCodes(options ? options.title : ''));\n}\n\nfunction createChoices(packages: NpmCheck.INpmCheckPackage[], options: IUIGroup): ChoiceTable {\n  const { filter } = options;\n  const filteredChoices: NpmCheck.INpmCheckPackage[] = packages.filter((pkg: NpmCheck.INpmCheckPackage) => {\n    if ('mismatch' in filter && pkg.mismatch !== filter.mismatch) {\n      return false;\n    } else if ('bump' in filter && pkg.bump !== filter.bump) {\n      return false;\n    } else if ('notInstalled' in filter && pkg.notInstalled !== filter.notInstalled) {\n      return false;\n    } else {\n      return true;\n    }\n  }) as NpmCheck.INpmCheckPackage[];\n\n  const choices: (IUpgradeInteractiveDepChoice | Separator | boolean)[] = filteredChoices\n    .map(getChoice)\n    .filter(Boolean);\n\n  const cliTable: CliTable = new CliTable({\n    chars: {\n      top: '',\n      'top-mid': '',\n      'top-left': '',\n      'top-right': '',\n      bottom: '',\n      'bottom-mid': '',\n      'bottom-left': '',\n      'bottom-right': '',\n      left: '',\n      'left-mid': '',\n      mid: '',\n      'mid-mid': '',\n      right: '',\n      'right-mid': '',\n      middle: ' '\n    },\n    colWidths: [50, 10, 3, 10, 100]\n  });\n\n  for (const choice of choices) {\n    if (typeof choice === 'object' && 'name' in choice) {\n      cliTable.push(choice.name);\n    }\n  }\n\n  const choicesAsATable: string[] = cliTable.toString().split('\\n');\n  for (let i: number = 0; i < choices.length; i++) {\n    const choice: IUpgradeInteractiveDepChoice | Separator | boolean | undefined = choices[i];\n    if (typeof choice === 'object' && 'name' in choice) {\n      choice.name = choicesAsATable[i];\n    }\n  }\n\n  if (choices.length > 0) {\n    choices.unshift(unselectable(options));\n    choices.unshift(unselectable());\n    return choices;\n  }\n}\n\nexport const upgradeInteractive = async (\n  pkgs: NpmCheck.INpmCheckPackage[]\n): Promise<IDepsToUpgradeAnswers> => {\n  const choicesGrouped: ChoiceTable[] = UI_GROUPS.map((group) => createChoices(pkgs, group)).filter(Boolean);\n\n  const choices: ChoiceTable = [];\n  for (const choiceGroup of choicesGrouped) {\n    if (choiceGroup) {\n      choices.push(...choiceGroup);\n    }\n  }\n\n  if (!choices.length) {\n    // eslint-disable-next-line no-console\n    console.log('All dependencies are up to date!');\n    return { packages: [] };\n  }\n\n  choices.push(unselectable());\n  choices.push(unselectable({ title: 'Space to select. Enter to start upgrading. Control-C to cancel.' }));\n\n  const promptQuestions: inquirer.QuestionCollection = [\n    {\n      name: 'packages',\n      message: 'Choose which packages to upgrade',\n      type: 'checkbox',\n      choices: choices.concat(unselectable()),\n      pageSize: process.stdout.rows - 2\n    }\n  ];\n\n  const answers: IDepsToUpgradeAnswers = (await inquirer.prompt(promptQuestions)) as IDepsToUpgradeAnswers;\n\n  return answers;\n};\n"]}