{"version":3,"file":"objectUtilities.js","sourceRoot":"","sources":["../../src/utilities/objectUtilities.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D;;GAEG;AACH,SAAgB,mBAAmB,CAAU,CAAU,EAAE,CAAU;IACjE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;SAAM,CAAC;QACN,MAAM,KAAK,GAAW,OAAO,CAAC,CAAC;QAC/B,MAAM,KAAK,GAAW,OAAO,CAAC,CAAC;QAC/B,IAAI,KAAK,KAAK,KAAK,EAAE,CAAC;YACpB,OAAO,KAAK,CAAC;QACf,CAAC;aAAM,CAAC;YACN,IAAI,KAAK,KAAK,QAAQ,EAAE,CAAC;gBACvB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;oBAC7B,sFAAsF;oBACtF,OAAO,KAAK,CAAC;gBACf,CAAC;qBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;oBAC5B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;wBAC/C,OAAO,KAAK,CAAC;oBACf,CAAC;yBAAM,CAAC;wBACN,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;4BAC1C,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gCACrC,OAAO,KAAK,CAAC;4BACf,CAAC;wBACH,CAAC;wBAED,OAAO,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,MAAM,iBAAiB,GAAgB,IAAI,GAAG,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9E,MAAM,iBAAiB,GAAgB,IAAI,GAAG,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9E,IAAI,iBAAiB,CAAC,IAAI,KAAK,iBAAiB,CAAC,IAAI,EAAE,CAAC;wBACtD,OAAO,KAAK,CAAC;oBACf,CAAC;yBAAM,CAAC;wBACN,KAAK,MAAM,QAAQ,IAAI,iBAAiB,EAAE,CAAC;4BACzC,IAAI,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;gCACvC,IACE,CAAC,mBAAmB,CACjB,CAA6B,CAAC,QAAQ,CAAC,EACvC,CAA6B,CAAC,QAAQ,CAAC,CACzC,EACD,CAAC;oCACD,OAAO,KAAK,CAAC;gCACf,CAAC;4BACH,CAAC;iCAAM,CAAC;gCACN,OAAO,KAAK,CAAC;4BACf,CAAC;wBACH,CAAC;wBAED,OAAO,iBAAiB,CAAC,IAAI,KAAK,CAAC,CAAC;oBACtC,CAAC;gBACH,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;AAtDD,kDAsDC;AAED,SAAgB,SAAS,CAAU,GAAY;IAC7C,OAAO,cAAc,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AACxC,CAAC;AAFD,8BAEC;AAED,SAAgB,KAAK,CAA+B,IAAW,EAAE,KAAa;IAC5E,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;QACzE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACjD,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;gBAChB,MAAM,SAAS,GAAa,IAAgC,CAAC,GAAG,CAAC,CAAC;gBAClE,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;oBACpF,IAAgC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBACnE,CAAC;qBAAM,CAAC;oBACL,IAAgC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;gBACjD,CAAC;YACH,CAAC;iBAAM,CAAC;gBACL,IAAgC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YACjD,CAAC;QACH,CAAC;QAED,OAAO,IAAsB,CAAC;IAChC,CAAC;SAAM,CAAC;QACN,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC;AAnBD,sBAmBC;AAED,SAAS,cAAc,CAAU,GAAY,EAAE,WAAyB;IACtE,IAAI,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACjD,CAAC;SAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;QACnC,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;YACjB,OAAO,IAAe,CAAC;QACzB,CAAC;aAAM,CAAC;YACN,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBACvB,MAAM,MAAM,GAAc,EAAE,CAAC;gBAC7B,KAAK,MAAM,IAAI,IAAI,GAAG,EAAE,CAAC;oBACvB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC1D,CAAC;gBAED,OAAO,MAAiB,CAAC;YAC3B,CAAC;iBAAM,CAAC;gBACN,MAAM,MAAM,GAA4B,EAAE,CAAC;gBAC3C,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAE,CAAC;oBAClD,MAAM,KAAK,GAAa,GAA+B,CAAC,GAAG,CAAC,CAAC;oBAC7D,MAAM,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC5D,CAAC;gBAED,OAAO,MAAiB,CAAC;YAC3B,CAAC;QACH,CAAC;IACH,CAAC;SAAM,CAAC;QACN,OAAO,GAAG,CAAC;IACb,CAAC;AACH,CAAC;AAED;;;GAGG;AACH,SAAgB,OAAO,CAAU,GAAY,EAAE,MAAe;IAC5D,OAAO,GAAG,KAAK,MAAM,IAAI,CAAC,OAAO,GAAG,KAAK,OAAO,MAAM,IAAI,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;AACvF,CAAC;AAFD,0BAEC;AAED,SAAS,YAAY,CAAU,GAAY,EAAE,MAAe;IAC1D,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;QACtC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAgB,CAAC,EAAE,CAAC;QAC9C,MAAM,GAAG,GAAkB,CAAkB,CAAC;QAC9C,MAAM,WAAW,GAAY,MAAM,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,kBAAkB,CAAC,WAAW,CAAC,EAAE,CAAC;YACpC,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE,CAAC;gBAC7B,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;aAAM,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC;YAChD,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;GAEG;AACH,SAAS,kBAAkB,CAAI,KAAQ;IACrC,MAAM,IAAI,GAAW,OAAO,KAAK,CAAC;IAClC,OAAO;IACL,2CAA2C;IAC3C,KAAK,KAAK,KAAK,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,UAAU,CAAC,CAAC,CAC1G,CAAC;AACJ,CAAC;AAED;;;;;GAKG;AACH,SAAgB,kBAAkB,CAAmB,GAAM;IACzD,MAAM,MAAM,GAAe,EAAE,CAAC;IAC9B,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;QACtB,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;YAC5B,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC;gBAChD,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAVD,gDAUC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * Determines if two objects are deeply equal.\n */\nexport function objectsAreDeepEqual<TObject>(a: TObject, b: TObject): boolean {\n  if (a === b) {\n    return true;\n  } else {\n    const aType: string = typeof a;\n    const bType: string = typeof b;\n    if (aType !== bType) {\n      return false;\n    } else {\n      if (aType === 'object') {\n        if (a === null || b === null) {\n          // We already handled the case where a === b, so if either is null, they are not equal\n          return false;\n        } else if (Array.isArray(a)) {\n          if (!Array.isArray(b) || a.length !== b.length) {\n            return false;\n          } else {\n            for (let i: number = 0; i < a.length; ++i) {\n              if (!objectsAreDeepEqual(a[i], b[i])) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n        } else {\n          const aObjectProperties: Set<string> = new Set(Object.getOwnPropertyNames(a));\n          const bObjectProperties: Set<string> = new Set(Object.getOwnPropertyNames(b));\n          if (aObjectProperties.size !== bObjectProperties.size) {\n            return false;\n          } else {\n            for (const property of aObjectProperties) {\n              if (bObjectProperties.delete(property)) {\n                if (\n                  !objectsAreDeepEqual(\n                    (a as Record<string, unknown>)[property],\n                    (b as Record<string, unknown>)[property]\n                  )\n                ) {\n                  return false;\n                }\n              } else {\n                return false;\n              }\n            }\n\n            return bObjectProperties.size === 0;\n          }\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n}\n\nexport function cloneDeep<TObject>(obj: TObject): TObject {\n  return cloneDeepInner(obj, new Set());\n}\n\nexport function merge<TBase extends object, TOther>(base: TBase, other: TOther): (TBase & TOther) | TOther {\n  if (typeof other === 'object' && other !== null && !Array.isArray(other)) {\n    for (const [key, value] of Object.entries(other)) {\n      if (key in base) {\n        const baseValue: unknown = (base as Record<string, unknown>)[key];\n        if (typeof baseValue === 'object' && baseValue !== null && !Array.isArray(baseValue)) {\n          (base as Record<string, unknown>)[key] = merge(baseValue, value);\n        } else {\n          (base as Record<string, unknown>)[key] = value;\n        }\n      } else {\n        (base as Record<string, unknown>)[key] = value;\n      }\n    }\n\n    return base as TBase & TOther;\n  } else {\n    return other;\n  }\n}\n\nfunction cloneDeepInner<TObject>(obj: TObject, seenObjects: Set<unknown>): TObject {\n  if (seenObjects.has(obj)) {\n    throw new Error('Circular reference detected');\n  } else if (typeof obj === 'object') {\n    if (obj === null) {\n      return null as TObject;\n    } else {\n      seenObjects.add(obj);\n      if (Array.isArray(obj)) {\n        const result: unknown[] = [];\n        for (const item of obj) {\n          result.push(cloneDeepInner(item, new Set(seenObjects)));\n        }\n\n        return result as TObject;\n      } else {\n        const result: Record<string, unknown> = {};\n        for (const key of Object.getOwnPropertyNames(obj)) {\n          const value: unknown = (obj as Record<string, unknown>)[key];\n          result[key] = cloneDeepInner(value, new Set(seenObjects));\n        }\n\n        return result as TObject;\n      }\n    }\n  } else {\n    return obj;\n  }\n}\n\n/**\n * Performs a partial deep comparison between `obj` and `source` to\n * determine if `obj` contains equivalent property values.\n */\nexport function isMatch<TObject>(obj: TObject, source: TObject): boolean {\n  return obj === source || (typeof obj === typeof source && isMatchInner(obj, source));\n}\n\nfunction isMatchInner<TObject>(obj: TObject, source: TObject): boolean {\n  if (obj === null || obj === undefined) {\n    return false;\n  }\n\n  for (const k of Object.keys(source as object)) {\n    const key: keyof TObject = k as keyof TObject;\n    const sourceValue: unknown = source[key];\n    if (isStrictComparable(sourceValue)) {\n      if (obj[key] !== sourceValue) {\n        return false;\n      }\n    } else if (!isMatchInner(obj[key], sourceValue)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Check if `value` is suitable for strict equality comparisons, i.e. `===`.\n */\nfunction isStrictComparable<T>(value: T): boolean {\n  const type: string = typeof value;\n  return (\n    // eslint-disable-next-line no-self-compare\n    value === value && !(value !== null && value !== undefined && (type === 'object' || type === 'function'))\n  );\n}\n\n/**\n * Removes `undefined` and `null` direct properties from an object.\n *\n * @remarks\n * Note that this does not recurse through sub-objects.\n */\nexport function removeNullishProps<T extends object>(obj: T): Partial<T> {\n  const result: Partial<T> = {};\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] !== undefined && obj[key] !== null) {\n        result[key] = obj[key];\n      }\n    }\n  }\n  return result;\n}\n"]}