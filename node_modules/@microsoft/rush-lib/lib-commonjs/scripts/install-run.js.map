{"version":3,"file":"install-run.js","sourceRoot":"","sources":["../../src/scripts/install-run.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/* eslint-disable no-console */\n\nimport * as childProcess from 'child_process';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport type { IPackageJson } from '@rushstack/node-core-library';\nimport { syncNpmrc, type ILogger } from '../utilities/npmrcUtilities';\nimport type { RushConstants } from '../logic/RushConstants';\n\nexport const RUSH_JSON_FILENAME: typeof RushConstants.rushJsonFilename = 'rush.json';\nconst RUSH_TEMP_FOLDER_ENV_VARIABLE_NAME: string = 'RUSH_TEMP_FOLDER';\nconst INSTALL_RUN_LOCKFILE_PATH_VARIABLE: 'INSTALL_RUN_LOCKFILE_PATH' = 'INSTALL_RUN_LOCKFILE_PATH';\nconst INSTALLED_FLAG_FILENAME: string = 'installed.flag';\nconst NODE_MODULES_FOLDER_NAME: string = 'node_modules';\nconst PACKAGE_JSON_FILENAME: string = 'package.json';\n\n/**\n * Parse a package specifier (in the form of name\\@version) into name and version parts.\n */\nfunction _parsePackageSpecifier(rawPackageSpecifier: string): IPackageSpecifier {\n  rawPackageSpecifier = (rawPackageSpecifier || '').trim();\n  const separatorIndex: number = rawPackageSpecifier.lastIndexOf('@');\n\n  let name: string;\n  let version: string | undefined = undefined;\n  if (separatorIndex === 0) {\n    // The specifier starts with a scope and doesn't have a version specified\n    name = rawPackageSpecifier;\n  } else if (separatorIndex === -1) {\n    // The specifier doesn't have a version\n    name = rawPackageSpecifier;\n  } else {\n    name = rawPackageSpecifier.substring(0, separatorIndex);\n    version = rawPackageSpecifier.substring(separatorIndex + 1);\n  }\n\n  if (!name) {\n    throw new Error(`Invalid package specifier: ${rawPackageSpecifier}`);\n  }\n\n  return { name, version };\n}\n\nlet _npmPath: string | undefined = undefined;\n\n/**\n * Get the absolute path to the npm executable\n */\nexport function getNpmPath(): string {\n  if (!_npmPath) {\n    try {\n      if (_isWindows()) {\n        // We're on Windows\n        const whereOutput: string = childProcess.execSync('where npm', { stdio: [] }).toString();\n        const lines: string[] = whereOutput.split(os.EOL).filter((line) => !!line);\n\n        // take the last result, we are looking for a .cmd command\n        // see https://github.com/microsoft/rushstack/issues/759\n        _npmPath = lines[lines.length - 1];\n      } else {\n        // We aren't on Windows - assume we're on *NIX or Darwin\n        _npmPath = childProcess.execSync('command -v npm', { stdio: [] }).toString();\n      }\n    } catch (e) {\n      throw new Error(`Unable to determine the path to the NPM tool: ${e}`);\n    }\n\n    _npmPath = _npmPath.trim();\n    if (!fs.existsSync(_npmPath)) {\n      throw new Error('The NPM executable does not exist');\n    }\n  }\n\n  return _npmPath;\n}\n\nfunction _ensureFolder(folderPath: string): void {\n  if (!fs.existsSync(folderPath)) {\n    const parentDir: string = path.dirname(folderPath);\n    _ensureFolder(parentDir);\n    fs.mkdirSync(folderPath);\n  }\n}\n\n/**\n * Create missing directories under the specified base directory, and return the resolved directory.\n *\n * Does not support \".\" or \"..\" path segments.\n * Assumes the baseFolder exists.\n */\nfunction _ensureAndJoinPath(baseFolder: string, ...pathSegments: string[]): string {\n  let joinedPath: string = baseFolder;\n  try {\n    for (let pathSegment of pathSegments) {\n      pathSegment = pathSegment.replace(/[\\\\\\/]/g, '+');\n      joinedPath = path.join(joinedPath, pathSegment);\n      if (!fs.existsSync(joinedPath)) {\n        fs.mkdirSync(joinedPath);\n      }\n    }\n  } catch (e) {\n    throw new Error(\n      `Error building local installation folder (${path.join(baseFolder, ...pathSegments)}): ${e}`\n    );\n  }\n\n  return joinedPath;\n}\n\nfunction _getRushTempFolder(rushCommonFolder: string): string {\n  const rushTempFolder: string | undefined = process.env[RUSH_TEMP_FOLDER_ENV_VARIABLE_NAME];\n  if (rushTempFolder !== undefined) {\n    _ensureFolder(rushTempFolder);\n    return rushTempFolder;\n  } else {\n    return _ensureAndJoinPath(rushCommonFolder, 'temp');\n  }\n}\n\nexport interface IPackageSpecifier {\n  name: string;\n  version: string | undefined;\n}\n\n/**\n * Compare version strings according to semantic versioning.\n * Returns a positive integer if \"a\" is a later version than \"b\",\n * a negative integer if \"b\" is later than \"a\",\n * and 0 otherwise.\n */\nfunction _compareVersionStrings(a: string, b: string): number {\n  const aParts: string[] = a.split(/[.-]/);\n  const bParts: string[] = b.split(/[.-]/);\n  const numberOfParts: number = Math.max(aParts.length, bParts.length);\n  for (let i: number = 0; i < numberOfParts; i++) {\n    if (aParts[i] !== bParts[i]) {\n      return (Number(aParts[i]) || 0) - (Number(bParts[i]) || 0);\n    }\n  }\n  return 0;\n}\n\n/**\n * Resolve a package specifier to a static version\n */\nfunction _resolvePackageVersion(\n  logger: ILogger,\n  rushCommonFolder: string,\n  { name, version }: IPackageSpecifier\n): string {\n  if (!version) {\n    version = '*'; // If no version is specified, use the latest version\n  }\n\n  if (version.match(/^[a-zA-Z0-9\\-\\+\\.]+$/)) {\n    // If the version contains only characters that we recognize to be used in static version specifiers,\n    // pass the version through\n    return version;\n  } else {\n    // version resolves to\n    try {\n      const rushTempFolder: string = _getRushTempFolder(rushCommonFolder);\n      const sourceNpmrcFolder: string = path.join(rushCommonFolder, 'config', 'rush');\n\n      syncNpmrc({\n        sourceNpmrcFolder,\n        targetNpmrcFolder: rushTempFolder,\n        logger,\n        supportEnvVarFallbackSyntax: false\n      });\n\n      const npmPath: string = getNpmPath();\n\n      // This returns something that looks like:\n      // ```\n      // [\n      //   \"3.0.0\",\n      //   \"3.0.1\",\n      //   ...\n      //   \"3.0.20\"\n      // ]\n      // ```\n      //\n      // if multiple versions match the selector, or\n      //\n      // ```\n      // \"3.0.0\"\n      // ```\n      //\n      // if only a single version matches.\n\n      const spawnSyncOptions: childProcess.SpawnSyncOptions = {\n        cwd: rushTempFolder,\n        stdio: [],\n        shell: _isWindows()\n      };\n      const platformNpmPath: string = _getPlatformPath(npmPath);\n      const npmVersionSpawnResult: childProcess.SpawnSyncReturns<Buffer | string> = childProcess.spawnSync(\n        platformNpmPath,\n        ['view', `${name}@${version}`, 'version', '--no-update-notifier', '--json'],\n        spawnSyncOptions\n      );\n\n      if (npmVersionSpawnResult.status !== 0) {\n        throw new Error(`\"npm view\" returned error code ${npmVersionSpawnResult.status}`);\n      }\n\n      const npmViewVersionOutput: string = npmVersionSpawnResult.stdout.toString();\n      const parsedVersionOutput: string | string[] = JSON.parse(npmViewVersionOutput);\n      const versions: string[] = Array.isArray(parsedVersionOutput)\n        ? parsedVersionOutput\n        : [parsedVersionOutput];\n      let latestVersion: string | undefined = versions[0];\n      for (let i: number = 1; i < versions.length; i++) {\n        const latestVersionCandidate: string = versions[i];\n        if (_compareVersionStrings(latestVersionCandidate, latestVersion) > 0) {\n          latestVersion = latestVersionCandidate;\n        }\n      }\n\n      if (!latestVersion) {\n        throw new Error('No versions found for the specified version range.');\n      }\n\n      return latestVersion;\n    } catch (e) {\n      throw new Error(`Unable to resolve version ${version} of package ${name}: ${e}`);\n    }\n  }\n}\n\nlet _rushJsonFolder: string | undefined;\n/**\n * Find the absolute path to the folder containing rush.json\n */\nexport function findRushJsonFolder(): string {\n  if (!_rushJsonFolder) {\n    let basePath: string = __dirname;\n    let tempPath: string = __dirname;\n    do {\n      const testRushJsonPath: string = path.join(basePath, RUSH_JSON_FILENAME);\n      if (fs.existsSync(testRushJsonPath)) {\n        _rushJsonFolder = basePath;\n        break;\n      } else {\n        basePath = tempPath;\n      }\n    } while (basePath !== (tempPath = path.dirname(basePath))); // Exit the loop when we hit the disk root\n\n    if (!_rushJsonFolder) {\n      throw new Error(`Unable to find ${RUSH_JSON_FILENAME}.`);\n    }\n  }\n\n  return _rushJsonFolder;\n}\n\n/**\n * Detects if the package in the specified directory is installed\n */\nfunction _isPackageAlreadyInstalled(packageInstallFolder: string): boolean {\n  try {\n    const flagFilePath: string = path.join(packageInstallFolder, INSTALLED_FLAG_FILENAME);\n    if (!fs.existsSync(flagFilePath)) {\n      return false;\n    }\n\n    const fileContents: string = fs.readFileSync(flagFilePath).toString();\n    return fileContents.trim() === process.version;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Delete a file. Fail silently if it does not exist.\n */\nfunction _deleteFile(file: string): void {\n  try {\n    fs.unlinkSync(file);\n  } catch (err) {\n    if (err.code !== 'ENOENT' && err.code !== 'ENOTDIR') {\n      throw err;\n    }\n  }\n}\n\n/**\n * Removes the following files and directories under the specified folder path:\n *  - installed.flag\n *  -\n *  - node_modules\n */\nfunction _cleanInstallFolder(\n  rushTempFolder: string,\n  packageInstallFolder: string,\n  lockFilePath: string | undefined\n): void {\n  try {\n    const flagFile: string = path.resolve(packageInstallFolder, INSTALLED_FLAG_FILENAME);\n    _deleteFile(flagFile);\n\n    const packageLockFile: string = path.resolve(packageInstallFolder, 'package-lock.json');\n    if (lockFilePath) {\n      fs.copyFileSync(lockFilePath, packageLockFile);\n    } else {\n      // Not running `npm ci`, so need to cleanup\n      _deleteFile(packageLockFile);\n\n      const nodeModulesFolder: string = path.resolve(packageInstallFolder, NODE_MODULES_FOLDER_NAME);\n      if (fs.existsSync(nodeModulesFolder)) {\n        const rushRecyclerFolder: string = _ensureAndJoinPath(rushTempFolder, 'rush-recycler');\n\n        fs.renameSync(\n          nodeModulesFolder,\n          path.join(rushRecyclerFolder, `install-run-${Date.now().toString()}`)\n        );\n      }\n    }\n  } catch (e) {\n    throw new Error(`Error cleaning the package install folder (${packageInstallFolder}): ${e}`);\n  }\n}\n\nfunction _createPackageJson(packageInstallFolder: string, name: string, version: string): void {\n  try {\n    const packageJsonContents: IPackageJson = {\n      name: 'ci-rush',\n      version: '0.0.0',\n      dependencies: {\n        [name]: version\n      },\n      description: \"DON'T WARN\",\n      repository: \"DON'T WARN\",\n      license: 'MIT'\n    };\n\n    const packageJsonPath: string = path.join(packageInstallFolder, PACKAGE_JSON_FILENAME);\n    fs.writeFileSync(packageJsonPath, JSON.stringify(packageJsonContents, undefined, 2));\n  } catch (e) {\n    throw new Error(`Unable to create package.json: ${e}`);\n  }\n}\n\n/**\n * Run \"npm install\" in the package install folder.\n */\nfunction _installPackage(\n  logger: ILogger,\n  packageInstallFolder: string,\n  name: string,\n  version: string,\n  command: 'install' | 'ci'\n): void {\n  try {\n    logger.info(`Installing ${name}...`);\n    const npmPath: string = getNpmPath();\n    const platformNpmPath: string = _getPlatformPath(npmPath);\n    const result: childProcess.SpawnSyncReturns<Buffer> = childProcess.spawnSync(platformNpmPath, [command], {\n      stdio: 'inherit',\n      cwd: packageInstallFolder,\n      env: process.env,\n      shell: _isWindows()\n    });\n\n    if (result.status !== 0) {\n      throw new Error(`\"npm ${command}\" encountered an error`);\n    }\n\n    logger.info(`Successfully installed ${name}@${version}`);\n  } catch (e) {\n    throw new Error(`Unable to install package: ${e}`);\n  }\n}\n\n/**\n * Get the \".bin\" path for the package.\n */\nfunction _getBinPath(packageInstallFolder: string, binName: string): string {\n  const binFolderPath: string = path.resolve(packageInstallFolder, NODE_MODULES_FOLDER_NAME, '.bin');\n  const resolvedBinName: string = _isWindows() ? `${binName}.cmd` : binName;\n  return path.resolve(binFolderPath, resolvedBinName);\n}\n\n/**\n * Returns a cross-platform path - windows must enclose any path containing spaces within double quotes.\n */\nfunction _getPlatformPath(platformPath: string): string {\n  return _isWindows() && platformPath.includes(' ') ? `\"${platformPath}\"` : platformPath;\n}\n\nfunction _isWindows(): boolean {\n  return os.platform() === 'win32';\n}\n\n/**\n * Write a flag file to the package's install directory, signifying that the install was successful.\n */\nfunction _writeFlagFile(packageInstallFolder: string): void {\n  try {\n    const flagFilePath: string = path.join(packageInstallFolder, INSTALLED_FLAG_FILENAME);\n    fs.writeFileSync(flagFilePath, process.version);\n  } catch (e) {\n    throw new Error(`Unable to create installed.flag file in ${packageInstallFolder}`);\n  }\n}\n\nexport function installAndRun(\n  logger: ILogger,\n  packageName: string,\n  packageVersion: string,\n  packageBinName: string,\n  packageBinArgs: string[],\n  lockFilePath: string | undefined = process.env[INSTALL_RUN_LOCKFILE_PATH_VARIABLE]\n): number {\n  const rushJsonFolder: string = findRushJsonFolder();\n  const rushCommonFolder: string = path.join(rushJsonFolder, 'common');\n  const rushTempFolder: string = _getRushTempFolder(rushCommonFolder);\n  const packageInstallFolder: string = _ensureAndJoinPath(\n    rushTempFolder,\n    'install-run',\n    `${packageName}@${packageVersion}`\n  );\n\n  if (!_isPackageAlreadyInstalled(packageInstallFolder)) {\n    // The package isn't already installed\n    _cleanInstallFolder(rushTempFolder, packageInstallFolder, lockFilePath);\n\n    const sourceNpmrcFolder: string = path.join(rushCommonFolder, 'config', 'rush');\n    syncNpmrc({\n      sourceNpmrcFolder,\n      targetNpmrcFolder: packageInstallFolder,\n      logger,\n      supportEnvVarFallbackSyntax: false\n    });\n\n    _createPackageJson(packageInstallFolder, packageName, packageVersion);\n    const command: 'install' | 'ci' = lockFilePath ? 'ci' : 'install';\n    _installPackage(logger, packageInstallFolder, packageName, packageVersion, command);\n    _writeFlagFile(packageInstallFolder);\n  }\n\n  const statusMessage: string = `Invoking \"${packageBinName} ${packageBinArgs.join(' ')}\"`;\n  const statusMessageLine: string = new Array(statusMessage.length + 1).join('-');\n  logger.info('\\n' + statusMessage + '\\n' + statusMessageLine + '\\n');\n\n  const binPath: string = _getBinPath(packageInstallFolder, packageBinName);\n  const binFolderPath: string = path.resolve(packageInstallFolder, NODE_MODULES_FOLDER_NAME, '.bin');\n\n  // Windows environment variables are case-insensitive.  Instead of using SpawnSyncOptions.env, we need to\n  // assign via the process.env proxy to ensure that we append to the right PATH key.\n  const originalEnvPath: string = process.env.PATH || '';\n  let result: childProcess.SpawnSyncReturns<Buffer>;\n  try {\n    // `npm` bin stubs on Windows are `.cmd` files\n    // Node.js will not directly invoke a `.cmd` file unless `shell` is set to `true`\n    const platformBinPath: string = _getPlatformPath(binPath);\n\n    process.env.PATH = [binFolderPath, originalEnvPath].join(path.delimiter);\n    result = childProcess.spawnSync(platformBinPath, packageBinArgs, {\n      stdio: 'inherit',\n      windowsVerbatimArguments: false,\n      shell: _isWindows(),\n      cwd: process.cwd(),\n      env: process.env\n    });\n  } finally {\n    process.env.PATH = originalEnvPath;\n  }\n  if (result.status !== null) {\n    return result.status;\n  } else {\n    throw result.error || new Error('An unknown error occurred.');\n  }\n}\n\nexport function runWithErrorAndStatusCode(logger: ILogger, fn: () => number): void {\n  process.exitCode = 1;\n\n  try {\n    const exitCode: number = fn();\n    process.exitCode = exitCode;\n  } catch (e) {\n    logger.error('\\n\\n' + (e as Error).toString() + '\\n\\n');\n  }\n}\n\nfunction _run(): void {\n  const [\n    nodePath /* Ex: /bin/node */,\n    scriptPath /* /repo/common/scripts/install-run-rush.js */,\n    rawPackageSpecifier /* qrcode@^1.2.0 */,\n    packageBinName /* qrcode */,\n    ...packageBinArgs /* [-f, myproject/lib] */\n  ]: string[] = process.argv;\n\n  if (!nodePath) {\n    throw new Error('Unexpected exception: could not detect node path');\n  }\n\n  if (path.basename(scriptPath).toLowerCase() !== 'install-run.js') {\n    // If install-run.js wasn't directly invoked, don't execute the rest of this function. Return control\n    // to the script that (presumably) imported this file\n\n    return;\n  }\n\n  if (process.argv.length < 4) {\n    console.log('Usage: install-run.js <package>@<version> <command> [args...]');\n    console.log('Example: install-run.js qrcode@1.2.2 qrcode https://rushjs.io');\n    process.exit(1);\n  }\n\n  const logger: ILogger = { info: console.log, error: console.error };\n\n  runWithErrorAndStatusCode(logger, () => {\n    const rushJsonFolder: string = findRushJsonFolder();\n    const rushCommonFolder: string = _ensureAndJoinPath(rushJsonFolder, 'common');\n\n    const packageSpecifier: IPackageSpecifier = _parsePackageSpecifier(rawPackageSpecifier);\n    const name: string = packageSpecifier.name;\n    const version: string = _resolvePackageVersion(logger, rushCommonFolder, packageSpecifier);\n\n    if (packageSpecifier.version !== version) {\n      console.log(`Resolved to ${name}@${version}`);\n    }\n\n    return installAndRun(logger, name, version, packageBinName, packageBinArgs);\n  });\n}\n\n_run();\n"]}