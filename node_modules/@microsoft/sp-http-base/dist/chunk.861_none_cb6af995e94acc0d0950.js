/*! For license information please see chunk.861_none_5fe53d810fca7ded79a6.js.LICENSE.txt */
"use strict";(self["webpackJsonp_8496636c-2300-4915-abef-20de64c98d8b_1.21.1_"]=self["webpackJsonp_8496636c-2300-4915-abef-20de64c98d8b_1.21.1_"]||[]).push([[861],{6861:(e,t,n)=>{n.d(t,{Sq:()=>qo,Ui:()=>Qo});var a=n(4207),i=n(9825);const r="AAD",o="OIDC",s="none";var c=n(6295);const d="client_info_decoding_error",l="client_info_empty_error",u="token_parsing_error",f="null_or_empty_token",p="endpoints_resolution_error",m="network_error",_="openid_config_error",h="hash_not_deserialized",b="invalid_state",g="state_mismatch",v="state_not_found",y="nonce_mismatch",S="auth_time_not_found",D="max_age_transpired",I="multiple_matching_appMetadata",x="request_cannot_be_made",C="cannot_remove_empty_scope",O="cannot_append_scopeset",w="empty_input_scopeset",E="no_account_in_silent_request",A="invalid_cache_record",L="invalid_cache_environment",k="no_account_found",M="no_crypto_object",P="unexpected_credential_type",T="token_refresh_required",U="token_claims_cnf_required_for_signedjwt",F="authorization_code_missing_from_server_response",H="binding_key_not_removed",R="end_session_endpoint_not_supported",N="key_id_missing",B="no_network_connectivity",j="user_canceled",V="method_not_implemented",z="nested_app_auth_bridge_disabled",G={[d]:"The client info could not be parsed/decoded correctly",[l]:"The client info was empty",[u]:"Token cannot be parsed",[f]:"The token is null or empty",[p]:"Endpoints cannot be resolved",[m]:"Network request failed",[_]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[h]:"The hash parameters could not be deserialized",[b]:"State was not the expected format",[g]:"State mismatch error",[v]:"State not found",[y]:"Nonce mismatch error",[S]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[D]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",multiple_matching_tokens:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",multiple_matching_accounts:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[I]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[x]:"Token request cannot be made without authorization code or refresh token.",[C]:"Cannot remove null or empty scope from ScopeSet",[O]:"Cannot append ScopeSet",[w]:"Empty input ScopeSet cannot be processed",device_code_polling_cancelled:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",device_code_expired:"Device code is expired.",device_code_unknown_error:"Device code stopped polling for unknown reasons.",[E]:"Please pass an account object, silent flow is not supported without account information",[A]:"Cache record object was null or undefined.",[L]:"Invalid environment when attempting to create cache entry",[k]:"No account found in cache for given key.",[M]:"No crypto object detected.",[P]:"Unexpected credential type.",invalid_assertion:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",invalid_client_credential:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[T]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",user_timeout_reached:"User defined timeout for device code polling reached",[U]:"Cannot generate a POP jwt if the token_claims are not populated",[F]:"Server response does not contain an authorization code to proceed",[H]:"Could not remove the credential's binding key from storage.",[R]:"The provided authority does not support logout",[N]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[B]:"No network connectivity. Check your internet connection.",[j]:"User cancelled the flow.",missing_tenant_id_error:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[V]:"This method has not been implemented",[z]:"The nested app auth bridge is disabled"};class K extends c.uR{constructor(e,t){super(e,t?`${G[e]}: ${t}`:G[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,K.prototype)}}function W(e,t){return new K(e,t)}const q={createNewGuid:()=>{throw W(V)},base64Decode:()=>{throw W(V)},base64Encode:()=>{throw W(V)},base64UrlEncode:()=>{throw W(V)},encodeKid:()=>{throw W(V)},async getPublicKeyThumbprint(){throw W(V)},async removeTokenBindingKey(){throw W(V)},async clearKeystore(){throw W(V)},async signJwt(){throw W(V)},async hashString(){throw W(V)}},Q="@azure/msal-common",Y="14.16.0";function J(e,t){const n=function(e){if(!e)throw W(f);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw W(u);return t[2]}(e);try{const e=t(n);return JSON.parse(e)}catch(e){throw W(u)}}function X(e,t){if(0===t||Date.now()-3e5>e+t)throw W(D)}function Z(){return Math.round((new Date).getTime()/1e3)}function $(e,t){const n=Number(e)||0;return Z()+t>n}function ee(e){return Number(e)>Z()}function te(e){return[de(e),le(e),ue(e),fe(e),pe(e)].join(i.HR.CACHE_KEY_SEPARATOR).toLowerCase()}function ne(e,t,n,a,r){return{credentialType:i.eG.ID_TOKEN,homeAccountId:e,environment:t,clientId:a,secret:n,realm:r}}function ae(e,t,n,a,r,o,s,c,d,l,u,f,p,m,_){const h={homeAccountId:e,credentialType:i.eG.ACCESS_TOKEN,secret:n,cachedAt:Z().toString(),expiresOn:s.toString(),extendedExpiresOn:c.toString(),environment:t,clientId:a,realm:r,target:o,tokenType:u||i.TO.BEARER};if(f&&(h.userAssertionHash=f),l&&(h.refreshOn=l.toString()),m&&(h.requestedClaims=m,h.requestedClaimsHash=_),h.tokenType?.toLowerCase()!==i.TO.BEARER.toLowerCase())switch(h.credentialType=i.eG.ACCESS_TOKEN_WITH_AUTH_SCHEME,h.tokenType){case i.TO.POP:const e=J(n,d);if(!e?.cnf?.kid)throw W(U);h.keyId=e.cnf.kid;break;case i.TO.SSH:h.keyId=p}return h}function ie(e,t,n,a,r,o,s){const c={credentialType:i.eG.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:a,secret:n};return o&&(c.userAssertionHash=o),r&&(c.familyId=r),s&&(c.expiresOn=s.toString()),c}function re(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function oe(e){return!!e&&re(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===i.eG.ACCESS_TOKEN||e.credentialType===i.eG.ACCESS_TOKEN_WITH_AUTH_SCHEME)}function se(e){return!!e&&re(e)&&e.hasOwnProperty("realm")&&e.credentialType===i.eG.ID_TOKEN}function ce(e){return!!e&&re(e)&&e.credentialType===i.eG.REFRESH_TOKEN}function de(e){return[e.homeAccountId,e.environment].join(i.HR.CACHE_KEY_SEPARATOR).toLowerCase()}function le(e){const t=e.credentialType===i.eG.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(i.HR.CACHE_KEY_SEPARATOR).toLowerCase()}function ue(e){return(e.target||"").toLowerCase()}function fe(e){return(e.requestedClaimsHash||"").toLowerCase()}function pe(e){return e.tokenType&&e.tokenType.toLowerCase()!==i.TO.BEARER.toLowerCase()?e.tokenType.toLowerCase():""}function me(){return Z()+i.y0.REFRESH_TIME_SECONDS}function _e(e,t,n){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=n,e.jwks_uri=t.jwks_uri}function he(e,t,n){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=n}function be(e){return e.expiresAt<=Z()}const ge="redirect_uri_empty",ve="authority_uri_insecure",ye="url_parse_error",Se="empty_url_error",De="empty_input_scopes_error",Ie="invalid_prompt_value",xe="invalid_claims",Ce="token_request_empty",Oe="logout_request_empty",we="invalid_code_challenge_method",Ee="pkce_params_missing",Ae="invalid_cloud_discovery_metadata",Le="invalid_authority_metadata",ke="untrusted_authority",Me="missing_ssh_jwk",Pe="missing_ssh_kid",Te="cannot_set_OIDCOptions",Ue="cannot_allow_native_broker",Fe="authority_mismatch",He={[ge]:"A redirect URI is required for all calls, and none has been set.",claims_request_parsing_error:"Could not parse the given claims request object.",[ve]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[ye]:"URL could not be parsed into appropriate segments.",[Se]:"URL was empty or null.",[De]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Ie]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[xe]:"Given claims parameter must be a stringified JSON object.",[Ce]:"Token request was empty and not found in cache.",[Oe]:"The logout request was null or undefined.",[we]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[Ee]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[Ae]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[Le]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[ke]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[Me]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[Pe]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",missing_nonce_authentication_header:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",invalid_authentication_header:"Invalid authentication header provided",[Te]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Ue]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[Fe]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class Re extends c.uR{constructor(e){super(e,He[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,Re.prototype)}}function Ne(e){return new Re(e)}class Be{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),a=e=>decodeURIComponent(e.replace(/\+/g," "));return n.forEach(e=>{if(e.trim()){const[n,i]=e.split(/=(.+)/g,2);n&&i&&(t[a(n)]=a(i))}}),t}static trimArrayEntries(e){return e.map(e=>e.trim())}static removeEmptyStringsFromArray(e){return e.filter(e=>!!e)}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}class je{constructor(e){const t=e?Be.trimArrayEntries([...e]):[],n=t?Be.removeEmptyStringsFromArray(t):[];this.validateInputScopes(n),this.scopes=new Set,n.forEach(e=>this.scopes.add(e))}static fromString(e){const t=(e||i.JM.EMPTY_STRING).split(" ");return new je(t)}static createSearchScopes(e){const t=new je(e);return t.containsOnlyOIDCScopes()?t.removeScope(i.JM.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw Ne(De)}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new je(t);return!!e&&n.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every(e=>this.containsScope(e))}containsOnlyOIDCScopes(){let e=0;return i.ZA.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(e=>this.appendScope(e))}catch(e){throw W(O)}}removeScope(e){if(!e)throw W(C);this.scopes.delete(e.trim())}removeOIDCScopes(){i.ZA.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw W(w);const t=new Set;return e.scopes.forEach(e=>t.add(e.toLowerCase())),this.scopes.forEach(e=>t.add(e.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw W(w);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),a=this.getScopeCount();return t.size<a+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):i.JM.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function Ve(e,t){if(!e)throw W(l);try{const n=t(e);return JSON.parse(n)}catch(e){throw W(d)}}function ze(e){if(!e)throw W(d);const t=e.split(i.HR.CLIENT_INFO_SEPARATOR,2);return{uid:t[0],utid:t.length<2?i.JM.EMPTY_STRING:t[1]}}function Ge(e,t){return!!e&&!!t&&e===t.split(".")[1]}function Ke(e,t,n,a){if(a){const{oid:t,sub:n,tid:i,name:r,tfp:o,acr:s}=a,c=i||o||s||"";return{tenantId:c,localAccountId:t||n||"",name:r,isHomeTenant:Ge(c,e)}}return{tenantId:n,localAccountId:t,isHomeTenant:Ge(n,e)}}function We(e,t,n,a){let i=e;if(t){const{isHomeTenant:n,...a}=t;i={...e,...a}}if(n){const{isHomeTenant:t,...r}=Ke(e.homeAccountId,e.localAccountId,e.tenantId,n);return i={...i,...r,idTokenClaims:n,idToken:a},i}return i}function qe(e){return e&&(e.tid||e.tfp||e.acr)||null}class Qe{generateAccountId(){return[this.homeAccountId,this.environment].join(i.HR.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return Qe.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(i.HR.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,n){const a=new Qe;let o;1===t.authorityType?a.authorityType=i.Vd.ADFS_ACCOUNT_TYPE:t.protocolMode===r?a.authorityType=i.Vd.MSSTS_ACCOUNT_TYPE:a.authorityType=i.Vd.GENERIC_ACCOUNT_TYPE,e.clientInfo&&n&&(o=Ve(e.clientInfo,n)),a.clientInfo=e.clientInfo,a.homeAccountId=e.homeAccountId,a.nativeAccountId=e.nativeAccountId;const s=e.environment||t&&t.getPreferredCache();if(!s)throw W(L);a.environment=s,a.realm=o?.utid||qe(e.idTokenClaims)||"",a.localAccountId=o?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const c=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,d=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(a.username=c||d||"",a.name=e.idTokenClaims?.name||"",a.cloudGraphHostName=e.cloudGraphHostName,a.msGraphHost=e.msGraphHost,e.tenantProfiles)a.tenantProfiles=e.tenantProfiles;else{const t=Ke(e.homeAccountId,a.localAccountId,a.realm,e.idTokenClaims);a.tenantProfiles=[t]}return a}static createFromAccountInfo(e,t,n){const a=new Qe;return a.authorityType=e.authorityType||i.Vd.GENERIC_ACCOUNT_TYPE,a.homeAccountId=e.homeAccountId,a.localAccountId=e.localAccountId,a.nativeAccountId=e.nativeAccountId,a.realm=e.tenantId,a.environment=e.environment,a.username=e.username,a.name=e.name,a.cloudGraphHostName=t,a.msGraphHost=n,a.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),a}static generateHomeAccountId(e,t,n,a,i){if(1!==t&&2!==t){if(e)try{const t=Ve(e,a.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}n.warning("No client info in response")}return i?.sub||""}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let a=!0;if(n){const n=e.idTokenClaims||{},i=t.idTokenClaims||{};a=n.iat===i.iat&&n.nonce===i.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&a}}function Ye(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function Je(e){if(!e||e.indexOf("=")<0)return null;try{const t=Ye(e),n=Object.fromEntries(new URLSearchParams(t));if(n.code||n.error||n.error_description||n.state)return n}catch(e){throw W(h)}return null}class Xe{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw Ne(Se);e.includes("#")||(this._urlString=Xe.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Be.endsWith(t,"?")?t=t.slice(0,-1):Be.endsWith(t,"?/")&&(t=t.slice(0,-2)),Be.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw Ne(ye)}if(!e.HostNameAndPort||!e.PathSegments)throw Ne(ye);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw Ne(ve)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return Xe.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return!e||0===n.length||n[0]!==i.S2.COMMON&&n[0]!==i.S2.ORGANIZATIONS||(n[0]=e),Xe.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw Ne(ye);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let a=n.AbsolutePath.split("/");return a=a.filter(e=>e&&e.length>0),n.PathSegments=a,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw Ne(ye);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===i.JM.FORWARD_SLASH){const n=new Xe(t).getUrlComponents();return n.Protocol+"//"+n.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new Xe(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!Je(e)}}const Ze={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},$e={tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},et=new Set;function tt(e,t,n,a){if(a?.trace(`getAliasesFromMetadata called with source: ${n}`),e&&t){const i=nt(t,e);if(i)return a?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${n}, returning aliases`),i.aliases;a?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${n}`)}return null}function nt(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(a.aliases.includes(t))return a}return null}$e.metadata.forEach(e=>{e.aliases.forEach(e=>{et.add(e)})});const at="cache_quota_exceeded",it="cache_error_unknown",rt={[at]:"Exceeded cache storage capacity.",[it]:"Unexpected error occurred when using cache storage."};class ot extends Error{constructor(e,t){const n=t||(rt[e]?rt[e]:rt.cache_error_unknown);super(`${e}: ${n}`),Object.setPrototypeOf(this,ot.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=n}}class st{constructor(e,t,n,a){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(Q,Y),this.staticAuthorityOptions=a}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort(e=>e.idTokenClaims?-1:1)[0]:1===t.length?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(e=>this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t))}getTenantedAccountInfoByFilter(e,t,n,a){let i,r=null;if(a&&!this.tenantProfileMatchesFilter(n,a))return null;const o=this.getIdToken(e,t,n.tenantId);return o&&(i=J(o.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(i,a))?null:(r=We(e,n,i,o?.secret),r)}getTenantProfilesFromAccountEntity(e,t,n){const a=e.getAccountInfo();let i=a.tenantProfiles||new Map;const r=this.getTokenKeys();if(t){const e=i.get(t);if(!e)return[];i=new Map([[t,e]])}const o=[];return i.forEach(e=>{const t=this.getTenantedAccountInfoByFilter(a,r,e,n);t&&o.push(t)}),o}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||void 0!==t.isHomeTenant&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){if(t){if(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))return!1;if(t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint))return!1;if(t.username&&!this.matchUsername(e.preferred_username,t.username))return!1;if(t.name&&!this.matchName(e,t.name))return!1;if(t.sid&&!this.matchSid(e,t.sid))return!1}return!0}async saveCacheRecord(e,t,n){if(!e)throw W(A);try{e.account&&this.setAccount(e.account),e.idToken&&!1!==t?.idToken&&this.setIdTokenCredential(e.idToken),e.accessToken&&!1!==t?.accessToken&&await this.saveAccessToken(e.accessToken),e.refreshToken&&!1!==t?.refreshToken&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(e){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Error?(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`,n),"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota")?(this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",n),new ot(at)):new ot(e.name,e.message)):(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`,n),new ot(it))}}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),a=je.fromString(e.target),i=[];n.accessToken.forEach(e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;const n=this.getAccessTokenCredential(e);n&&this.credentialMatchesFilter(n,t)&&je.fromString(n.target).intersectingScopeSets(a)&&i.push(this.removeAccessToken(e))}),await Promise.all(i),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),n=[];return t.forEach(t=>{if(!this.isAccountKey(t,e.homeAccountId))return;const a=this.getAccount(t,this.commonLogger);if(!a)return;if(e.homeAccountId&&!this.matchHomeAccountId(a,e.homeAccountId))return;if(e.username&&!this.matchUsername(a.username,e.username))return;if(e.environment&&!this.matchEnvironment(a,e.environment))return;if(e.realm&&!this.matchRealm(a,e.realm))return;if(e.nativeAccountId&&!this.matchNativeAccountId(a,e.nativeAccountId))return;if(e.authorityType&&!this.matchAuthorityType(a,e.authorityType))return;const i={localAccountId:e?.localAccountId,name:e?.name},r=a.tenantProfiles?.filter(e=>this.tenantProfileMatchesFilter(e,i));r&&0===r.length||n.push(a)}),n}isAccountKey(e,t,n){return!(e.split(i.HR.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||n&&!e.toLowerCase().includes(n.toLowerCase()))}isCredentialKey(e){if(e.split(i.HR.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(i.eG.ID_TOKEN.toLowerCase())&&-1===t.indexOf(i.eG.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(i.eG.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(i.eG.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(i.eG.REFRESH_TOKEN.toLowerCase())>-1){const e=`${i.eG.REFRESH_TOKEN}${i.HR.CACHE_KEY_SEPARATOR}${this.clientId}${i.HR.CACHE_KEY_SEPARATOR}`,n=`${i.eG.REFRESH_TOKEN}${i.HR.CACHE_KEY_SEPARATOR}${i.sB}${i.HR.CACHE_KEY_SEPARATOR}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(n.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===i.eG.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===i.TO.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){const t=this.getKeys(),n={};return t.forEach(t=>{if(!this.isAppMetadata(t))return;const a=this.getAppMetadata(t);a&&(e.environment&&!this.matchEnvironment(a,e.environment)||e.clientId&&!this.matchClientId(a,e.clientId)||(n[t]=a))}),n}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach(t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const a=this.getAuthorityMetadata(t);a&&-1!==a.aliases.indexOf(e)&&(n=a)}),n}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach(e=>{t.push(this.removeAccount(e))}),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),n=e.generateAccountId(),a=[];t.idToken.forEach(e=>{0===e.indexOf(n)&&this.removeIdToken(e)}),t.accessToken.forEach(e=>{0===e.indexOf(n)&&a.push(this.removeAccessToken(e))}),t.refreshToken.forEach(e=>{0===e.indexOf(n)&&this.removeRefreshToken(e)}),await Promise.all(a)}updateOutdatedCachedAccount(e,t,n){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const a=this.getAccountKeys().filter(e=>e.startsWith(t.homeAccountId)),i=[];a.forEach(e=>{const t=this.getCachedAccountEntity(e);t&&i.push(t)});const r=i.find(e=>Ge(e.realm,e.homeAccountId))||i[0];r.tenantProfiles=i.map(e=>({tenantId:e.realm,localAccountId:e.localAccountId,name:e.name,isHomeTenant:Ge(e.realm,e.homeAccountId)}));const o=st.toObject(new Qe,{...r}),s=o.generateAccountKey();return a.forEach(t=>{t!==s&&this.removeOutdatedAccount(e)}),this.setAccount(o),n?.verbose("Updated an outdated account entity in the cache"),o}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===i.eG.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===i.TO.POP){const e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw W(H)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(e=>{this.isAppMetadata(e)&&this.removeItem(e)}),!0}readAccountFromCache(e){const t=Qe.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,n,a,r){this.commonLogger.trace("CacheManager - getIdToken called");const o={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:i.eG.ID_TOKEN,clientId:this.clientId,realm:n},s=this.getIdTokensByFilter(o,t),c=s.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let t=s;if(!n){const n=new Map;s.forEach((t,a)=>{t.realm===e.tenantId&&n.set(a,t)});const a=n.size;if(a<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(1===a)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),n.values().next().value;t=n}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),t.forEach((e,t)=>{this.removeIdToken(t)}),a&&r&&a.addFields({multiMatchedID:s.size},r),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t){const n=t&&t.idToken||this.getTokenKeys().idToken,a=new Map;return n.forEach(t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;const n=this.getIdTokenCredential(t);n&&this.credentialMatchesFilter(n,e)&&a.set(t,n)}),a}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,n,a,r,o){this.commonLogger.trace("CacheManager - getAccessToken called");const s=je.createSearchScopes(t.scopes),c=t.authenticationScheme||i.TO.BEARER,d=c&&c.toLowerCase()!==i.TO.BEARER.toLowerCase()?i.eG.ACCESS_TOKEN_WITH_AUTH_SCHEME:i.eG.ACCESS_TOKEN,l={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:d,clientId:this.clientId,realm:a||e.tenantId,target:s,tokenType:c,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},u=n&&n.accessToken||this.getTokenKeys().accessToken,f=[];u.forEach(e=>{if(this.accessTokenKeyMatchesFilter(e,l,!0)){const t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,l)&&f.push(t)}});const p=f.length;return p<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):p>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),f.forEach(e=>{this.removeAccessToken(te(e))}),r&&o&&r.addFields({multiMatchedAT:f.length},o),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),f[0])}accessTokenKeyMatchesFilter(e,t,n){const a=e.toLowerCase();if(t.clientId&&-1===a.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===a.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===a.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===a.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(n&&!a.includes(e[t].toLowerCase()))return!1;if(!n&&a.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),n=[];return t.accessToken.forEach(t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;const a=this.getAccessTokenCredential(t);a&&this.credentialMatchesFilter(a,e)&&n.push(a)}),n}getRefreshToken(e,t,n,a,r){this.commonLogger.trace("CacheManager - getRefreshToken called");const o=t?i.sB:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:i.eG.REFRESH_TOKEN,clientId:this.clientId,familyId:o},c=n&&n.refreshToken||this.getTokenKeys().refreshToken,d=[];c.forEach(e=>{if(this.refreshTokenKeyMatchesFilter(e,s)){const t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,s)&&d.push(t)}});const l=d.length;return l<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(l>1&&a&&r&&a.addFields({multiMatchedRT:l},r),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),d[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&-1===n.indexOf(t.familyId.toLowerCase())||!t.familyId&&t.clientId&&-1===n.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),a=Object.keys(n).map(e=>n[e]),i=a.length;if(i<1)return null;if(i>1)throw W(I);return a[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==i.sB)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!(!e||"string"!=typeof e||t?.toLowerCase()!==e.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const n=function(e,t){let n;const a=e.canonicalAuthority;if(a){const r=new Xe(a).getUrlComponents().HostNameAndPort;n=tt(r,e.cloudDiscoveryMetadata?.metadata,i.L_.CONFIG,t)||tt(r,$e.metadata,i.L_.HARDCODED_VALUES,t)||e.knownAuthorities}return n||[]}(this.staticAuthorityOptions,this.commonLogger);if(n.includes(t)&&n.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){return!(e.credentialType!==i.eG.ACCESS_TOKEN&&e.credentialType!==i.eG.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)&&je.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(i.MU)}isAuthorityMetadata(e){return-1!==e.indexOf(i.y0.CACHE_KEY)}generateAuthorityMetadataCacheKey(e){return`${i.y0.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class ct extends st{setAccount(){throw W(V)}getAccount(){throw W(V)}getCachedAccountEntity(){throw W(V)}setIdTokenCredential(){throw W(V)}getIdTokenCredential(){throw W(V)}setAccessTokenCredential(){throw W(V)}getAccessTokenCredential(){throw W(V)}setRefreshTokenCredential(){throw W(V)}getRefreshTokenCredential(){throw W(V)}setAppMetadata(){throw W(V)}getAppMetadata(){throw W(V)}setServerTelemetry(){throw W(V)}getServerTelemetry(){throw W(V)}setAuthorityMetadata(){throw W(V)}getAuthorityMetadata(){throw W(V)}getAuthorityMetadataKeys(){throw W(V)}setThrottlingCache(){throw W(V)}getThrottlingCache(){throw W(V)}removeItem(){throw W(V)}getKeys(){throw W(V)}getAccountKeys(){throw W(V)}getTokenKeys(){throw W(V)}updateCredentialCacheKey(){throw W(V)}removeOutdatedAccount(){throw W(V)}}const dt={tokenRenewalOffsetSeconds:i.k0,preventCorsPreflight:!1},lt={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:a.$.Info,correlationId:i.JM.EMPTY_STRING},ut={claimsBasedCachingEnabled:!1},ft={async sendGetRequestAsync(){throw W(V)},async sendPostRequestAsync(){throw W(V)}},pt={sku:i.JM.SKU,version:Y,cpu:i.JM.EMPTY_STRING,os:i.JM.EMPTY_STRING},mt={clientSecret:i.JM.EMPTY_STRING,clientAssertion:void 0},_t={azureCloudInstance:s,tenant:`${i.JM.DEFAULT_COMMON_TENANT}`},ht={application:{appName:"",appVersion:""}};function bt(e){return e.authOptions.authority.options.protocolMode===o}const gt={sendGetRequestAsync:()=>Promise.reject(W(V)),sendPostRequestAsync:()=>Promise.reject(W(V))},vt="acquireTokenByCode",yt="acquireTokenByRefreshToken",St="acquireTokenSilent",Dt="acquireTokenSilentAsync",It="acquireTokenPopup",xt="acquireTokenRedirect",Ct="cryptoOptsGetPublicKeyThumbprint",Ot="cryptoOptsSignJwt",wt="silentCacheClientAcquireToken",Et="silentIframeClientAcquireToken",At="silentRefreshClientAcquireToken",Lt="ssoSilent",kt="standardInteractionClientGetDiscoveredAuthority",Mt="fetchAccountIdWithNativeBroker",Pt="nativeInteractionClientAcquireToken",Tt="networkClientSendPostRequestAsync",Ut="refreshTokenClientExecutePostToTokenEndpoint",Ft="authorizationCodeClientExecutePostToTokenEndpoint",Ht="refreshTokenClientExecuteTokenRequest",Rt="refreshTokenClientAcquireToken",Nt="refreshTokenClientAcquireTokenWithCachedRefreshToken",Bt="refreshTokenClientAcquireTokenByRefreshToken",jt="refreshTokenClientCreateTokenRequestBody",Vt="acquireTokenFromCache",zt="silentFlowClientAcquireCachedToken",Gt="silentFlowClientGenerateResultFromCacheRecord",Kt="acquireTokenBySilentIframe",Wt="initializeBaseRequest",qt="initializeSilentRequest",Qt="initializeClientApplication",Yt="silentIframeClientTokenHelper",Jt="silentHandlerInitiateAuthRequest",Xt="silentHandlerMonitorIframeForHash",Zt="silentHandlerLoadFrame",$t="silentHandlerLoadFrameSync",en="standardInteractionClientCreateAuthCodeClient",tn="standardInteractionClientGetClientConfiguration",nn="standardInteractionClientInitializeAuthorizationRequest",an="standardInteractionClientInitializeAuthorizationCodeRequest",rn="getAuthCodeUrl",on="handleCodeResponseFromServer",sn="handleCodeResponse",cn="updateTokenEndpointAuthority",dn="authClientAcquireToken",ln="authClientExecuteTokenRequest",un="authClientCreateTokenRequestBody",fn="authClientCreateQueryString",pn="popTokenGenerateCnf",mn="popTokenGenerateKid",_n="handleServerTokenResponse",hn="deserializeResponse",bn="authorityFactoryCreateDiscoveredInstance",gn="authorityResolveEndpointsAsync",vn="authorityGetCloudDiscoveryMetadataFromNetwork",yn="authorityUpdateCloudDiscoveryMetadata",Sn="authorityGetEndpointMetadataFromNetwork",Dn="authorityUpdateEndpointMetadata",In="authorityUpdateMetadataWithRegionalInformation",xn="regionDiscoveryDetectRegion",Cn="regionDiscoveryGetRegionFromIMDS",On="regionDiscoveryGetCurrentVersion",wn="acquireTokenByCodeAsync",En="handleRedirectPromise",An="handleNativeRedirectPromise",Ln="nativeMessageHandlerHandshake",kn="removeHiddenIframe",Mn="clearTokensAndKeysWithClaims",Pn="cacheManagerGetRefreshToken",Tn="generatePkceCodes",Un="generateCodeVerifier",Fn="generateCodeChallengeFromVerifier",Hn="sha256Digest",Rn="getRandomValues",Nn=(new Map([[vt,"ATByCode"],[yt,"ATByRT"],[St,"ATS"],[Dt,"ATSAsync"],[It,"ATPopup"],[xt,"ATRedirect"],[Ct,"CryptoGetPKThumb"],[Ot,"CryptoSignJwt"],[wt,"SltCacheClientAT"],[Et,"SltIframeClientAT"],[At,"SltRClientAT"],[Lt,"SsoSlt"],[kt,"StdIntClientGetDiscAuth"],[Mt,"FetchAccIdWithNtvBroker"],[Pt,"NtvIntClientAT"],["baseClientCreateTokenRequestHeaders","BaseClientCreateTReqHead"],[Tt,"NetClientSendPost"],[Ut,"RTClientExecPost"],[Ft,"AuthCodeClientExecPost"],["brokerHandshake","BrokerHandshake"],["acquireTokenByRefreshTokenInBroker","ATByRTInBroker"],["acquireTokenByBroker","ATByBroker"],[Ht,"RTClientExecTReq"],[Rt,"RTClientAT"],[Nt,"RTClientATWithCachedRT"],[Bt,"RTClientATByRT"],[jt,"RTClientCreateTReqBody"],[Vt,"ATFromCache"],[zt,"SltFlowClientATCached"],[Gt,"SltFlowClientGenResFromCache"],[Kt,"ATBySltIframe"],[Wt,"InitBaseReq"],[qt,"InitSltReq"],[Qt,"InitClientApplication"],[Yt,"SIClientTHelper"],[Jt,"SHandlerInitAuthReq"],[Xt,"SltHandlerMonitorIframeForHash"],[Zt,"SHandlerLoadFrame"],[$t,"SHandlerLoadFrameSync"],[en,"StdIntClientCreateAuthCodeClient"],[tn,"StdIntClientGetClientConf"],[nn,"StdIntClientInitAuthReq"],[an,"StdIntClientInitAuthCodeReq"],[rn,"GetAuthCodeUrl"],[on,"HandleCodeResFromServer"],[sn,"HandleCodeResp"],[cn,"UpdTEndpointAuth"],[dn,"AuthClientAT"],[ln,"AuthClientExecTReq"],[un,"AuthClientCreateTReqBody"],[fn,"AuthClientCreateQueryStr"],[pn,"PopTGenCnf"],[mn,"PopTGenKid"],[_n,"HandleServerTRes"],[hn,"DeserializeRes"],[bn,"AuthFactCreateDiscInst"],[gn,"AuthResolveEndpointsAsync"],["authorityResolveEndpointsFromLocalSources","AuthResolveEndpointsFromLocal"],[vn,"AuthGetCDMetaFromNet"],[yn,"AuthUpdCDMeta"],[Sn,"AuthUpdCDMetaFromNet"],[Dn,"AuthUpdEndpointMeta"],[In,"AuthUpdMetaWithRegInfo"],[xn,"RegDiscDetectReg"],[Cn,"RegDiscGetRegFromIMDS"],[On,"RegDiscGetCurrentVer"],[wn,"ATByCodeAsync"],["getEndpointMetadataFromNetwork","GetEndpointMetaFromNet"],["getCloudDiscoveryMetadataFromNetworkMeasurement","GetCDMetaFromNet"],[En,"HandleRedirectPromise"],[An,"HandleNtvRedirectPromise"],["updateCloudDiscoveryMetadataMeasurement","UpdateCDMeta"],["usernamePasswordClientAcquireToken","UserPassClientAT"],[Ln,"NtvMsgHandlerHandshake"],["nativeGenerateAuthResult","NtvGenAuthRes"],[kn,"RemoveHiddenIframe"],[Mn,"ClearTAndKeysWithClaims"],[Pn,"CacheManagerGetRT"],[Tn,"GenPkceCodes"],[Un,"GenCodeVerifier"],[Fn,"GenCodeChallengeFromVerifier"],[Hn,"Sha256Digest"],[Rn,"GetRandomValues"]]),1);new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status","multiMatchedAT","multiMatchedID","multiMatchedRT"]);class Bn{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class jn{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:Nn,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new Bn}}startPerformanceMeasurement(){return new Bn}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}const Vn="invalid_grant",zn="msal.js.browser",Gn="53ee284d-920a-4b59-9d30-a60315b26836",Kn="ppnbnpeolgkicgegkbkbjmhlideopiji",Wn="Handshake",qn="GetToken",Qn="localStorage",Yn="sessionStorage",Jn="memoryStorage",Xn="request.origin",Zn="urlHash",$n="request.params",ea="ccs.credential",ta="request.correlationId",na="request.native",aa="msal.account.keys",ia="wrapper.sku",ra="wrapper.version",oa=861,sa=862;var ca;!function(e){e.Redirect="redirect",e.Popup="popup",e.Silent="silent",e.None="none"}(ca||(ca={}));const da={scopes:i.eZ},la="msal.db",ua=[0,5,4];class fa{navigateInternal(e,t){return fa.defaultNavigateWindow(e,t)}navigateExternal(e,t){return fa.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(e=>{setTimeout(()=>{e(!0)},t.timeout)})}}class pa extends c.uR{constructor(e,t,n){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,pa.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=n}}function ma(e,t,n){return new pa(e,t,n)}const _a="pkce_not_created",ha="crypto_nonexistent",ba="empty_navigate_uri",ga="hash_empty_error",va="no_state_in_hash",ya="hash_does_not_contain_known_properties",Sa="unable_to_parse_state",Da="state_interaction_type_mismatch",Ia="interaction_in_progress",xa="popup_window_error",Ca="empty_window_error",Oa="user_cancelled",wa="monitor_window_timeout",Ea="redirect_in_iframe",Aa="block_iframe_reload",La="block_nested_popups",ka="silent_logout_unsupported",Ma="no_account_error",Pa="no_token_request_cache_error",Ta="unable_to_parse_token_request_cache_error",Ua="no_cached_authority_error",Fa="non_browser_environment",Ha="database_not_open",Ra="no_network_connectivity",Na="post_request_failed",Ba="get_request_failed",ja="failed_to_parse_response",Va="unable_to_load_token",za="crypto_key_not_found",Ga="auth_code_required",Ka="auth_code_or_nativeAccountId_required",Wa="spa_code_and_nativeAccountId_present",qa="database_unavailable",Qa="unable_to_acquire_token_from_native_platform",Ya="native_handshake_timeout",Ja="native_extension_not_installed",Xa="native_connection_not_established",Za="uninitialized_public_client_application",$a="native_prompt_not_supported",ei="invalid_base64_string",ti="invalid_pop_token_request",ni="failed_to_build_headers",ai="failed_to_parse_headers",ii="For more visit: aka.ms/msaljs/browser-errors",ri={[_a]:"The PKCE code challenge and verifier could not be generated.",[ha]:"The crypto object or function is not available.",[ba]:"Navigation URI is empty. Please check stack trace for more info.",[ga]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ii}`,[va]:"Hash does not contain state. Please verify that the request originated from msal.",[ya]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ii}`,[Sa]:"Unable to parse state. Please verify that the request originated from msal.",[Da]:"Hash contains state but the interaction type does not match the caller.",[Ia]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ii}`,[xa]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[Ca]:"window.open returned null or undefined window object.",[Oa]:"User cancelled the flow.",monitor_popup_timeout:`Token acquisition in popup failed due to timeout.  ${ii}`,[wa]:`Token acquisition in iframe failed due to timeout.  ${ii}`,[Ea]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[Aa]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${ii}`,[La]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",iframe_closed_prematurely:"The iframe being monitored was closed prematurely.",[ka]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[Ma]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",silent_prompt_value_error:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Pa]:"No token request found in cache.",[Ta]:"The cached token request could not be parsed.",[Ua]:"No cached authority found.",auth_request_not_set_error:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",invalid_cache_type:"Invalid cache type",[Fa]:"Login and token requests are not supported in non-browser environments.",[Ha]:"Database is not open!",[Ra]:"No network connectivity. Check your internet connection.",[Na]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Ba]:"Network request failed. Please check the network trace to determine root cause.",[ja]:"Failed to parse network response. Check network trace.",[Va]:"Error loading token to cache.",[za]:"Cryptographic Key or Keypair not found in browser storage.",[Ga]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Ka]:"An authorization code or nativeAccountId must be provided to this flow.",[Wa]:"Request cannot contain both spa code and native account id.",[qa]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[Qa]:`Unable to acquire token from native platform.  ${ii}`,[Ya]:"Timed out while attempting to establish connection to browser extension",[Ja]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[Xa]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ii}`,[Za]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${ii}`,[$a]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[ei]:"Invalid base64 encoded string.",[ti]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[ni]:"Failed to build request headers object.",[ai]:"Failed to parse response headers"};class oi extends c.uR{constructor(e,t){super(e,ri[e],t),Object.setPrototypeOf(this,oi.prototype),this.name="BrowserAuthError"}}function si(e,t){return new oi(e,t)}class ci{async sendGetRequestAsync(e,t){let n,a={},i=0;const r=di(t);try{n=await fetch(e,{method:"GET",headers:r})}catch(e){throw si(window.navigator.onLine?Ba:Ra)}a=li(n.headers);try{return i=n.status,{headers:a,body:await n.json(),status:i}}catch(e){throw ma(si(ja),i,a)}}async sendPostRequestAsync(e,t){const n=t&&t.body||"",a=di(t);let i,r=0,o={};try{i=await fetch(e,{method:"POST",headers:a,body:n})}catch(e){throw si(window.navigator.onLine?Na:Ra)}o=li(i.headers);try{return r=i.status,{headers:o,body:await i.json(),status:r}}catch(e){throw ma(si(ja),r,o)}}}function di(e){try{const t=new Headers;if(!e||!e.headers)return t;const n=e.headers;return Object.entries(n).forEach(([e,n])=>{t.append(e,n)}),t}catch(e){throw si(ni)}}function li(e){try{const t={};return e.forEach((e,n)=>{t[n]=e}),t}catch(e){throw si(ai)}}function ui(e){return encodeURIComponent(pi(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function fi(e){return mi(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function pi(e){return mi((new TextEncoder).encode(e))}function mi(e){const t=Array.from(e,e=>String.fromCodePoint(e)).join("");return btoa(t)}const _i="SHA-256",hi=new Uint8Array([1,0,1]),bi="0123456789abcdef",gi=new Uint32Array(1),vi={name:"RSASSA-PKCS1-v1_5",hash:_i,modulusLength:2048,publicExponent:hi};async function yi(e,t,n){t?.addQueueMeasurement(Hn,n);const a=(new TextEncoder).encode(e);return window.crypto.subtle.digest(_i,a)}function Si(e){return window.crypto.getRandomValues(e)}function Di(){return window.crypto.getRandomValues(gi),gi[0]}function Ii(){const e=Date.now(),t=1024*Di()+(1023&Di()),n=new Uint8Array(16),a=Math.trunc(t/2**30),i=t&2**30-1,r=Di();n[0]=e/2**40,n[1]=e/2**32,n[2]=e/2**24,n[3]=e/65536,n[4]=e/256,n[5]=e,n[6]=112|a>>>8,n[7]=a,n[8]=128|i>>>24,n[9]=i>>>16,n[10]=i>>>8,n[11]=i,n[12]=r>>>24,n[13]=r>>>16,n[14]=r>>>8,n[15]=r;let o="";for(let e=0;e<n.length;e++)o+=bi.charAt(n[e]>>>4),o+=bi.charAt(15&n[e]),3!==e&&5!==e&&7!==e&&9!==e||(o+="-");return o}async function xi(e){return window.crypto.subtle.exportKey("jwk",e)}async function Ci(e){const t=await yi(e);return fi(new Uint8Array(t))}const Oi="storage_not_supported",wi="in_mem_redirect_unavailable",Ei={[Oi]:"Given storage configuration option was not supported.",stubbed_public_client_application_called:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[wi]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class Ai extends c.uR{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,Ai.prototype)}}function Li(e){return new Ai(e,Ei[e])}function ki(){return window.parent!==window}function Mi(){return window.location.href.split("?")[0].split("#")[0]}function Pi(){if("undefined"==typeof window)throw si(Fa)}function Ti(e){if(!e)throw si(Za)}function Ui(e){Pi(),function(){if(Xe.hashContainsKnownProperties(window.location.hash)&&ki())throw si(Aa)}(),function(){if("undefined"!=typeof window&&window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf("msal."))throw si(La)}(),Ti(e)}function Fi(e,t){if(Ui(e),function(e){if(ki()&&!e)throw si(Ea)}(t.system.allowRedirectInIframe),t.cache.cacheLocation===Jn&&!t.cache.storeAuthStateInCookie)throw Li(wi)}function Hi(e){const t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout(()=>{try{document.head.removeChild(t)}catch{}},1e4)}const Ri="3.28.0";class Ni{static loggerCallback(e,t){switch(e){case a.$.Error:return void console.error(t);case a.$.Info:return void console.info(t);case a.$.Verbose:return void console.debug(t);case a.$.Warning:return void console.warn(t);default:return void console.log(t)}}constructor(e){let t;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:e,cache:t,system:n,telemetry:c},d){const l={clientId:i.JM.EMPTY_STRING,authority:`${i.JM.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:i.JM.EMPTY_STRING,authorityMetadata:i.JM.EMPTY_STRING,redirectUri:"undefined"!=typeof window?Mi():"",postLogoutRedirectUri:i.JM.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:r,OIDCOptions:{serverResponseType:i.CL.FRAGMENT,defaultScopes:[i.JM.OPENID_SCOPE,i.JM.PROFILE_SCOPE,i.JM.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:s,tenant:i.JM.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},u={cacheLocation:Yn,temporaryCacheLocation:Yn,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!(!t||t.cacheLocation!==Qn),claimsBasedCachingEnabled:!1},f={loggerCallback:()=>{},logLevel:a.$.Info,piiLoggingEnabled:!1},p={...{...dt,loggerOptions:f,networkClient:d?new ci:gt,navigationClient:new fa,loadFrameTimeout:0,windowHashTimeout:n?.loadFrameTimeout||6e4,iframeHashTimeout:n?.loadFrameTimeout||1e4,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:n?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:30},...n,loggerOptions:n?.loggerOptions||f},m={application:{appName:i.JM.EMPTY_STRING,appVersion:i.JM.EMPTY_STRING},client:new jn};if(e?.protocolMode!==o&&e?.OIDCOptions&&new a.V(p.loggerOptions).warning(JSON.stringify(Ne(Te))),e?.protocolMode&&e.protocolMode!==r&&p?.allowNativeBroker)throw Ne(Ue);return{auth:{...l,...e,OIDCOptions:{...l.OIDCOptions,...e?.OIDCOptions}},cache:{...u,...t},system:p,telemetry:{...m,...c}}}(e,this.browserEnvironment);try{t=window.sessionStorage}catch(e){}const n=t?.getItem("msal.browser.log.level"),c=t?.getItem("msal.browser.log.pii")?.toLowerCase(),d="true"===c||"false"!==c&&void 0,l={...this.config.system.loggerOptions},u=n&&Object.keys(a.$).includes(n)?a.$[n]:void 0;u&&(l.loggerCallback=Ni.loggerCallback,l.logLevel=u),void 0!==d&&(l.piiLoggingEnabled=d),this.logger=new a.V(l,"@azure/msal-browser",Ri),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}class Bi extends Ni{getModuleName(){return Bi.MODULE_NAME}getId(){return Bi.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}Bi.MODULE_NAME="",Bi.ID="StandardOperatingContext";const ji="missing_kid_error",Vi="missing_alg_error",zi={[ji]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[Vi]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class Gi extends c.uR{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,Gi.prototype)}}function Ki(e){return new Gi(e,zi[e])}class Wi{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw Ki(ji);if(!e.alg)throw Ki(Vi);const t=new Wi({typ:e.typ||i.Hz.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}function qi(e){return(new TextDecoder).decode(function(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw si(ei)}const n=atob(t);return Uint8Array.from(n,e=>e.codePointAt(0)||0)}(e))}class Qi{constructor(){this.dbName=la,this.version=1,this.tableName="msal.db.keys",this.dbOpen=!1}async open(){return new Promise((e,t)=>{const n=window.indexedDB.open(this.dbName,this.version);n.addEventListener("upgradeneeded",e=>{e.target.result.createObjectStore(this.tableName)}),n.addEventListener("success",t=>{const n=t;this.db=n.target.result,this.dbOpen=!0,e()}),n.addEventListener("error",()=>t(si(qa)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(si(Ha));const a=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);a.addEventListener("success",e=>{const n=e;this.closeConnection(),t(n.target.result)}),a.addEventListener("error",e=>{this.closeConnection(),n(e)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((n,a)=>{if(!this.db)return a(si(Ha));const i=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);i.addEventListener("success",()=>{this.closeConnection(),n()}),i.addEventListener("error",e=>{this.closeConnection(),a(e)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(si(Ha));const a=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);a.addEventListener("success",()=>{this.closeConnection(),t()}),a.addEventListener("error",e=>{this.closeConnection(),n(e)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(si(Ha));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();n.addEventListener("success",t=>{const n=t;this.closeConnection(),e(n.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),t(e)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(si(Ha));const a=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);a.addEventListener("success",e=>{const n=e;this.closeConnection(),t(1===n.target.result)}),a.addEventListener("error",e=>{this.closeConnection(),n(e)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const n=window.indexedDB.deleteDatabase(la),a=setTimeout(()=>t(!1),200);n.addEventListener("success",()=>(clearTimeout(a),e(!0))),n.addEventListener("blocked",()=>(clearTimeout(a),e(!0))),n.addEventListener("error",()=>(clearTimeout(a),t(!1)))})}}class Yi{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,n)=>{e.push(n)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class Ji{constructor(e){this.inMemoryCache=new Yi,this.indexedDBCache=new Qi,this.logger=e}handleDatabaseAccessError(e){if(!(e instanceof oi&&e.errorCode===qa))throw e;this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.")}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}class Xi{constructor(e,t){this.logger=e,function(){if(!window)throw si(Fa);if(!window.crypto)throw si(ha);if(!window.crypto.subtle)throw si(ha,"crypto_subtle_undefined")}(),this.cache=new Ji(this.logger),this.performanceClient=t}createNewGuid(){return Ii()}base64Encode(e){return pi(e)}base64Decode(e){return qi(e)}base64UrlEncode(e){return ui(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(Ct,e.correlationId),n=await async function(e,t){return window.crypto.subtle.generateKey(vi,e,t)}(Xi.EXTRACTABLE,Xi.POP_KEY_USAGES),a=await xi(n.publicKey),i=Zi({e:a.e,kty:a.kty,n:a.n}),r=await this.hashString(i),o=await xi(n.privateKey),s=await async function(e,t,n){return window.crypto.subtle.importKey("jwk",e,vi,!1,["sign"])}(o);return await this.cache.setItem(r,{privateKey:s,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),r}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,n,a){const i=this.performanceClient?.startMeasurement(Ot,a),r=await this.cache.getItem(t);if(!r)throw si(za);const o=await xi(r.publicKey),s=Zi(o),c=ui(JSON.stringify({kid:t})),d=ui(Wi.getShrHeaderString({...n?.header,alg:o.alg,kid:c}));e.cnf={jwk:JSON.parse(s)};const l=`${d}.${ui(JSON.stringify(e))}`,u=(new TextEncoder).encode(l),f=await async function(e,t){return window.crypto.subtle.sign(vi,e,t)}(r.privateKey,u),p=`${l}.${fi(new Uint8Array(f))}`;return i&&i.end({success:!0}),p}async hashString(e){return Ci(e)}}function Zi(e){return JSON.stringify(e,Object.keys(e).sort())}Xi.POP_KEY_USAGES=["sign","verify"],Xi.EXTRACTABLE=!0;const $i=(e,t,n,a,i)=>(...r)=>{n.trace(`Executing function ${t}`);const o=a?.startMeasurement(t,i);if(i){const e=t+"CallCount";a?.incrementFields({[e]:1},i)}try{const a=e(...r);return o?.end({success:!0}),n.trace(`Returning result from ${t}`),a}catch(e){n.trace(`Error occurred in ${t}`);try{n.trace(JSON.stringify(e))}catch(e){n.trace("Unable to print error message.")}throw o?.end({success:!1},e),e}},er=(e,t,n,a,i)=>(...r)=>{n.trace(`Executing function ${t}`);const o=a?.startMeasurement(t,i);if(i){const e=t+"CallCount";a?.incrementFields({[e]:1},i)}return a?.setPreQueueTime(t,i),e(...r).then(e=>(n.trace(`Returning result from ${t}`),o?.end({success:!0}),e)).catch(e=>{n.trace(`Error occurred in ${t}`);try{n.trace(JSON.stringify(e))}catch(e){n.trace("Unable to print error message.")}throw o?.end({success:!1},e),e})};class tr{constructor(e,t,n,a){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=a}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(xn,this.correlationId);let n=e;if(n)t.region_source=i.dZ.ENVIRONMENT_VARIABLE;else{const e=tr.IMDS_OPTIONS;try{const a=await er(this.getRegionFromIMDS.bind(this),Cn,this.logger,this.performanceClient,this.correlationId)(i.JM.IMDS_VERSION,e);if(a.status===i.Fk.httpSuccess&&(n=a.body,t.region_source=i.dZ.IMDS),a.status===i.Fk.httpBadRequest){const a=await er(this.getCurrentVersion.bind(this),On,this.logger,this.performanceClient,this.correlationId)(e);if(!a)return t.region_source=i.dZ.FAILED_AUTO_DETECTION,null;const r=await er(this.getRegionFromIMDS.bind(this),Cn,this.logger,this.performanceClient,this.correlationId)(a,e);r.status===i.Fk.httpSuccess&&(n=r.body,t.region_source=i.dZ.IMDS)}}catch(e){return t.region_source=i.dZ.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=i.dZ.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(Cn,this.correlationId),this.networkInterface.sendGetRequestAsync(`${i.JM.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,i.JM.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(On,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${i.JM.IMDS_ENDPOINT}?format=json`,e);return t.status===i.Fk.httpBadRequest&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch(e){return null}}}tr.IMDS_OPTIONS={headers:{Metadata:"true"}};class nr{constructor(e,t,n,a,i,r,o,s){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=a,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=i,this.performanceClient=o,this.correlationId=r,this.managedIdentity=s||!1,this.regionDiscovery=new tr(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(i.JM.CIAM_AUTH_URL))return 3;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case i.JM.ADFS:return 1;case i.JM.DSTS:return 2}return 0}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new Xe(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw W(p)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw W(p)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw W(p)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw W(R);return this.replacePath(this.metadata.end_session_endpoint)}throw W(p)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw W(p)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw W(p)}canReplaceTenant(e){return 1===e.PathSegments.length&&!nr.reservedTenantDomains.has(e.PathSegments[0])&&0===this.getAuthorityType(e)&&this.protocolMode===r}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const n=new Xe(this.metadata.canonical_authority).getUrlComponents(),a=n.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((e,i)=>{let r=a[i];if(0===i&&this.canReplaceTenant(n)){const e=new Xe(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];r!==e&&(this.logger.verbose(`Replacing tenant domain name ${r} with id ${e}`),r=e)}e!==r&&(t=t.replace(`/${r}/`,`/${e}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||1===this.authorityType||this.protocolMode!==r&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(gn,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await er(this.updateCloudDiscoveryMetadata.bind(this),yn,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await er(this.updateEndpointMetadata.bind(this),Dn,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:n},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:me(),jwks_uri:""}),e}updateCachedMetadata(e,t,n){t!==i.L_.CACHE&&n?.source!==i.L_.CACHE&&(e.expiresAt=me(),e.canonical_authority=this.canonicalAuthority);const a=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(a,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(Dn,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t)return t.source===i.L_.HARDCODED_VALUES&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata&&(_e(e,await er(this.updateMetadataWithRegionalInformation.bind(this),In,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority),t.source;let n=await er(this.getEndpointMetadataFromNetwork.bind(this),Sn,this.logger,this.performanceClient,this.correlationId)();if(n)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(n=await er(this.updateMetadataWithRegionalInformation.bind(this),In,this.logger,this.performanceClient,this.correlationId)(n)),_e(e,n,!0),i.L_.NETWORK;throw W(_,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),_e(e,t,!1),{source:i.L_.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const t=this.getEndpointMetadataFromHardcodedValues();if(t)return _e(e,t,!1),{source:i.L_.HARDCODED_VALUES,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=be(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:i.L_.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new Xe(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw Ne(Le)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(Sn,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const n=await this.networkInterface.sendGetRequestAsync(t,e),a=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(n.body);return a?n.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in Ze?Ze[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(In,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==i.JM.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=i.Z2.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,nr.replaceWithRegionalInformation(e,t);const n=await er(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),xn,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome=i.Z2.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=n,nr.replaceWithRegionalInformation(e,n);this.regionDiscoveryMetadata.region_outcome=i.Z2.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(yn,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await er(this.getCloudDiscoveryMetadataFromNetwork.bind(this),vn,this.logger,this.performanceClient,this.correlationId)();if(n)return he(e,n,!0),i.L_.NETWORK;throw Ne(ke)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||i.JM.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||i.JM.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||i.JM.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),he(e,t,!1),i.L_.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const t=(n=this.hostnameAndPort,nt($e.metadata,n));if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),he(e,t,!1),i.L_.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}var n;const a=be(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!a?(this.logger.verbose("Found cloud discovery metadata in the cache."),i.L_.CACHE):(a&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(3===this.authorityType)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),nr.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=nt(JSON.parse(this.authorityOptions.cloudDiscoveryMetadata).metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),e)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),e;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),Ne(Ae)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),nr.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(vn,this.correlationId);const e=`${i.JM.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const a=await this.networkInterface.sendGetRequestAsync(e,t);let r,o;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}(a.body))r=a.body,o=r.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${r.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(a.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${a.status}`),r=a.body,r.error===i.JM.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${r.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${r.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),o=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=nt(o,this.hostnameAndPort)}catch(e){if(e instanceof c.uR)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=nr.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(e=>e&&Xe.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==s){const e=t.tenant?t.tenant:i.JM.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${e}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return i.JM.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw W(p)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return et.has(e)}static isPublicCloudAuthority(e){return i.JM.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const a=new Xe(e);a.validateAsUri();const r=a.getUrlComponents();let o=`${t}.${r.HostNameAndPort}`;this.isPublicCloudAuthority(r.HostNameAndPort)&&(o=`${t}.${i.JM.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const s=Xe.constructAuthorityUriFromObject({...a.getUrlComponents(),HostNameAndPort:o}).urlString;return n?`${s}?${n}`:s}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=nr.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=nr.buildRegionalAuthorityString(n.token_endpoint,t),n.end_session_endpoint&&(n.end_session_endpoint=nr.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const n=new Xe(e).getUrlComponents();return 0===n.PathSegments.length&&n.HostNameAndPort.endsWith(i.JM.CIAM_AUTH_URL)&&(t=`${t}${n.HostNameAndPort.split(".")[0]}${i.JM.AAD_TENANT_DOMAIN_SUFFIX}`),t}}function ar(e){return e.endsWith(i.JM.FORWARD_SLASH)?e:`${e}${i.JM.FORWARD_SLASH}`}function ir(e){const t=e.cloudDiscoveryMetadata;let n;if(t)try{n=JSON.parse(t)}catch(e){throw Ne(Ae)}return{canonicalAuthority:e.authority?ar(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:n}}nr.reservedTenantDomains=new Set(["{tenant}","{tenantid}",i.S2.COMMON,i.S2.CONSUMERS,i.S2.ORGANIZATIONS]);var rr=n(7580),or=n(6694);class sr{static setRequestState(e,t,n){const a=sr.generateLibraryState(e,n);return t?`${a}${i.JM.RESOURCE_DELIM}${t}`:a}static generateLibraryState(e,t){if(!e)throw W(M);const n={id:e.createNewGuid()};t&&(n.meta=t);const a=JSON.stringify(n);return e.base64Encode(a)}static parseRequestState(e,t){if(!e)throw W(M);if(!t)throw W(b);try{const n=t.split(i.JM.RESOURCE_DELIM),a=n[0],r=n.length>1?n.slice(1).join(i.JM.RESOURCE_DELIM):i.JM.EMPTY_STRING,o=e.base64Decode(a),s=JSON.parse(o);return{userRequestState:r||i.JM.EMPTY_STRING,libraryState:s}}catch(e){throw W(b)}}}const cr="home_account_id",dr="UPN";class lr{constructor(){if(!window.localStorage)throw Li(Oi)}getItem(e){return window.localStorage.getItem(e)}setItem(e,t){window.localStorage.setItem(e,t)}removeItem(e){window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}}class ur{constructor(){if(!window.sessionStorage)throw Li(Oi)}getItem(e){return window.sessionStorage.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}}function fr(e,t){if(!t)return null;try{return sr.parseRequestState(e,t).libraryState.meta}catch(e){throw W(b)}}class pr{getItem(e){const t=`${encodeURIComponent(e)}`,n=document.cookie.split(";");for(let e=0;e<n.length;e++){const a=n[e],[i,...r]=decodeURIComponent(a).trim().split("="),o=r.join("=");if(i===t)return o}return""}setItem(e,t,n,a=!0){let i=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(n){const e=function(e){const t=new Date;return new Date(t.getTime()+864e5*e).toUTCString()}(n);i+=`expires=${e};`}a&&(i+="Secure;"),document.cookie=i}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach(e=>{const n=decodeURIComponent(e).trim().split("=");t.push(n[0])}),t}containsKey(e){return this.getKeys().includes(e)}}class mr extends st{constructor(e,t,n,a,i,r){super(e,n,a,i),this.cacheConfig=t,this.logger=a,this.internalStorage=new Yi,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupBrowserStorage(this.cacheConfig.temporaryCacheLocation),this.cookieStorage=new pr,t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=r}setupBrowserStorage(e){try{switch(e){case Qn:return new lr;case Yn:return new ur}}catch(e){this.logger.error(e)}return this.cacheConfig.cacheLocation=Jn,new Yi}migrateCacheEntries(){const e=`${i.JM.CACHE_PREFIX}.${i.Md.ID_TOKEN}`,t=`${i.JM.CACHE_PREFIX}.${i.Md.CLIENT_INFO}`,n=`${i.JM.CACHE_PREFIX}.${i.Md.ERROR}`,a=`${i.JM.CACHE_PREFIX}.${i.Md.ERROR_DESC}`,r=[this.browserStorage.getItem(e),this.browserStorage.getItem(t),this.browserStorage.getItem(n),this.browserStorage.getItem(a)];[i.Md.ID_TOKEN,i.Md.CLIENT_INFO,i.Md.ERROR,i.Md.ERROR_DESC].forEach((e,t)=>{const n=r[t];n&&this.setTemporaryCache(e,n,!0)})}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(aa),t=this.getItem(`msal.token.keys.${this.clientId}`);e&&t?this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration."):this.browserStorage.getKeys().forEach(e=>{if(this.isCredentialKey(e)){const t=this.getItem(e);if(t){const n=this.validateAndParseJson(t);if(n&&n.hasOwnProperty("credentialType"))switch(n.credentialType){case i.eG.ID_TOKEN:if(se(n)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${e} found, saving key to token key map`);const t=n,a=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(a,i.eG.ID_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${e}`);break;case i.eG.ACCESS_TOKEN:case i.eG.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(oe(n)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${e} found, saving key to token key map`);const t=n,a=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(a,i.eG.ACCESS_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${e}`);break;case i.eG.REFRESH_TOKEN:if(ce(n)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${e} found, saving key to token key map`);const t=n,a=this.updateCredentialCacheKey(e,t);return void this.addTokenKey(a,i.eG.REFRESH_TOKEN)}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${e}`)}}}if(this.isAccountKey(e)){const t=this.getItem(e);if(t){const n=this.validateAndParseJson(t);n&&Qe.isAccountEntity(n)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${e} found, saving key to account key map`),this.addAccountKeyToMap(e))}}})}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const n=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,n,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const n=this.validateAndParseJson(t);return n&&Qe.isAccountEntity(n)?st.toObject(new Qe,n):(this.removeAccountKeyFromMap(e),null)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(aa);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();-1===t.indexOf(e)?(t.push(e),this.setItem(aa,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),n=t.indexOf(e);n>-1?(t.splice(n,1),this.setItem(aa,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,i.eG.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,i.eG.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,i.eG.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`msal.token.keys.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const n=this.getTokenKeys();switch(t){case i.eG.ID_TOKEN:-1===n.idToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),n.idToken.push(e));break;case i.eG.ACCESS_TOKEN:-1===n.accessToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),n.accessToken.push(e));break;case i.eG.REFRESH_TOKEN:-1===n.refreshToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),n.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),W(P)}this.setItem(`msal.token.keys.${this.clientId}`,JSON.stringify(n))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const n=this.getTokenKeys();switch(t){case i.eG.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const a=n.idToken.indexOf(e);a>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),n.idToken.splice(a,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case i.eG.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const r=n.accessToken.indexOf(e);r>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),n.accessToken.splice(r,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case i.eG.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const o=n.refreshToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),n.refreshToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),W(P)}this.setItem(`msal.token.keys.${this.clientId}`,JSON.stringify(n))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,i.eG.ID_TOKEN),null;const n=this.validateAndParseJson(t);return n&&se(n)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,i.eG.ID_TOKEN),null)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=te(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,i.eG.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,i.eG.ACCESS_TOKEN),null;const n=this.validateAndParseJson(t);return n&&oe(n)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,i.eG.ACCESS_TOKEN),null)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=te(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,i.eG.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,i.eG.REFRESH_TOKEN),null;const n=this.validateAndParseJson(t);return n&&ce(n)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,i.eG.REFRESH_TOKEN),null)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=te(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,i.eG.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&(a=n)&&0===e.indexOf(i.MU)&&a.hasOwnProperty("clientId")&&a.hasOwnProperty("environment")?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),n):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null);var a}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=function({environment:e,clientId:t}){return[i.MU,e,t].join(i.HR.CACHE_KEY_SEPARATOR).toLowerCase()}(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&function(e,t){const n=0===e.indexOf(i.oT.CACHE_KEY);let a=!0;return t&&(a=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),n&&a}(e,n)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),n):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&function(e,t){return!!t&&0===e.indexOf(i.y0.CACHE_KEY)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}(e,n)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),n):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(e=>this.isAuthorityMetadata(e))}setWrapperMetadata(e,t){this.internalStorage.setItem(ia,e),this.internalStorage.setItem(ra,t)}getWrapperMetadata(){return[this.internalStorage.getItem(ia)||i.JM.EMPTY_STRING,this.internalStorage.getItem(ra)||i.JM.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(i.Md.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const e=this.generateCacheKey(i.Md.ACTIVE_ACCOUNT),t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const n=this.getAccountInfoFilteredBy({localAccountId:t});return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(n),n):null}const n=this.validateAndParseJson(t);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(i.Md.ACTIVE_ACCOUNT_FILTERS),n=this.generateCacheKey(i.Md.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");const a={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(a)),this.browserStorage.setItem(n,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(n)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&function(e,t){let n=!1;e&&(n=0===e.indexOf(i.Yw.THROTTLING_PREFIX));let a=!0;return t&&(a=t.hasOwnProperty("throttleTime")),n&&a}(e,n)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),n):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const n=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const e=this.cookieStorage.getItem(n);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}const a=this.temporaryCacheStorage.getItem(n);if(!a){if(this.cacheConfig.cacheLocation===Qn){const e=this.browserStorage.getItem(n);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),a}setTemporaryCache(e,t,n){const a=n?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(a,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(a,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach(e=>{-1===e.indexOf(i.JM.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{-1===e.indexOf(i.JM.CACHE_PREFIX)&&-1===e.indexOf(this.clientId)||this.browserStorage.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(Mn,t);const n=this.getTokenKeys(),a=[];n.accessToken.forEach(e=>{const t=this.getAccessTokenCredential(e);t?.requestedClaimsHash&&e.includes(t.requestedClaimsHash.toLowerCase())&&a.push(this.removeAccessToken(e))}),await Promise.all(a),a.length>0&&this.logger.warning(`${a.length} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):Be.startsWith(e,i.JM.CACHE_PREFIX)||Be.startsWith(e,i.Md.ADAL_ID_TOKEN)?e:`${i.JM.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=sr.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`authority.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=sr.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`nonce.id_token.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=sr.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`request.state.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),n=this.getTemporaryCache(t);if(!n)return null;const a=this.generateAuthorityKey(n);return this.getTemporaryCache(a)}updateCacheEntries(e,t,n,a,i){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const r=this.generateStateKey(e);this.setTemporaryCache(r,e,!1);const o=this.generateNonceKey(e);this.setTemporaryCache(o,t,!1);const s=this.generateAuthorityKey(e);if(this.setTemporaryCache(s,n,!1),i){const e={credential:i.homeAccountId,type:cr};this.setTemporaryCache(ea,JSON.stringify(e),!0)}else if(a){const e={credential:a,type:dr};this.setTemporaryCache(ea,JSON.stringify(e),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach(t=>{-1!==t.indexOf(e)&&this.removeTemporaryItem(t)}),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey($n)),this.removeTemporaryItem(this.generateCacheKey(Xn)),this.removeTemporaryItem(this.generateCacheKey(Zn)),this.removeTemporaryItem(this.generateCacheKey(ta)),this.removeTemporaryItem(this.generateCacheKey(ea)),this.removeTemporaryItem(this.generateCacheKey(na)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const t=this.generateStateKey(e),n=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||i.JM.EMPTY_STRING)}}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach(t=>{if(-1===t.indexOf("request.state"))return;const n=this.temporaryCacheStorage.getItem(t);if(!n)return;const a=fr(this.cryptoImpl,n);a&&a.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n))}),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=pi(JSON.stringify(e));this.setTemporaryCache($n,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache($n,!0);if(!t)throw si(Pa);let n;try{n=JSON.parse(qi(t))}catch(e){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${e}`),si(Ta)}if(this.removeTemporaryItem(this.generateCacheKey($n)),!n.authority){const t=this.generateAuthorityKey(e),a=this.getTemporaryCache(t);if(!a)throw si(Ua);n.authority=a}return n}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(na,!0);return e?this.validateAndParseJson(e)||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null):(this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${i.JM.CACHE_PREFIX}.interaction.status`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const t=`${i.JM.CACHE_PREFIX}.interaction.status`;if(e){if(this.getInteractionInProgress())throw si(Ia);this.setTemporaryCache(t,this.clientId,!1)}else e||this.getInteractionInProgress()!==this.clientId||this.removeTemporaryItem(t)}getLegacyLoginHint(){const e=this.getTemporaryCache(i.Md.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(i.Md.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(i.Md.ID_TOKEN,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(i.Md.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const n=t||e;if(n){const e=J(n,qi);if(e.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),e.preferred_username;if(e.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),e.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const n=te(t);if(e!==n){const a=this.getItem(e);if(a)return this.browserStorage.removeItem(e),this.setItem(n,a),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),n;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){const n=ne(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let a;t.claims&&(a=await this.cryptoImpl.hashString(t.claims));const i={idToken:n,accessToken:ae(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,qi,void 0,e.tokenType,void 0,t.sshKid,t.claims,a)};return this.saveCacheRecord(i)}async saveCacheRecord(e,t,n){try{await super.saveCacheRecord(e,t,n)}catch(e){if(e instanceof ot&&this.performanceClient&&n)try{const e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},n)}catch(e){}throw e}}}const _r=(e,t)=>new mr(e,{cacheLocation:Jn,temporaryCacheLocation:Jn,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},q,t);function hr(e,t,n,a){return e.verbose("getAllAccounts called"),n?t.getAllAccounts(a):[]}function br(e,t,n){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;const a=n.getAccountInfoFilteredBy(e);return a?(t.verbose("getAccount: Account matching provided filter found, returning"),a):(t.verbose("getAccount: No matching account found, returning null"),null)}function gr(e,t,n){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;const a=n.getAccountInfoFilteredBy({username:e});return a?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),a):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}function vr(e,t,n){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;const a=n.getAccountInfoFilteredBy({homeAccountId:e});return a?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),a):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function yr(e,t,n){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;const a=n.getAccountInfoFilteredBy({localAccountId:e});return a?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),a):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function Sr(e,t){t.setActiveAccount(e)}function Dr(e){return e.getActiveAccount()}const Ir="msal:initializeEnd",xr="msal:loginStart",Cr="msal:loginSuccess",Or="msal:loginFailure",wr="msal:acquireTokenStart",Er="msal:acquireTokenSuccess",Ar="msal:acquireTokenFailure",Lr="msal:acquireTokenByCodeFailure",kr="msal:handleRedirectEnd",Mr="msal:popupOpened",Pr="msal:logoutStart",Tr="msal:logoutSuccess",Ur="msal:logoutFailure",Fr="msal:logoutEnd";class Hr{constructor(e){this.eventCallbacks=new Map,this.logger=e||new a.V({})}addEventCallback(e,t,n){if("undefined"!=typeof window){const a=n||Ii();return this.eventCallbacks.has(a)?(this.logger.error(`Event callback with id: ${a} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(a,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${a}`),a)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,n,a){if("undefined"!=typeof window){const i={eventType:e,interactionType:t||null,payload:n||null,error:a||null,timestamp:Date.now()};this.eventCallbacks.forEach(([t,n],a)=>{(0===n.length||n.includes(e))&&(this.logger.verbose(`Emitting event to callback ${a}: ${e}`),t.apply(null,[i]))})}}}class Rr extends c.uR{constructor(e,t,n,a,i){super(e,t,n),this.name="ServerError",this.errorNo=a,this.status=i,Object.setPrototypeOf(this,Rr.prototype)}}class Nr{static generateThrottlingStorageKey(e){return`${i.Yw.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){const n=Nr.generateThrottlingStorageKey(t),a=e.getThrottlingCache(n);if(a){if(a.throttleTime<Date.now())return void e.removeItem(n);throw new Rr(a.errorCodes?.join(" ")||i.JM.EMPTY_STRING,a.errorMessage,a.subError)}}static postProcess(e,t,n){if(Nr.checkResponseStatus(n)||Nr.checkResponseForRetryAfter(n)){const a={throttleTime:Nr.calculateThrottleTime(parseInt(n.headers[i.BK.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(Nr.generateThrottlingStorageKey(t),a)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(i.BK.RETRY_AFTER)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(1e3*Math.min(n+(t||i.Yw.DEFAULT_THROTTLE_TIME_SECONDS),n+i.Yw.DEFAULT_MAX_THROTTLE_TIME_SECONDS))}static removeThrottle(e,t,n,a){const i={clientId:t,authority:n.authority,scopes:n.scopes,homeAccountIdentifier:a,claims:n.claims,authenticationScheme:n.authenticationScheme,resourceRequestMethod:n.resourceRequestMethod,resourceRequestUri:n.resourceRequestUri,shrClaims:n.shrClaims,sshKid:n.sshKid},r=this.generateThrottlingStorageKey(i);e.removeItem(r)}}const Br="client_id",jr="redirect_uri",Vr="response_type",zr="token_type",Gr="req_cnf",Kr="brk_client_id";class Wr{static validateRedirectUri(e){if(!e)throw Ne(ge)}static validatePrompt(e){const t=[];for(const e in i.ZM)t.push(i.ZM[e]);if(t.indexOf(e)<0)throw Ne(Ie)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw Ne(xe)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw Ne(Ee);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([i.cF.PLAIN,i.cF.S256].indexOf(e)<0)throw Ne(we)}}class qr{constructor(e,t){this.parameters=new Map,this.performanceClient=t,this.correlationId=e}addResponseTypeCode(){this.parameters.set(Vr,encodeURIComponent(i.JM.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(Vr,encodeURIComponent(`${i.JM.TOKEN_RESPONSE_TYPE} ${i.JM.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set("response_mode",encodeURIComponent(e||i.p.QUERY))}addNativeBroker(){this.parameters.set("nativebroker",encodeURIComponent("1"))}addScopes(e,t=!0,n=i.eZ){!t||n.includes("openid")||e.includes("openid")||n.push("openid");const a=t?[...e||[],...n]:e||[],r=new je(a);this.parameters.set("scope",encodeURIComponent(r.printScopes()))}addClientId(e){this.parameters.set(Br,encodeURIComponent(e))}addRedirectUri(e){Wr.validateRedirectUri(e),this.parameters.set(jr,encodeURIComponent(e))}addPostLogoutRedirectUri(e){Wr.validateRedirectUri(e),this.parameters.set("post_logout_redirect_uri",encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set("id_token_hint",encodeURIComponent(e))}addDomainHint(e){this.parameters.set("domain_hint",encodeURIComponent(e))}addLoginHint(e){this.parameters.set("login_hint",encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(i.BK.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(i.BK.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set("sid",encodeURIComponent(e))}addClaims(e,t){const n=this.addClientCapabilitiesToClaims(e,t);Wr.validateClaims(n),this.parameters.set("claims",encodeURIComponent(n))}addCorrelationId(e){this.parameters.set("client-request-id",encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set("x-client-SKU",e.sku),this.parameters.set("x-client-VER",e.version),e.os&&this.parameters.set("x-client-OS",e.os),e.cpu&&this.parameters.set("x-client-CPU",e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set("x-app-name",e.appName),e?.appVersion&&this.parameters.set("x-app-ver",e.appVersion)}addPrompt(e){Wr.validatePrompt(e),this.parameters.set("prompt",encodeURIComponent(e))}addState(e){e&&this.parameters.set("state",encodeURIComponent(e))}addNonce(e){this.parameters.set("nonce",encodeURIComponent(e))}addCodeChallengeParams(e,t){if(Wr.validateCodeChallengeParams(e,t),!e||!t)throw Ne(Ee);this.parameters.set("code_challenge",encodeURIComponent(e)),this.parameters.set("code_challenge_method",encodeURIComponent(t))}addAuthorizationCode(e){this.parameters.set("code",encodeURIComponent(e))}addDeviceCode(e){this.parameters.set("device_code",encodeURIComponent(e))}addRefreshToken(e){this.parameters.set("refresh_token",encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set("code_verifier",encodeURIComponent(e))}addClientSecret(e){this.parameters.set("client_secret",encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set("client_assertion",encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set("client_assertion_type",encodeURIComponent(e))}addOboAssertion(e){this.parameters.set("assertion",encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set("requested_token_use",encodeURIComponent(e))}addGrantType(e){this.parameters.set("grant_type",encodeURIComponent(e))}addClientInfo(){this.parameters.set(i.UR,"1")}addExtraQueryParameters(e){Object.entries(e).forEach(([e,t])=>{!this.parameters.has(e)&&t&&this.parameters.set(e,t)})}addClientCapabilitiesToClaims(e,t){let n;if(e)try{n=JSON.parse(e)}catch(e){throw Ne(xe)}else n={};return t&&t.length>0&&(n.hasOwnProperty(i.kq.ACCESS_TOKEN)||(n[i.kq.ACCESS_TOKEN]={}),n[i.kq.ACCESS_TOKEN][i.kq.XMS_CC]={values:t}),JSON.stringify(n)}addUsername(e){this.parameters.set(i.Kq.username,encodeURIComponent(e))}addPassword(e){this.parameters.set(i.Kq.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(zr,i.TO.POP),this.parameters.set(Gr,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(zr,i.TO.SSH),this.parameters.set(Gr,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set("x-client-current-telemetry",e.generateCurrentRequestHeaderValue()),this.parameters.set("x-client-last-telemetry",e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set("x-ms-lib-capability",i.Yw.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set("logout_hint",encodeURIComponent(e))}addBrokerParameters(e){const t={};t.brk_client_id=e.brokerClientId,t.brk_redirect_uri=e.brokerRedirectUri,this.addExtraQueryParameters(t)}createQueryString(){const e=new Array;return this.parameters.forEach((t,n)=>{e.push(`${n}=${t}`)}),function(e,t,n){if(!t)return;const a=e.get(Br);a&&e.has(Kr)&&n?.addFields({embeddedClientId:a,embeddedRedirectUri:e.get(jr)},t)}(this.parameters,this.correlationId,this.performanceClient),e.join("&")}}async function Qr(e,t,n,a,i,r,o){o?.addQueueMeasurement(bn,r);const s=nr.transformCIAMAuthority(ar(e)),c=new nr(s,t,n,a,i,r,o);try{return await er(c.resolveEndpointsAsync.bind(c),gn,i,o,r)(),c}catch(e){throw W(p)}}class Yr{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:n,cacheOptions:i,storageInterface:r,networkInterface:o,cryptoInterface:s,clientCredentials:c,libraryInfo:d,telemetry:l,serverTelemetryManager:u,persistencePlugin:f,serializableCache:p}){const m={...lt,...n};return{authOptions:(_=e,{clientCapabilities:[],azureCloudOptions:_t,skipAuthorityMetadataCache:!1,instanceAware:!1,..._}),systemOptions:{...dt,...t},loggerOptions:m,cacheOptions:{...ut,...i},storageInterface:r||new ct(e.clientId,q,new a.V(m)),networkInterface:o||ft,cryptoInterface:s||q,clientCredentials:c||mt,libraryInfo:{...pt,...d},telemetry:{...ht,...l},serverTelemetryManager:u||null,persistencePlugin:f||null,serializableCache:p||null};var _}(e),this.logger=new a.V(this.config.loggerOptions,Q,Y),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[i.BK.CONTENT_TYPE]=i.JM.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case cr:try{const n=ze(e.credential);t[i.BK.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case dr:t[i.BK.CCS_HEADER]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,n,a,i,r){r&&this.performanceClient?.addQueueMeasurement(r,i);const o=await this.sendPostRequest(a,e,{body:t,headers:n},i);return this.config.serverTelemetryManager&&o.status<500&&429!==o.status&&this.config.serverTelemetryManager.clearTelemetryCache(),o}async sendPostRequest(e,t,n,a){let r;Nr.preProcess(this.cacheManager,e);try{r=await er(this.networkClient.sendPostRequestAsync.bind(this.networkClient),Tt,this.logger,this.performanceClient,a)(t,n);const e=r.headers||{};this.performanceClient?.addFields({refreshTokenSize:r.body.refresh_token?.length||0,httpVerToken:e[i.BK.X_MS_HTTP_VERSION]||"",requestId:e[i.BK.X_MS_REQUEST_ID]||""},a)}catch(e){if(e instanceof pa){const t=e.responseHeaders;throw t&&this.performanceClient?.addFields({httpVerToken:t[i.BK.X_MS_HTTP_VERSION]||"",requestId:t[i.BK.X_MS_REQUEST_ID]||"",contentTypeHeader:t[i.BK.CONTENT_TYPE]||void 0,contentLengthHeader:t[i.BK.CONTENT_LENGTH]||void 0,httpStatus:e.httpStatus},a),e.error}throw e instanceof c.uR?e:W(m)}return Nr.postProcess(this.cacheManager,e,r),r}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(cn,t);const n=`https://${e}/${this.authority.tenant}/`,a=await Qr(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=a}createTokenQueryParameters(e){const t=new qr(e.correlationId,this.performanceClient);return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.addCorrelationId(e.correlationId),t.createQueryString()}}class Jr{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(pn,e.correlationId);const n=await er(this.generateKid.bind(this),pn,t,this.performanceClient,e.correlationId)(e),a=this.cryptoUtils.base64UrlEncode(JSON.stringify(n));return{kid:n.kid,reqCnfString:a}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(mn,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,a){const{resourceRequestMethod:i,resourceRequestUri:r,shrClaims:o,shrNonce:s,shrOptions:c}=n,d=(r?new Xe(r):void 0)?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:Z(),m:i?.toUpperCase(),u:d?.HostNameAndPort,nonce:s||this.cryptoUtils.createNewGuid(),p:d?.AbsolutePath,q:d?.QueryString?[[],d.QueryString]:void 0,client_claims:o||void 0,...a},t,c,n.correlationId)}}class Xr{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class Zr{constructor(e,t,n,a,i,r,o){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=a,this.serializableCache=i,this.persistencePlugin=r,this.performanceClient=o}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?W(v,"Cached State"):W(v,"Server State");let n,a;try{n=decodeURIComponent(e.state)}catch(t){throw W(b,e.state)}try{a=decodeURIComponent(t)}catch(t){throw W(b,e.state)}if(n!==a)throw W(g);if(e.error||e.error_description||e.suberror){const t=function(e){const t="code=",n=e.error_uri?.lastIndexOf(t);return n&&n>=0?e.error_uri?.substring(n+t.length):void 0}(e);if((0,rr.a)(e.error,e.error_description,e.suberror))throw new rr.EB(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new Rr(e.error||"",e.error_description,e.suberror,t)}}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const n=`Error(s): ${e.error_codes||i.JM.NOT_AVAILABLE} - Timestamp: ${e.timestamp||i.JM.NOT_AVAILABLE} - Description: ${e.error_description||i.JM.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||i.JM.NOT_AVAILABLE} - Trace ID: ${e.trace_id||i.JM.NOT_AVAILABLE}`,a=e.error_codes?.length?e.error_codes[0]:void 0,r=new Rr(e.error,n,e.suberror,a,e.status);if(t&&e.status&&e.status>=i.v3.SERVER_ERROR_RANGE_START&&e.status<=i.v3.SERVER_ERROR_RANGE_END)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${r}`);if(t&&e.status&&e.status>=i.v3.CLIENT_ERROR_RANGE_START&&e.status<=i.v3.CLIENT_ERROR_RANGE_END)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${r}`);if((0,rr.a)(e.error,e.error_description,e.suberror))throw new rr.EB(e.error,e.error_description,e.suberror,e.timestamp||i.JM.EMPTY_STRING,e.trace_id||i.JM.EMPTY_STRING,e.correlation_id||i.JM.EMPTY_STRING,e.claims||i.JM.EMPTY_STRING,a);throw r}}async handleServerTokenResponse(e,t,n,a,r,o,s,c,d){let l,u;if(this.performanceClient?.addQueueMeasurement(_n,e.correlation_id),e.id_token){if(l=J(e.id_token||i.JM.EMPTY_STRING,this.cryptoObj.base64Decode),r&&r.nonce&&l.nonce!==r.nonce)throw W(y);if(a.maxAge||0===a.maxAge){const e=l.auth_time;if(!e)throw W(S);X(e,a.maxAge)}}this.homeAccountIdentifier=Qe.generateHomeAccountId(e.client_info||i.JM.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,l),r&&r.state&&(u=sr.parseRequestState(this.cryptoObj,r.state)),e.key_id=e.key_id||a.sshKid||void 0;const f=this.generateCacheRecord(e,t,n,a,l,o,r);let p;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),p=new Xr(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(p)),s&&!c&&f.account){const e=f.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await Zr.generateAuthenticationResult(this.cryptoObj,t,f,!1,a,l,u,void 0,d)}await this.cacheStorage.saveCacheRecord(f,a.storeInCache,a.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&p&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(p))}return Zr.generateAuthenticationResult(this.cryptoObj,t,f,!1,a,l,u,e,d)}generateCacheRecord(e,t,n,a,i,r,o){const s=t.getPreferredCache();if(!s)throw W(L);const c=qe(i);let d,l;e.id_token&&i&&(d=ne(this.homeAccountIdentifier,s,e.id_token,this.clientId,c||""),l=$r(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,i,e.client_info,s,c,o,void 0,this.logger));let u=null;if(e.access_token){const i=e.scope?je.fromString(e.scope):new je(a.scopes||[]),o=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,d=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,l=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,f=n+o,p=f+d,m=l&&l>0?n+l:void 0;u=ae(this.homeAccountIdentifier,s,e.access_token,this.clientId,c||t.tenant||"",i.printScopes(),f,p,this.cryptoObj.base64Decode,m,e.token_type,r,e.key_id,a.claims,a.requestedClaimsHash)}let f=null;if(e.refresh_token){let t;e.refresh_token_expires_in&&(t=n+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)),f=ie(this.homeAccountIdentifier,s,e.refresh_token,this.clientId,e.foci,r,t)}let p=null;return e.foci&&(p={clientId:this.clientId,environment:s,familyId:e.foci}),{account:l,idToken:d,accessToken:u,refreshToken:f,appMetadata:p}}static async generateAuthenticationResult(e,t,n,a,r,o,s,c,d){let l,u,f=i.JM.EMPTY_STRING,p=[],m=null,_=i.JM.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType!==i.TO.POP||r.popKid)f=n.accessToken.secret;else{const t=new Jr(e),{secret:a,keyId:i}=n.accessToken;if(!i)throw W(N);f=await t.signPopToken(a,i,r)}p=je.fromString(n.accessToken.target).asArray(),m=new Date(1e3*Number(n.accessToken.expiresOn)),l=new Date(1e3*Number(n.accessToken.extendedExpiresOn)),n.accessToken.refreshOn&&(u=new Date(1e3*Number(n.accessToken.refreshOn)))}n.appMetadata&&(_=n.appMetadata.familyId===i.sB?i.sB:"");const h=o?.oid||o?.sub||"",b=o?.tid||"";c?.spa_accountid&&n.account&&(n.account.nativeAccountId=c?.spa_accountid);const g=n.account?We(n.account.getAccountInfo(),void 0,o,n.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:h,tenantId:b,scopes:p,account:g,idToken:n?.idToken?.secret||"",idTokenClaims:o||{},accessToken:f,fromCache:a,expiresOn:m,extExpiresOn:l,refreshOn:u,correlationId:r.correlationId,requestId:d||i.JM.EMPTY_STRING,familyId:_,tokenType:n.accessToken?.tokenType||i.JM.EMPTY_STRING,state:s?s.userRequestState:i.JM.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||i.JM.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||i.JM.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function $r(e,t,n,a,i,r,o,s,c,d,l){l?.verbose("setCachedAccount called");const u=e.getAccountKeys().find(e=>e.startsWith(n));let f=null;u&&(f=e.getAccount(u,l));const p=f||Qe.createAccount({homeAccountId:n,idTokenClaims:i,clientInfo:r,environment:o,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:d},t,a),m=p.tenantProfiles||[],_=s||p.realm;if(_&&!m.find(e=>e.tenantId===_)){const e=Ke(n,p.localAccountId,_,i);m.push(e)}return p.tenantProfiles=m,p}async function eo(e,t,n){return"string"==typeof e?e:e({clientId:t,tokenEndpoint:n})}class to extends Yr{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(rn,e.correlationId);const t=await er(this.createAuthCodeUrlQueryString.bind(this),fn,this.logger,this.performanceClient,e.correlationId)(e);return Xe.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(dn,e.correlationId),!e.code)throw W(x);const n=Z(),a=await er(this.executeTokenRequest.bind(this),ln,this.logger,this.performanceClient,e.correlationId)(this.authority,e),r=a.headers?.[i.BK.X_MS_REQUEST_ID],o=new Zr(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return o.validateTokenResponse(a.body),er(o.handleServerTokenResponse.bind(o),_n,this.logger,this.performanceClient,e.correlationId)(a.body,this.authority,n,e,t,void 0,void 0,void 0,r)}handleFragmentResponse(e,t){if(new Zr(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw W(F);return e}getLogoutUri(e){if(!e)throw Ne(Oe);const t=this.createLogoutUrlQueryString(e);return Xe.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(ln,t.correlationId);const n=this.createTokenQueryParameters(t),a=Xe.appendQueryString(e.tokenEndpoint,n),r=await er(this.createTokenRequestBody.bind(this),un,this.logger,this.performanceClient,t.correlationId)(t);let o;if(t.clientInfo)try{const e=Ve(t.clientInfo,this.cryptoUtils.base64Decode);o={credential:`${e.uid}${i.HR.CLIENT_INFO_SEPARATOR}${e.utid}`,type:cr}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const s=this.createTokenRequestHeaders(o||t.ccsCredential),c={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return er(this.executePostToTokenEndpoint.bind(this),Ft,this.logger,this.performanceClient,t.correlationId)(a,r,s,c,t.correlationId,Ft)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(un,e.correlationId);const t=new qr(e.correlationId,this.performanceClient);if(t.addClientId(e.embeddedClientId||e.tokenBodyParameters?.client_id||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):Wr.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!bt(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const n=this.config.clientCredentials.clientAssertion;t.addClientAssertion(await eo(n.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),t.addClientAssertionType(n.assertionType)}if(t.addGrantType(i.$x.AUTHORIZATION_CODE_GRANT),t.addClientInfo(),e.authenticationScheme===i.TO.POP){const n=new Jr(this.cryptoUtils,this.performanceClient);let a;a=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await er(n.generateCnf.bind(n),pn,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(a)}else if(e.authenticationScheme===i.TO.SSH){if(!e.sshJwk)throw Ne(Me);t.addSshJwk(e.sshJwk)}let n;if((!Be.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=Ve(e.clientInfo,this.cryptoUtils.base64Decode);n={credential:`${t.uid}${i.HR.CLIENT_INFO_SEPARATOR}${t.utid}`,type:cr}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else n=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&n)switch(n.type){case cr:try{const e=ze(n.credential);t.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case dr:t.addCcsUpn(n.credential)}return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters.return_spa_code||t.addExtraQueryParameters({return_spa_code:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){const t=e.correlationId||this.config.cryptoInterface.createNewGuid();this.performanceClient?.addQueueMeasurement(fn,t);const n=new qr(t,this.performanceClient);n.addClientId(e.embeddedClientId||e.extraQueryParameters?.client_id||this.config.authOptions.clientId);const a=[...e.scopes||[],...e.extraScopesToConsent||[]];if(n.addScopes(a,!0,this.oidcDefaultScopes),n.addRedirectUri(e.redirectUri),n.addCorrelationId(t),n.addResponseMode(e.responseMode),n.addResponseTypeCode(),n.addLibraryInfo(this.config.libraryInfo),bt(this.config)||n.addApplicationTelemetry(this.config.telemetry.application),n.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&n.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&n.addPrompt(e.prompt),e.domainHint&&n.addDomainHint(e.domainHint),e.prompt!==i.ZM.SELECT_ACCOUNT)if(e.sid&&e.prompt===i.ZM.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),n.addSid(e.sid);else if(e.account){const t=this.extractAccountSid(e.account);let a=this.extractLoginHint(e.account);if(a&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),a=null),a){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),n.addLoginHint(a);try{const t=ze(e.account.homeAccountId);n.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(t&&e.prompt===i.ZM.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),n.addSid(t);try{const t=ze(e.account.homeAccountId);n.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),n.addLoginHint(e.loginHint),n.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),n.addLoginHint(e.account.username);try{const t=ze(e.account.homeAccountId);n.addCcsOid(t)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),n.addLoginHint(e.loginHint),n.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&n.addNonce(e.nonce),e.state&&n.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.embeddedClientId&&n.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),this.addExtraQueryParams(e,n),e.nativeBroker&&(n.addNativeBroker(),e.authenticationScheme===i.TO.POP)){const t=new Jr(this.cryptoUtils);let a;a=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await er(t.generateCnf.bind(t),pn,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,n.addPopToken(a)}return n.createQueryString()}createLogoutUrlQueryString(e){const t=new qr(e.correlationId,this.performanceClient);return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}class no{constructor(e,t){this.cacheOutcome=i.zv.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||i.JM.EMPTY_STRING,this.wrapperVer=e.wrapperVer||i.JM.EMPTY_STRING,this.telemetryCacheKey=i.oT.CACHE_KEY+i.HR.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${i.oT.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],n=this.getNativeBrokerErrorCode();n?.length&&t.push(`broker_error=${n}`);const a=t.join(i.oT.VALUE_SEPARATOR),r=[e,this.getRegionDiscoveryFields()].join(i.oT.VALUE_SEPARATOR);return[i.oT.SCHEMA_VERSION,r,a].join(i.oT.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=no.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(i.oT.VALUE_SEPARATOR),a=e.errors.slice(0,t).join(i.oT.VALUE_SEPARATOR),r=e.errors.length,o=[r,t<r?i.oT.OVERFLOW_TRUE:i.oT.OVERFLOW_FALSE].join(i.oT.VALUE_SEPARATOR);return[i.oT.SCHEMA_VERSION,e.cacheHits,n,a,o].join(i.oT.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=i.oT.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof c.uR?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(i.oT.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){const e=this.getLastRequests(),t=no.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{const n={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,n)}}static maxErrorsToSend(e){let t,n=0,a=0;const r=e.errors.length;for(t=0;t<r;t++){const r=e.failedRequests[2*t]||i.JM.EMPTY_STRING,o=e.failedRequests[2*t+1]||i.JM.EMPTY_STRING,s=e.errors[t]||i.JM.EMPTY_STRING;if(a+=r.toString().length+o.toString().length+s.length+3,!(a<i.oT.MAX_LAST_HEADER_BYTES))break;n+=1}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||i.JM.EMPTY_STRING),e.push(this.regionSource||i.JM.EMPTY_STRING),e.push(this.regionOutcome||i.JM.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return function(e){const{skus:t,libraryName:n,libraryVersion:a,extensionName:i,extensionVersion:r}=e,o=new Map([[0,[n,a]],[2,[i,r]]]);let s=[];if(t?.length){if(s=t.split(","),s.length<4)return t}else s=Array.from({length:4},()=>"|");return o.forEach((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){const{skuArr:t,index:n,skuName:a,skuVersion:i}=e;n>=t.length||(t[n]=[a,i].join("|"))}({skuArr:s,index:t,skuName:e[0],skuVersion:e[1]})}),s.join(",")}(e)}}class ao{constructor(e,t,n,a,i,r,o,s,c){this.config=e,this.browserStorage=t,this.browserCrypto=n,this.networkClient=this.config.system.networkClient,this.eventHandler=i,this.navigationClient=r,this.nativeMessageHandler=s,this.correlationId=c||Ii(),this.logger=a.clone(zn,Ri,this.correlationId),this.performanceClient=o}async clearCacheOnLogout(e){if(e){Qe.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(Qe.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return Xe.getAbsoluteUrl(t,Mi())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const n={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new no(n,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,n=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(kt,this.correlationId);const a={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},i=e.requestAuthority||this.config.auth.authority,r=n?.length?"true"===n:this.config.auth.instanceAware,o=t&&r?this.config.auth.authority.replace(Xe.getDomainFromUrl(i),t.environment):i,s=nr.generateAuthority(o,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await er(Qr,bn,this.logger,this.performanceClient,this.correlationId)(s,this.config.system.networkClient,this.browserStorage,a,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw Ne(Fe);return c}}async function io(e,t,n){e.addQueueMeasurement(Tn,n);const a=$i(ro,Un,t,e,n)(e,t,n);return{verifier:a,challenge:await er(oo,Fn,t,e,n)(a,e,t,n)}}function ro(e,t,n){try{const a=new Uint8Array(32);return $i(Si,Rn,t,e,n)(a),fi(a)}catch(e){throw si(_a)}}async function oo(e,t,n,a){t.addQueueMeasurement(Fn,a);try{const i=await er(yi,Hn,n,t,a)(e,t,a);return fi(new Uint8Array(i))}catch(e){throw si(_a)}}async function so(e,t,n,a){n.addQueueMeasurement(Wt,e.correlationId);const r=e.authority||t.auth.authority,o=[...e&&e.scopes||[]],s={...e,correlationId:e.correlationId,authority:r,scopes:o};if(s.authenticationScheme){if(s.authenticationScheme===i.TO.SSH){if(!e.sshJwk)throw Ne(Me);if(!e.sshKid)throw Ne(Pe)}a.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}else s.authenticationScheme=i.TO.BEARER,a.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!Be.isEmptyObj(e.claims)&&(s.requestedClaimsHash=await Ci(e.claims)),s}async function co(e,t,n,a,i){a.addQueueMeasurement(qt,e.correlationId);const r=await er(so,Wt,i,a,e.correlationId)(e,n,a,i);return{...e,...r,account:t,forceRefresh:e.forceRefresh||!1}}class lo extends ao{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(an,this.correlationId);const t=await er(io,Tn,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...e,redirectUri:e.redirectUri,code:i.JM.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=i.JM.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||Ii(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const n=this.getLogoutHintFromIdTokenClaims(e.account);n&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=n)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=Xe.getAbsoluteUrl(e.postLogoutRedirectUri,Mi())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=Xe.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,Mi())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=Xe.getAbsoluteUrl(Mi(),Mi())),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(en,this.correlationId);const t=await er(this.getClientConfiguration.bind(this),tn,this.logger,this.performanceClient,this.correlationId)(e);return new to(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:n,requestAzureCloudOptions:a,requestExtraQueryParameters:r,account:o}=e;this.performanceClient.addQueueMeasurement(tn,this.correlationId);const s=await er(this.getDiscoveredAuthority.bind(this),kt,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:a,requestExtraQueryParameters:r,account:o}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:s,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:zn,version:Ri,cpu:i.JM.EMPTY_STRING,os:i.JM.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(nn,this.correlationId);const n=this.getRedirectUri(e.redirectUri),a={interactionType:t},r=sr.setRequestState(this.browserCrypto,e&&e.state||i.JM.EMPTY_STRING,a),o={...await er(so,Wt,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:r,nonce:e.nonce||Ii(),responseMode:this.config.auth.OIDCOptions.serverResponseType};if(e.loginHint||e.sid)return o;const s=e.account||this.browserStorage.getActiveAccount();if(s&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${s.homeAccountId}`,this.correlationId),o.account=s),!o.loginHint&&!s){const e=this.browserStorage.getLegacyLoginHint();e&&(o.loginHint=e)}return o}}var uo=n(8975);const fo="user_switch",po={[fo]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class mo extends c.uR{constructor(e,t,n){super(e,t),Object.setPrototypeOf(this,mo.prototype),this.name="NativeAuthError",this.ext=n}}function _o(e){return!(!e.ext||!e.ext.status||"PERSISTENT_ERROR"!==e.ext.status&&"DISABLED"!==e.ext.status)||!(!e.ext||!e.ext.error||-2147186943!==e.ext.error)||"ContentError"===e.errorCode}function ho(e,t,n){if(n&&n.status)switch(n.status){case"ACCOUNT_UNAVAILABLE":return(0,rr.TE)(or.B);case"USER_INTERACTION_REQUIRED":return new rr.EB(e,t);case"USER_CANCEL":return si(Oa);case"NO_NETWORK":return si(Ra)}return new mo(e,po[e]||t,n)}class bo extends Yr{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(Rt,e.correlationId);const t=Z(),n=await er(this.executeTokenRequest.bind(this),Ht,this.logger,this.performanceClient,e.correlationId)(e,this.authority),a=n.headers?.[i.BK.X_MS_REQUEST_ID],r=new Zr(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return r.validateTokenResponse(n.body),er(r.handleServerTokenResponse.bind(r),_n,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,a)}async acquireTokenByRefreshToken(e){if(!e)throw Ne(Ce);if(this.performanceClient?.addQueueMeasurement(Bt,e.correlationId),!e.account)throw W(E);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await er(this.acquireTokenWithCachedRefreshToken.bind(this),Nt,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(t){const n=t instanceof rr.EB&&t.errorCode===or.mF,a=t instanceof Rr&&t.errorCode===i.I.INVALID_GRANT_ERROR&&t.subError===i.I.CLIENT_MISMATCH_ERROR;if(n||a)return er(this.acquireTokenWithCachedRefreshToken.bind(this),Nt,this.logger,this.performanceClient,e.correlationId)(e,!1);throw t}return er(this.acquireTokenWithCachedRefreshToken.bind(this),Nt,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(Nt,e.correlationId);const n=$i(this.cacheManager.getRefreshToken.bind(this.cacheManager),Pn,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!n)throw(0,rr.TE)(or.mF);if(n.expiresOn&&$(n.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw(0,rr.TE)(or.OG);const a={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||i.TO.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:cr}};try{return await er(this.acquireToken.bind(this),Rt,this.logger,this.performanceClient,e.correlationId)(a)}catch(e){if(e instanceof rr.EB&&e.subError===or.d9){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const e=te(n);this.cacheManager.removeRefreshToken(e)}throw e}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(Ht,e.correlationId);const n=this.createTokenQueryParameters(e),a=Xe.appendQueryString(t.tokenEndpoint,n),i=await er(this.createTokenRequestBody.bind(this),jt,this.logger,this.performanceClient,e.correlationId)(e),r=this.createTokenRequestHeaders(e.ccsCredential),o={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return er(this.executePostToTokenEndpoint.bind(this),Ut,this.logger,this.performanceClient,e.correlationId)(a,i,r,o,e.correlationId,Ut)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(jt,e.correlationId);const t=e.correlationId,n=new qr(t,this.performanceClient);if(n.addClientId(e.embeddedClientId||e.tokenBodyParameters?.client_id||this.config.authOptions.clientId),e.redirectUri&&n.addRedirectUri(e.redirectUri),n.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),n.addGrantType(i.$x.REFRESH_TOKEN_GRANT),n.addClientInfo(),n.addLibraryInfo(this.config.libraryInfo),n.addApplicationTelemetry(this.config.telemetry.application),n.addThrottling(),this.serverTelemetryManager&&!bt(this.config)&&n.addServerTelemetry(this.serverTelemetryManager),n.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&n.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const t=this.config.clientCredentials.clientAssertion;n.addClientAssertion(await eo(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),n.addClientAssertionType(t.assertionType)}if(e.authenticationScheme===i.TO.POP){const t=new Jr(this.cryptoUtils,this.performanceClient);let a;a=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await er(t.generateCnf.bind(t),pn,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,n.addPopToken(a)}else if(e.authenticationScheme===i.TO.SSH){if(!e.sshJwk)throw Ne(Me);n.addSshJwk(e.sshJwk)}if((!Be.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case cr:try{const t=ze(e.ccsCredential.credential);n.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case dr:n.addCcsUpn(e.ccsCredential.credential)}return e.embeddedClientId&&n.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&n.addExtraQueryParameters(e.tokenBodyParameters),n.createQueryString()}}class go extends Yr{constructor(e,t){super(e,t)}async acquireToken(e){try{const[t,n]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...i.eZ]});return n===i.zv.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new bo(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),t}catch(t){if(t instanceof K&&t.errorCode===T)return new bo(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(zt,e.correlationId);let t=i.zv.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!Be.isEmptyObj(e.claims))throw this.setCacheOutcome(i.zv.FORCE_REFRESH_OR_CLAIMS,e.correlationId),W(T);if(!e.account)throw W(E);const n=e.account.tenantId||function(e){const t=new Xe(e).getUrlComponents().PathSegments.slice(-1)[0]?.toLowerCase();switch(t){case i.S2.COMMON:case i.S2.ORGANIZATIONS:case i.S2.CONSUMERS:return;default:return t}}(e.authority),a=this.cacheManager.getTokenKeys(),r=this.cacheManager.getAccessToken(e.account,e,a,n,this.performanceClient,e.correlationId);if(!r)throw this.setCacheOutcome(i.zv.NO_CACHED_ACCESS_TOKEN,e.correlationId),W(T);if(ee(r.cachedAt)||$(r.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(i.zv.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),W(T);r.refreshOn&&$(r.refreshOn,0)&&(t=i.zv.PROACTIVELY_REFRESHED);const o=e.authority||this.authority.getPreferredCache(),s={account:this.cacheManager.readAccountFromCache(e.account),accessToken:r,idToken:this.cacheManager.getIdToken(e.account,a,n,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(o)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await er(this.generateResultFromCacheRecord.bind(this),Gt,this.logger,this.performanceClient,e.correlationId)(s,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==i.zv.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let n;if(this.performanceClient?.addQueueMeasurement(Gt,t.correlationId),e.idToken&&(n=J(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=n?.auth_time;if(!e)throw W(S);X(e,t.maxAge)}return Zr.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}class vo extends lo{async acquireToken(e){this.performanceClient.addQueueMeasurement(wt,e.correlationId);const t=this.initializeServerTelemetryManager(61),n=await er(this.getClientConfiguration.bind(this),tn,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),a=new go(n,this.performanceClient);this.logger.verbose("Silent auth client created");try{const t=(await er(a.acquireCachedToken.bind(a),zt,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof oi&&e.errorCode===za&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}}class yo extends ao{constructor(e,t,n,a,i,r,o,s,c,d,l,u){super(e,t,n,a,i,r,s,c,u),this.apiId=o,this.accountId=d,this.nativeMessageHandler=c,this.nativeStorageManager=l,this.silentCacheClient=new vo(e,this.nativeStorageManager,n,a,i,r,s,c,u),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);const f=this.nativeMessageHandler.getExtensionId()===Kn?"chrome":this.nativeMessageHandler.getExtensionId()?.length?"unknown":void 0;this.skus=no.makeExtraSkuString({libraryName:zn,libraryVersion:Ri,extensionName:f,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,"x-client-xtra-sku":this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(Pt,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(Pt,e.correlationId),n=Z();try{const a=await this.initializeNativeRequest(e);try{const e=await this.acquireTokensFromCache(this.accountId,a);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const{...i}=a,r={method:qn,request:i},o=await this.nativeMessageHandler.sendMessage(r),s=this.validateNativeResponse(o);return await this.handleNativeResponse(s,a,n).then(e=>(t.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),e)).catch(e=>{throw t.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e})}catch(e){throw e instanceof mo&&this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:je.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),W(k);const n=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!n)throw W(k);try{const e=this.createSilentCacheRequest(t,n),a=await this.silentCacheClient.acquireToken(e),i={...n,idTokenClaims:a?.idTokenClaims,idToken:a?.idToken};return{...a,account:i}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...n}=e;delete n.onRedirectNavigate;const a=await this.initializeNativeRequest(n),i={method:qn,request:a};try{const e=await this.nativeMessageHandler.sendMessage(i);this.validateNativeResponse(e)}catch(e){if(e instanceof mo&&(this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),_o(e)))throw e}this.browserStorage.setTemporaryCache(na,JSON.stringify(a),!0);const r={apiId:oa,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},o=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(o,r)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const n=this.browserStorage.getCachedNativeRequest();if(!n)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:a,...i}=n;a&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(na));const r={method:qn,request:i},o=Z();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const e=await this.nativeMessageHandler.sendMessage(r);this.validateNativeResponse(e);const t=this.handleNativeResponse(e,i,o);this.browserStorage.setInteractionInProgress(!1);const n=await t;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),n}catch(e){throw this.browserStorage.setInteractionInProgress(!1),e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,n){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const a=J(e.id_token,qi),i=this.createHomeAccountIdentifier(e,a),r=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId})?.homeAccountId;if(i!==r&&e.account.id!==t.accountId)throw ho(fo);const o=await this.getDiscoveredAuthority({requestAuthority:t.authority}),s=$r(this.browserStorage,o,i,qi,a,e.client_info,void 0,a.tid,void 0,e.account.id,this.logger),c=await this.generateAuthenticationResult(e,t,a,s,o.canonicalAuthority,n);return this.cacheAccount(s),this.cacheNativeTokens(e,t,i,a,e.access_token,c.tenantId,n),c}createHomeAccountIdentifier(e,t){return Qe.generateHomeAccountId(e.client_info||i.JM.EMPTY_STRING,0,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?je.fromString(e.scope):je.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===i.TO.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const n=new Jr(this.browserCrypto),a={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw W(N);return n.signPopToken(e.access_token,t.keyId,a)}return e.access_token}async generateAuthenticationResult(e,t,n,a,r,o){const s=this.addTelemetryFromNativeResponse(e),c=e.scope?je.fromString(e.scope):je.fromString(t.scope),d=e.account.properties||{},l=d.UID||n.oid||n.sub||i.JM.EMPTY_STRING,u=d.TenantId||n.tid||i.JM.EMPTY_STRING,f=We(a.getAccountInfo(),void 0,n,e.id_token);f.nativeAccountId!==e.account.id&&(f.nativeAccountId=e.account.id);const p=await this.generatePopAccessToken(e,t),m=t.tokenType===i.TO.POP?i.TO.POP:i.TO.BEARER;return{authority:r,uniqueId:l,tenantId:u,scopes:c.asArray(),account:f,idToken:e.id_token,idTokenClaims:n,accessToken:p,fromCache:!!s&&this.isResponseFromCache(s),expiresOn:new Date(1e3*Number(o+e.expires_in)),tokenType:m,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(e=>{this.logger.error(`Error occurred while removing account context from browser storage. ${e}`)})}cacheNativeTokens(e,t,n,a,r,o,s){const c=ne(n,t.authority,e.id_token||"",t.clientId,a.tid||""),d=s+(t.tokenType===i.TO.POP?i.JM.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0),l=this.generateScopes(e,t),u={idToken:c,accessToken:ae(n,t.authority,r,t.clientId,a.tid||o,l.printScopes(),d,0,qi,void 0,t.tokenType,void 0,t.keyId)};this.nativeStorageManager.saveCacheRecord(u,t.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw(0,c._z)(uo.W,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const n=new Xe(t);n.validateAsUri();const{scopes:a,...r}=e,o=new je(a||[]);o.appendScopes(i.eZ);const s={...r,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:o.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:(()=>{switch(this.apiId){case 863:case 61:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),i.ZM.NONE}if(e.prompt)switch(e.prompt){case i.ZM.NONE:case i.ZM.CONSENT:case i.ZM.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),si($a)}else this.logger.trace("initializeNativeRequest: prompt was not provided")})(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(s.signPopToken&&e.popKid)throw si(ti);if(this.handleExtraBrokerParams(s),s.extraParameters=s.extraParameters||{},s.extraParameters.telemetry="MATS",e.authenticationScheme===i.TO.POP){const t={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},n=new Jr(this.browserCrypto);let a;if(s.keyId)a=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:s.keyId})),s.signPopToken=!1;else{const i=await er(n.generateCnf.bind(n),pn,this.logger,this.performanceClient,e.correlationId)(t,this.logger);a=i.reqCnfString,s.keyId=i.kid,s.signPopToken=!0}s.reqCnf=a}return this.addRequestSKUs(s),s}handleExtraBrokerParams(e){const t=e.extraParameters&&e.extraParameters.hasOwnProperty(Kr)&&e.extraParameters.hasOwnProperty("brk_redirect_uri")&&e.extraParameters.hasOwnProperty(Br);if(!e.embeddedClientId&&!t)return;let n="";const a=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,n=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters.brk_redirect_uri,n=e.extraParameters.client_id),e.extraParameters={child_client_id:n,child_redirect_uri:a},this.performanceClient?.addFields({embeddedClientId:n,embeddedRedirectUri:a},e.correlationId)}}class So{constructor(e,t,n,a){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=a,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=n,this.handshakeEvent=n.startMeasurement(Ln)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:Gn,extensionId:this.extensionId,responseId:Ii(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((e,n)=>{this.resolvers.set(t.responseId,{resolve:e,reject:n})})}static async createProvider(e,t,n){e.trace("NativeMessageHandler - createProvider called.");try{const a=new So(e,t,n,Kn);return await a.sendHandshakeRequest(),a}catch(a){const i=new So(e,t,n);return await i.sendHandshakeRequest(),i}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:Gn,extensionId:this.extensionId,responseId:Ii(),body:{method:Wn}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,n)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:n}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),n(si(Ya)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(t.channel&&t.channel===Gn&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===Wn){const e=this.handshakeResolvers.get(t.responseId);if(!e)return void this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(si(Ja))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,n=this.resolvers.get(t.responseId),a=this.handshakeResolvers.get(t.responseId);try{const e=t.body.method;if("Response"===e){if(!n)return;const e=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)n.reject(ho(e.code,e.description,e.ext));else{if(!e.result)throw(0,c._z)(uo.W,"Event does not contain result.");e.result.code&&e.result.description?n.reject(ho(e.result.code,e.result.description,e.result.ext)):n.resolve(e.result)}this.resolvers.delete(t.responseId)}else if("HandshakeResponse"===e){if(!a)return void this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),a.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),n?n.reject(t):a&&a.reject(t)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,n,a){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!n)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(a)switch(a){case i.TO.BEARER:case i.TO.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}class Do{constructor(e,t,n,a,i){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=a,this.performanceClient=i}async handleCodeResponse(e,t){let n;this.performanceClient.addQueueMeasurement(sn,t.correlationId);try{n=this.authModule.handleFragmentResponse(e,t.state)}catch(e){throw e instanceof Rr&&e.subError===Oa?si(Oa):e}return er(this.handleCodeResponseFromServer.bind(this),on,this.logger,this.performanceClient,t.correlationId)(n,t)}async handleCodeResponseFromServer(e,t,n=!0){if(this.performanceClient.addQueueMeasurement(on,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await er(this.authModule.updateAuthority.bind(this.authModule),cn,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),n&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await er(this.authModule.acquireToken.bind(this.authModule),dn,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:cr}:e.loginHint?{credential:e.loginHint,type:dr}:null}}function Io(e,t,n){const a=Je(e);if(!a)throw Ye(e)?(n.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),n.errorPii(`The ${t} detected is: ${e}`),si(ya)):(n.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),si(ga));return a}class xo extends lo{constructor(e,t,n,a,i,r,o,s,c,d){super(e,t,n,a,i,r,o,c,d),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=s}acquireToken(e){try{const t={popupName:this.generatePopupName(e.scopes||i.eZ,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),t.popup=this.openSizedPopup("about:blank",t),this.acquireTokenPopupAsync(e,t))}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),n={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},a=e&&e.authority,i=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,n,a,i)):(this.logger.verbose("asyncPopup set to false, opening popup"),n.popup=this.openSizedPopup("about:blank",n),this.logoutPopupAsync(t,n,a,i))}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(e,t){this.logger.verbose("acquireTokenPopupAsync called");const n=this.initializeServerTelemetryManager(sa),a=await er(this.initializeAuthorizationRequest.bind(this),nn,this.logger,this.performanceClient,this.correlationId)(e,ca.Popup);Hi(a.authority);try{const i=await er(this.initializeAuthorizationCodeRequest.bind(this),an,this.logger,this.performanceClient,this.correlationId)(a),r=await er(this.createAuthCodeClient.bind(this),en,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:a.authority,requestAzureCloudOptions:a.azureCloudOptions,requestExtraQueryParameters:a.extraQueryParameters,account:a.account}),o=So.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let s;o&&(s=this.performanceClient.startMeasurement(Mt,e.correlationId));const c=await r.getAuthCodeUrl({...a,nativeBroker:o}),d=new Do(r,this.browserStorage,i,this.logger,this.performanceClient),l=this.initiateAuthRequest(c,t);this.eventHandler.emitEvent(Mr,ca.Popup,{popupWindow:l},null);const u=await this.monitorPopupForHash(l,t.popupWindowParent),f=$i(Io,hn,this.logger,this.performanceClient,this.correlationId)(u,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(Nr.removeThrottle(this.browserStorage,this.config.auth.clientId,i),f.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),s&&s.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw si(Xa);const e=new yo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,sa,this.performanceClient,this.nativeMessageHandler,f.accountId,this.nativeStorage,a.correlationId),{userRequestState:t}=sr.parseRequestState(this.browserCrypto,a.state);return await e.acquireToken({...a,state:t,prompt:void 0})}return await d.handleCodeResponse(f,a)}catch(e){throw t.popup?.close(),e instanceof c.uR&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),e}}async logoutPopupAsync(e,t,n,a){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(Pr,ca.Popup,e);const i=this.initializeServerTelemetryManager(962);try{await this.clearCacheOnLogout(e.account);const r=await er(this.createAuthCodeClient.bind(this),en,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:i,requestAuthority:n,account:e.account||void 0});try{r.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&r.authority.protocolMode===o){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(Tr,ca.Popup,e),a){const e={apiId:962,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=Xe.getAbsoluteUrl(a,Mi());await this.navigationClient.navigateInternal(t,e)}return void t.popup?.close()}}const s=r.getLogoutUri(e);this.eventHandler.emitEvent(Tr,ca.Popup,e);const c=this.openPopup(s,t);if(this.eventHandler.emitEvent(Mr,ca.Popup,{popupWindow:c},null),await this.monitorPopupForHash(c,t.popupWindowParent).catch(()=>{}),a){const e={apiId:962,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=Xe.getAbsoluteUrl(a,Mi());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw t.popup?.close(),e instanceof c.uR&&(e.setCorrelationId(this.correlationId),i.cacheFailedRequest(e)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(Ur,ca.Popup,null,e),this.eventHandler.emitEvent(Fr,ca.Popup),e}this.eventHandler.emitEvent(Fr,ca.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),si(ba)}monitorPopupForHash(e,t){return new Promise((t,n)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const a=setInterval(()=>{if(e.closed)return this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(a),void n(si(Oa));let r="";try{r=e.location.href}catch(e){}if(!r||"about:blank"===r)return;clearInterval(a);let o="";const s=this.config.auth.OIDCOptions.serverResponseType;e&&(o=s===i.CL.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(o)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let n;if(t.popup?(n=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),n.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),n=this.openSizedPopup(e,t)),!n)throw si(Ca);return n.focus&&n.focus(),this.currentWindow=n,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),n}catch(e){throw this.logger.error("error opening popup "+e.message),this.browserStorage.setInteractionInProgress(!1),si(xa)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:n,popupWindowParent:a}){const i=a.screenLeft?a.screenLeft:a.screenX,r=a.screenTop?a.screenTop:a.screenY,o=a.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,s=a.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=n.popupSize?.width,d=n.popupSize?.height,l=n.popupPosition?.top,u=n.popupPosition?.left;return(!c||c<0||c>o)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=483),(!d||d<0||d>s)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),d=600),(!l||l<0||l>s)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),l=Math.max(0,s/2-300+r)),(!u||u<0||u>o)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),u=Math.max(0,o/2-241.5+i)),a.open(e,t,`width=${c}, height=${d}, top=${l}, left=${u}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(ca.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`msal.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`msal.${this.config.auth.clientId}.${t}.${this.correlationId}`}}class Co{constructor(e,t,n,a,i){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=a,this.performanceClient=i}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(Xn,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(ta,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const n={apiId:oa,timeout:t.redirectTimeout,noHistory:!1};return"function"==typeof t.onRedirectNavigate?(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),!1!==t.onRedirectNavigate(e)?(this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),void await t.navigationClient.navigateExternal(e,n)):void this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation")):(this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),void await t.navigationClient.navigateExternal(e,n))}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),si(ba)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const n=this.browserStorage.generateStateKey(t),a=this.browserStorage.getTemporaryCache(n);if(!a)throw W(v,"Cached State");let i;try{i=this.authModule.handleFragmentResponse(e,a)}catch(e){throw e instanceof Rr&&e.subError===Oa?si(Oa):e}const r=this.browserStorage.generateNonceKey(a),o=this.browserStorage.getTemporaryCache(r);if(this.authCodeRequest.code=i.code,i.cloud_instance_host_name&&await er(this.authModule.updateAuthority.bind(this.authModule),cn,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(i.cloud_instance_host_name,this.authCodeRequest.correlationId),i.nonce=o||void 0,i.state=a,i.client_info)this.authCodeRequest.clientInfo=i.client_info;else{const e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}const s=await this.authModule.acquireToken(this.authCodeRequest,i);return this.browserStorage.cleanRequestByState(t),s}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(ea,!0);if(e)try{return JSON.parse(e)}catch(t){this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}class Oo extends lo{constructor(e,t,n,a,i,r,o,s,c,d){super(e,t,n,a,i,r,o,c,d),this.nativeStorage=s}async acquireToken(e){const t=await er(this.initializeAuthorizationRequest.bind(this),nn,this.logger,this.performanceClient,this.correlationId)(e,ca.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const n=this.initializeServerTelemetryManager(oa),a=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent("msal:restoreFromBFCache",ca.Redirect))};try{const i=await er(this.initializeAuthorizationCodeRequest.bind(this),an,this.logger,this.performanceClient,this.correlationId)(t),r=await er(this.createAuthCodeClient.bind(this),en,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),o=new Co(r,this.browserStorage,i,this.logger,this.performanceClient),s=await r.getAuthCodeUrl({...t,nativeBroker:So.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),c=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${c}`),window.addEventListener("pageshow",a),await o.initiateAuthRequest(s,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:c,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(e){throw e instanceof c.uR&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),window.removeEventListener("pageshow",a),this.browserStorage.cleanRequestByState(t.state),e}}async handleRedirectPromise(e="",t){const n=this.initializeServerTelemetryManager(865);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[a,r]=this.getRedirectResponse(e||"");if(!a)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(ca.Redirect),"back_forward"!==function(){if("undefined"==typeof window||void 0===window.performance||"function"!=typeof window.performance.getEntriesByType)return;const e=window.performance.getEntriesByType("navigation");return(e.length?e[0]:void 0)?.type}()?t.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const o=this.browserStorage.getTemporaryCache(Xn,!0)||i.JM.EMPTY_STRING;if(Xe.removeHashFromUrl(o)===Xe.removeHashFromUrl(window.location.href)&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),o.indexOf("#")>-1&&function(e){const t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}(o),await this.handleResponse(a,n);if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(a,n);if(!ki()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(Zn,r,!0);const e={apiId:865,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let t=!0;if(o&&"null"!==o)this.logger.verbose(`Navigating to loginRequestUrl: ${o}`),t=await this.navigationClient.navigateInternal(o,e);else{const n=function(){const e=new Xe(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}();this.browserStorage.setTemporaryCache(Xn,n,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),t=await this.navigationClient.navigateInternal(n,e)}if(!t)return await this.handleResponse(a,n)}return null}catch(e){throw e instanceof c.uR&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),this.browserStorage.cleanRequestByInteractionType(ca.Redirect),e}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(t=this.config.auth.OIDCOptions.serverResponseType===i.CL.QUERY?window.location.search:window.location.hash);let n=Je(t);if(n){try{!function(e,t,n){if(!e.state)throw si(va);const a=fr(t,e.state);if(!a)throw si(Sa);if(a.interactionType!==n)throw si(Da)}(n,this.browserCrypto,ca.Redirect)}catch(e){return e instanceof c.uR&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return(a=window).location.hash="","function"==typeof a.history.replaceState&&a.history.replaceState(null,"",`${a.location.origin}${a.location.pathname}${a.location.search}`),this.logger.verbose("Hash contains known properties, returning response hash"),[n,t]}var a;const r=this.browserStorage.getTemporaryCache(Zn,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(Zn)),r&&(n=Je(r),n)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,r]):[null,""]}async handleResponse(e,t){const n=e.state;if(!n)throw si(va);const a=this.browserStorage.getCachedRequest(n);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw si(Xa);const t=new yo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,sa,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,a.correlationId),{userRequestState:i}=sr.parseRequestState(this.browserCrypto,n);return t.acquireToken({...a,state:i,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(n)})}const i=this.browserStorage.getCachedAuthority(n);if(!i)throw si(Ua);const r=await er(this.createAuthCodeClient.bind(this),en,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:i});return Nr.removeThrottle(this.browserStorage,this.config.auth.clientId,a),new Co(r,this.browserStorage,a,this.logger,this.performanceClient).handleCodeResponse(e,n)}async logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(961);try{this.eventHandler.emitEvent(Pr,ca.Redirect,e),await this.clearCacheOnLogout(t.account);const a={apiId:961,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=await er(this.createAuthCodeClient.bind(this),en,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(i.authority.protocolMode===o)try{i.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId)return this.browserStorage.removeAccount(t.account?.homeAccountId),void this.eventHandler.emitEvent(Tr,ca.Redirect,t)}const r=i.getLogoutUri(t);if(this.eventHandler.emitEvent(Tr,ca.Redirect,t),!e||"function"!=typeof e.onRedirectNavigate)return this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(r,a);if(!1!==e.onRedirectNavigate(r))return this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),void await this.navigationClient.navigateExternal(r,a);this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}catch(e){throw e instanceof c.uR&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),this.eventHandler.emitEvent(Ur,ca.Redirect,null,e),this.eventHandler.emitEvent(Fr,ca.Redirect),e}this.eventHandler.emitEvent(Fr,ca.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return Xe.getAbsoluteUrl(t,Mi())}}async function wo(e,t,n,a,i){if(t.addQueueMeasurement(Jt,a),!e)throw n.info("Navigate url is empty"),si(ba);return i?er(Ao,Zt,n,t,a)(e,i,t,a):$i(Lo,$t,n,t,a)(e)}async function Eo(e,t,n,a,r,o,s){return a.addQueueMeasurement(Xt,o),new Promise((a,o)=>{t<1e4&&r.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (10000ms). This may result in timeouts.`);const c=window.setTimeout(()=>{window.clearInterval(d),o(si(wa))},t),d=window.setInterval(()=>{let t="";const n=e.contentWindow;try{t=n?n.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let r="";n&&(r=s===i.CL.QUERY?n.location.search:n.location.hash),window.clearTimeout(c),window.clearInterval(d),a(r)},n)}).finally(()=>{$i(Mo,kn,r,a,o)(e)})}function Ao(e,t,n,a){return n.addQueueMeasurement(Zt,a),new Promise((n,a)=>{const i=ko();window.setTimeout(()=>{i?(i.src=e,n(i)):a("Unable to load iframe")},t)})}function Lo(e){const t=ko();return t.src=e,t}function ko(){const e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function Mo(e){document.body===e.parentNode&&document.body.removeChild(e)}class Po extends lo{constructor(e,t,n,a,i,r,o,s,c,d,l){super(e,t,n,a,i,r,s,d,l),this.apiId=o,this.nativeStorage=c}async acquireToken(e){this.performanceClient.addQueueMeasurement(Et,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==i.ZM.NONE&&t.prompt!==i.ZM.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${i.ZM.NONE}`),t.prompt=i.ZM.NONE):t.prompt=i.ZM.NONE;const n=await er(this.initializeAuthorizationRequest.bind(this),nn,this.logger,this.performanceClient,e.correlationId)(t,ca.Silent);Hi(n.authority);const a=this.initializeServerTelemetryManager(this.apiId);let r;try{return r=await er(this.createAuthCodeClient.bind(this),en,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:a,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),await er(this.silentTokenHelper.bind(this),Yt,this.logger,this.performanceClient,e.correlationId)(r,n)}catch(n){if(n instanceof c.uR&&(n.setCorrelationId(this.correlationId),a.cacheFailedRequest(n)),!(r&&n instanceof c.uR&&n.errorCode===Vn))throw n;this.performanceClient.addFields({retryError:n.errorCode},this.correlationId);const i=await er(this.initializeAuthorizationRequest.bind(this),nn,this.logger,this.performanceClient,e.correlationId)(t,ca.Silent);return await er(this.silentTokenHelper.bind(this),Yt,this.logger,this.performanceClient,this.correlationId)(r,i)}}logout(){return Promise.reject(si(ka))}async silentTokenHelper(e,t){const n=t.correlationId;this.performanceClient.addQueueMeasurement(Yt,n);const a=await er(this.initializeAuthorizationCodeRequest.bind(this),an,this.logger,this.performanceClient,n)(t),r=await er(e.getAuthCodeUrl.bind(e),rn,this.logger,this.performanceClient,n)({...t,nativeBroker:So.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),o=new Do(e,this.browserStorage,a,this.logger,this.performanceClient),s=await er(wo,Jt,this.logger,this.performanceClient,n)(r,this.performanceClient,this.logger,n,this.config.system.navigateFrameWait),c=this.config.auth.OIDCOptions.serverResponseType,d=await er(Eo,Xt,this.logger,this.performanceClient,n)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,n,c),l=$i(Io,hn,this.logger,this.performanceClient,this.correlationId)(d,c,this.logger);if(l.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw si(Xa);const e=new yo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,l.accountId,this.browserStorage,n),{userRequestState:a}=sr.parseRequestState(this.browserCrypto,t.state);return er(e.acquireToken.bind(e),Pt,this.logger,this.performanceClient,n)({...t,state:a,prompt:t.prompt||i.ZM.NONE})}return er(o.handleCodeResponse.bind(o),sn,this.logger,this.performanceClient,n)(l,t)}}class To extends lo{async acquireToken(e){this.performanceClient.addQueueMeasurement(At,e.correlationId);const t=await er(so,Wt,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),n={...e,...t};e.redirectUri&&(n.redirectUri=this.getRedirectUri(e.redirectUri));const a=this.initializeServerTelemetryManager(61),i=await this.createRefreshTokenClient({serverTelemetryManager:a,authorityUrl:n.authority,azureCloudOptions:n.azureCloudOptions,account:n.account});return er(i.acquireTokenByRefreshToken.bind(i),Bt,this.logger,this.performanceClient,e.correlationId)(n).catch(e=>{throw e.setCorrelationId(this.correlationId),a.cacheFailedRequest(e),e})}logout(){return Promise.reject(si(ka))}async createRefreshTokenClient(e){const t=await er(this.getClientConfiguration.bind(this),tn,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new bo(t,this.performanceClient)}}class Uo{constructor(e,t,n,a){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=n,this.cryptoObj=a}loadExternalTokens(e,t,n){if(!this.isBrowserEnvironment)throw si(Fa);const a=t.id_token?J(t.id_token,qi):void 0,i={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},r=e.authority?new nr(nr.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,i,this.logger,e.correlationId||Ii()):void 0,o=this.loadAccount(e,n.clientInfo||t.client_info||"",a,r),s=this.loadIdToken(t,o.homeAccountId,o.environment,o.realm),c=this.loadAccessToken(e,t,o.homeAccountId,o.environment,o.realm,n),d=this.loadRefreshToken(t,o.homeAccountId,o.environment);return this.generateAuthenticationResult(e,{account:o,idToken:s,accessToken:c,refreshToken:d},a,r)}loadAccount(e,t,n,a){if(this.logger.verbose("TokenCache - loading account"),e.account){const t=Qe.createFromAccountInfo(e.account);return this.storage.setAccount(t),t}if(!a||!t&&!n)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),si(Va);const i=Qe.generateHomeAccountId(t,a.authorityType,this.logger,this.cryptoObj,n),r=n?.tid,o=$r(this.storage,a,i,qi,n,t,a.hostnameAndPort,r,void 0,void 0,this.logger);return this.storage.setAccount(o),o}loadIdToken(e,t,n,a){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const i=ne(t,n,e.id_token,this.config.auth.clientId,a);return this.storage.setIdTokenCredential(i),i}loadAccessToken(e,t,n,a,i,r){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!(t.scope||e.scopes&&e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");const o=t.scope?je.fromString(t.scope):new je(e.scopes),s=r.expiresOn||t.expires_in+(new Date).getTime()/1e3,c=r.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+(new Date).getTime()/1e3,d=ae(n,a,t.access_token,this.config.auth.clientId,i,o.printScopes(),s,c,qi);return this.storage.setAccessTokenCredential(d),d}loadRefreshToken(e,t,n){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const a=ie(t,n,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(a),a}generateAuthenticationResult(e,t,n,a){let i,r="",o=[],s=null;t?.accessToken&&(r=t.accessToken.secret,o=je.fromString(t.accessToken.target).asArray(),s=new Date(1e3*Number(t.accessToken.expiresOn)),i=new Date(1e3*Number(t.accessToken.extendedExpiresOn)));const c=t.account;return{authority:a?a.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:o,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:n||{},accessToken:r,fromCache:!0,expiresOn:s,correlationId:e.correlationId||"",requestId:"",extExpiresOn:i,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}class Fo extends to{constructor(e){super(e),this.includeRedirectUri=!1}}class Ho extends lo{constructor(e,t,n,a,i,r,o,s,c,d){super(e,t,n,a,i,r,s,c,d),this.apiId=o}async acquireToken(e){if(!e.code)throw si(Ga);const t=await er(this.initializeAuthorizationRequest.bind(this),nn,this.logger,this.performanceClient,e.correlationId)(e,ca.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const a={...t,code:e.code},i=await er(this.getClientConfiguration.bind(this),tn,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),r=new Fo(i);this.logger.verbose("Auth code client created");const o=new Do(r,this.browserStorage,a,this.logger,this.performanceClient);return await er(o.handleCodeResponseFromServer.bind(o),on,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(e){throw e instanceof c.uR&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),e}}logout(){return Promise.reject(si(ka))}}function Ro(e){const t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?"9188040d-6c67-4c5b-b112-36a304b66dad"===t?.tid?"MSA":"AAD":void 0}function No(e,t){try{Ui(e)}catch(e){throw t.end({success:!1},e),e}}class Bo{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Xi(this.logger,this.performanceClient):q,this.eventHandler=new Hr(this.logger),this.browserStorage=this.isBrowserEnvironment?new mr(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,ir(this.config.auth),this.performanceClient):_r(this.config.auth.clientId,this.logger);const t={cacheLocation:Jn,temporaryCacheLocation:Jn,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new mr(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new Uo(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this),this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}static async createController(e,t){const n=new Bo(e);return await n.initialize(t),n}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized)return void this.logger.info("initialize has already been called, exiting early.");if(!this.isBrowserEnvironment)return this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,void this.eventHandler.emitEvent(Ir);const t=e?.correlationId||this.getRequestCorrelationId(),n=this.config.system.allowNativeBroker,a=this.performanceClient.startMeasurement(Qt,t);if(this.eventHandler.emitEvent("msal:initializeStart"),n)try{this.nativeExtensionProvider=await So.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await er(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),Mn,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(Ir),a.end({allowNativeBroker:n,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),Ti(this.initialized),this.isBrowserEnvironment){const t=e||"";let n=this.redirectResponse.get(t);return void 0===n?(n=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,n),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),n}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){const t=this.getAllAccounts(),n=this.browserStorage.getCachedNativeRequest(),a=n&&So.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,i=a?n?.correlationId:this.browserStorage.getTemporaryCache(ta,!0)||"",r=this.performanceClient.startMeasurement(xt,i);let o;if(this.eventHandler.emitEvent("msal:handleRedirectStart",ca.Redirect),a&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");const e=new yo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,865,this.performanceClient,this.nativeExtensionProvider,n.accountId,this.nativeInternalStorage,n.correlationId);o=er(e.handleRedirectPromise.bind(e),An,this.logger,this.performanceClient,r.event.correlationId)(this.performanceClient,r.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const t=this.createRedirectClient(i);o=er(t.handleRedirectPromise.bind(t),En,this.logger,this.performanceClient,r.event.correlationId)(e,r)}return o.then(e=>(e?(t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(Cr,ca.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(Er,ca.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),r.end({success:!0,accountType:Ro(e.account)})):r.event.errorCode?r.end({success:!1}):r.discard(),this.eventHandler.emitEvent(kr,ca.Redirect),e)).catch(e=>{const n=e;throw t.length>0?this.eventHandler.emitEvent(Ar,ca.Redirect,null,n):this.eventHandler.emitEvent(Or,ca.Redirect,null,n),this.eventHandler.emitEvent(kr,ca.Redirect),r.end({success:!1},n),e})}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const n=this.performanceClient.startMeasurement("acquireTokenPreRedirect",t);n.add({accountType:Ro(e.account),scenarioId:e.scenarioId});const a=e.onRedirectNavigate;if(a)e.onRedirectNavigate=e=>{const t="function"==typeof a?a(e):void 0;return!1!==t?n.end({success:!0}):n.discard(),t};else{const e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{const a="function"==typeof e?e(t):void 0;return!1!==a?n.end({success:!0}):n.discard(),a}}const i=this.getAllAccounts().length>0;try{let a;return Fi(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),i?this.eventHandler.emitEvent(wr,ca.Redirect,e):this.eventHandler.emitEvent(xr,ca.Redirect,e),a=this.nativeExtensionProvider&&this.canUseNative(e)?new yo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,oa,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,n).catch(n=>{if(n instanceof mo&&_o(n))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(n instanceof rr.EB)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),n}):this.createRedirectClient(t).acquireToken(e),await a}catch(e){throw n.end({success:!1},e),i?this.eventHandler.emitEvent(Ar,ca.Redirect,null,e):this.eventHandler.emitEvent(Or,ca.Redirect,null,e),e}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(It,t);n.add({scenarioId:e.scenarioId,accountType:Ro(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),No(this.initialized,n),this.browserStorage.setInteractionInProgress(!0)}catch(e){return Promise.reject(e)}const a=this.getAllAccounts();let i;return a.length>0?this.eventHandler.emitEvent(wr,ca.Popup,e):this.eventHandler.emitEvent(xr,ca.Popup,e),i=this.canUseNative(e)?this.acquireTokenNative({...e,correlationId:t},sa).then(e=>(this.browserStorage.setInteractionInProgress(!1),n.end({success:!0,isNativeBroker:!0,accountType:Ro(e.account)}),e)).catch(n=>{if(n instanceof mo&&_o(n))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(n instanceof rr.EB)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),n}):this.createPopupClient(t).acquireToken(e),i.then(e=>(a.length<this.getAllAccounts().length?this.eventHandler.emitEvent(Cr,ca.Popup,e):this.eventHandler.emitEvent(Er,ca.Popup,e),n.end({success:!0,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:Ro(e.account)}),e)).catch(e=>(a.length>0?this.eventHandler.emitEvent(Ar,ca.Popup,null,e):this.eventHandler.emitEvent(Or,ca.Popup,null,e),n.end({success:!1},e),Promise.reject(e)))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const t=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:t};let a;return this.ssoSilentMeasurement=this.performanceClient.startMeasurement(Lt,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:Ro(e.account)}),No(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent("msal:ssoSilentStart",ca.Silent,n),a=this.canUseNative(n)?this.acquireTokenNative(n,863).catch(e=>{if(e instanceof mo&&_o(e))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw e}):this.createSilentIframeClient(n.correlationId).acquireToken(n),a.then(e=>(this.eventHandler.emitEvent("msal:ssoSilentSuccess",ca.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:Ro(e.account)}),e)).catch(e=>{throw this.eventHandler.emitEvent("msal:ssoSilentFailure",ca.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const n=this.performanceClient.startMeasurement(vt,t);No(this.initialized,n),this.eventHandler.emitEvent("msal:acquireTokenByCodeStart",ca.Silent,e),n.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw si(Wa);if(e.code){const a=e.code;let i=this.hybridAuthCodeResponses.get(a);return i?(this.logger.verbose("Existing acquireTokenByCode request found",t),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),i=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(e=>(this.eventHandler.emitEvent("msal:acquireTokenByCodeSuccess",ca.Silent,e),this.hybridAuthCodeResponses.delete(a),n.end({success:!0,isNativeBroker:e.fromNativeBroker,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:Ro(e.account)}),e)).catch(e=>{throw this.hybridAuthCodeResponses.delete(a),this.eventHandler.emitEvent(Lr,ca.Silent,null,e),n.end({success:!1},e),e}),this.hybridAuthCodeResponses.set(a,i)),await i}if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId)){const a=await this.acquireTokenNative({...e,correlationId:t},866,e.nativeAccountId).catch(e=>{throw e instanceof mo&&_o(e)&&(this.nativeExtensionProvider=void 0),e});return n.end({accountType:Ro(a.account),success:!0}),a}throw si(Qa)}throw si(Ka)}catch(e){throw this.eventHandler.emitEvent(Lr,ca.Silent,null,e),n.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(wn,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);const t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then(e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker}),e)).catch(e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(Vt,e.correlationId),t){case 0:case 1:case 2:const t=this.createSilentCacheClient(e.correlationId);return er(t.acquireToken.bind(t),wt,this.logger,this.performanceClient,e.correlationId)(e);default:throw W(T)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(yt,e.correlationId),t){case 0:case 2:case 3:case 4:const t=this.createSilentRefreshClient(e.correlationId);return er(t.acquireToken.bind(t),At,this.logger,this.performanceClient,e.correlationId)(e);default:throw W(T)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(Kt,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return er(t.acquireToken.bind(t),Et,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return Fi(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return Ui(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(e){return Promise.reject(e)}}async clearCache(e){if(!this.isBrowserEnvironment)return void this.logger.info("in non-browser environment, returning early.");const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return hr(this.logger,this.browserStorage,this.isBrowserEnvironment,e)}getAccount(e){return br(e,this.logger,this.browserStorage)}getAccountByUsername(e){return gr(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return vr(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return yr(e,this.logger,this.browserStorage)}setActiveAccount(e){Sr(e,this.browserStorage)}getActiveAccount(){return Dr(this.browserStorage)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=Qe.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(n),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,n){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw si(Xa);return new yo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,n||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!So.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case i.ZM.NONE:case i.ZM.CONSENT:case i.ZM.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!(!t&&!this.getNativeAccountId(e)&&(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),1))}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new xo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new Oo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new Po(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,863,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new vo(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new To(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new Ho(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,866,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return Pi(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}handleAccountCacheChange(e){try{e.key?.includes(i.Md.ACTIVE_ACCOUNT_FILTERS)&&this.eventHandler.emitEvent("msal:activeAccountChanged");const t=e.newValue||e.oldValue;if(!t)return;const n=JSON.parse(t);if("object"!=typeof n||!Qe.isAccountEntity(n))return;const a=st.toObject(new Qe,n).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.eventHandler.emitEvent("msal:accountAdded",void 0,a)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.eventHandler.emitEvent("msal:accountRemoved",void 0,a))}catch(e){return}}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?Ii():i.JM.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||da})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||da})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(St,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),No(this.initialized,n),this.logger.verbose("acquireTokenSilent called",t);const a=e.account||this.getActiveAccount();if(!a)throw si(Ma);n.add({accountType:Ro(a)});const r={clientId:this.config.auth.clientId,authority:e.authority||i.JM.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:a.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions},o=JSON.stringify(r),s=this.activeSilentTokenRequests.get(o);if(void 0===s){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);const i=er(this.acquireTokenSilentAsync.bind(this),Dt,this.logger,this.performanceClient,t)({...e,correlationId:t},a).then(t=>(this.activeSilentTokenRequests.delete(o),n.end({success:!0,fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,accessTokenSize:t.accessToken.length,idTokenSize:t.idToken.length}),t)).catch(e=>{throw this.activeSilentTokenRequests.delete(o),n.end({success:!1},e),e});return this.activeSilentTokenRequests.set(o,i),{...await i,state:e.state}}return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),n.discard(),{...await s,state:e.state}}async acquireTokenSilentAsync(e,t){const n=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(Dt,e.correlationId),this.eventHandler.emitEvent(wr,ca.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",n);const a=await er(co,qt,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),i=e.cacheLookupPolicy||0;return this.acquireTokenSilentNoIframe(a,i).catch(async e=>{const t=function(e,t){const n=!(e instanceof rr.EB&&e.subError!==or.d9),a=e.errorCode===Vn||e.errorCode===T,i=n&&a||e.errorCode===or.mF||e.errorCode===or.OG,r=ua.includes(t);return i&&r}(e,i);if(t){if(this.activeIframeRequest){if(5!==i){const[t,n]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${n}`,a.correlationId);const r=this.performanceClient.startMeasurement("awaitConcurrentIframe",a.correlationId);r.add({awaitIframeCorrelationId:n});const o=await t;if(r.end({success:o}),o)return this.logger.verbose(`Parallel iframe request with correlationId: ${n} succeeded. Retrying cache and/or RT redemption`,a.correlationId),this.acquireTokenSilentNoIframe(a,i);throw this.logger.info(`Iframe request with correlationId: ${n} failed. Interaction is required.`),e}return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",a.correlationId),er(this.acquireTokenBySilentIframe.bind(this),Kt,this.logger,this.performanceClient,a.correlationId)(a)}{let e;return this.activeIframeRequest=[new Promise(t=>{e=t}),a.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",a.correlationId),er(this.acquireTokenBySilentIframe.bind(this),Kt,this.logger,this.performanceClient,a.correlationId)(a).then(t=>(e(!0),t)).catch(t=>{throw e(!1),t}).finally(()=>{this.activeIframeRequest=void 0})}}throw e}).then(t=>(this.eventHandler.emitEvent(Er,ca.Silent,t),e.correlationId&&this.performanceClient.addFields({fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker},e.correlationId),t)).catch(e=>{throw this.eventHandler.emitEvent(Ar,ca.Silent,null,e),e}).finally(()=>{document.removeEventListener("visibilitychange",n)})}async acquireTokenSilentNoIframe(e,t){return So.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,61).catch(async e=>{if(e instanceof mo&&_o(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,W(T);throw e})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),er(this.acquireTokenFromCache.bind(this),Vt,this.logger,this.performanceClient,e.correlationId)(e,t).catch(n=>{if(1===t)throw n;return this.eventHandler.emitEvent("msal:acquireTokenFromNetworkStart",ca.Silent,e),er(this.acquireTokenByRefreshToken.bind(this),yt,this.logger,this.performanceClient,e.correlationId)(e,t)}))}}const jo="NESTED_APP_AUTH_UNAVAILABLE";class Vo{constructor(e,t,n,a){this.clientId=e,this.clientCapabilities=t,this.crypto=n,this.logger=a}toNaaTokenRequest(e){let t;t=void 0===e.extraQueryParameters?new Map:new Map(Object.entries(e.extraQueryParameters));const n=e.correlationId||this.crypto.createNewGuid(),a=new qr(n).addClientCapabilitiesToClaims(e.claims,this.clientCapabilities),r=e.scopes||i.eZ;return{platformBrokerId:e.account?.homeAccountId,clientId:this.clientId,authority:e.authority,scope:r.join(" "),correlationId:n,claims:Be.isEmptyObj(a)?void 0:a,state:e.state,authenticationScheme:e.authenticationScheme||i.TO.BEARER,extraParameters:t}}fromNaaTokenResponse(e,t,n){if(!t.token.id_token||!t.token.access_token)throw W(f);const a=new Date(1e3*(n+(t.token.expires_in||0))),r=J(t.token.id_token,this.crypto.base64Decode),o=this.fromNaaAccountInfo(t.account,t.token.id_token,r),s=t.token.scope||e.scope;return{authority:t.token.authority||o.environment,uniqueId:o.localAccountId,tenantId:o.tenantId,scopes:s.split(" "),account:o,idToken:t.token.id_token,idTokenClaims:r,accessToken:t.token.access_token,fromCache:!1,expiresOn:a,tokenType:e.authenticationScheme||i.TO.BEARER,correlationId:e.correlationId,extExpiresOn:a,state:e.state}}fromNaaAccountInfo(e,t,n){const a=n||e.idTokenClaims,i=e.localAccountId||a?.oid||a?.sub||"",r=e.tenantId||a?.tid||"",o=e.homeAccountId||`${i}.${r}`,s=e.username||a?.preferred_username||"",c=e.name||a?.name,d=new Map,l=Ke(o,i,r,a);return d.set(r,l),{homeAccountId:o,environment:e.environment,tenantId:r,username:s,localAccountId:i,name:c,idToken:t,idTokenClaims:a,tenantProfiles:d}}fromBridgeError(e){if(!function(e){return void 0!==e.status}(e))return new c.uR("unknown_error","An unknown error occurred");switch(e.status){case"USER_CANCEL":return new K(j);case"NO_NETWORK":return new K(B);case"ACCOUNT_UNAVAILABLE":return new K(k);case"DISABLED":return new K(z);case jo:return new K(e.code||z,e.description);case"TRANSIENT_ERROR":case"PERSISTENT_ERROR":return new Rr(e.code,e.description);case"USER_INTERACTION_REQUIRED":return new rr.EB(e.code,e.description);default:return new c.uR(e.code,e.description)}}toAuthenticationResultFromCache(e,t,n,a,r){if(!t||!n)throw W(f);const o=J(t.secret,this.crypto.base64Decode),s=n.target||a.scopes.join(" ");return{authority:n.environment||e.environment,uniqueId:e.localAccountId,tenantId:e.tenantId,scopes:s.split(" "),account:e,idToken:t.secret,idTokenClaims:o||{},accessToken:n.secret,fromCache:!0,expiresOn:new Date(1e3*Number(n.expiresOn)),tokenType:a.authenticationScheme||i.TO.BEARER,correlationId:r,extExpiresOn:new Date(1e3*Number(n.extendedExpiresOn)),state:a.state}}}class zo extends c.uR{constructor(e,t){super(e,t),Object.setPrototypeOf(this,zo.prototype),this.name="NestedAppAuthError"}static createUnsupportedError(){return new zo("unsupported_method","This method is not supported in nested app environment.")}}class Go{constructor(e){this.operatingContext=e;const t=this.operatingContext.getBridgeProxy();if(void 0===t)throw new Error("unexpected: bridgeProxy is undefined");this.bridgeProxy=t,this.config=e.getConfig(),this.logger=this.operatingContext.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=e.isBrowserEnvironment()?new Xi(this.logger,this.performanceClient):q,this.browserStorage=this.operatingContext.isBrowserEnvironment()?new mr(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,ir(this.config.auth)):_r(this.config.auth.clientId,this.logger),this.eventHandler=new Hr(this.logger),this.nestedAppAuthAdapter=new Vo(this.config.auth.clientId,this.config.auth.clientCapabilities,this.browserCrypto,this.logger);const n=this.bridgeProxy.getAccountContext();n&&Sr(br(n,this.logger,this.browserStorage),this.browserStorage)}static async createController(e){const t=new Go(e);return Promise.resolve(t)}initialize(){return Promise.resolve()}ensureValidRequest(e){return e?.correlationId?e:{...e,correlationId:this.browserCrypto.createNewGuid()}}async acquireTokenInteractive(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(wr,ca.Popup,t);const n=this.performanceClient.startMeasurement(It,t.correlationId);n?.add({nestedAppAuthRequest:!0});try{const a=this.nestedAppAuthAdapter.toNaaTokenRequest(t),i=Z(),r=await this.bridgeProxy.getTokenInteractive(a),o={...this.nestedAppAuthAdapter.fromNaaTokenResponse(a,r,i)};return await this.hydrateCache(o,e),this.browserStorage.setActiveAccount(o.account),this.eventHandler.emitEvent(Er,ca.Popup,o),n.add({accessTokenSize:o.accessToken.length,idTokenSize:o.idToken.length}),n.end({success:!0,requestId:o.requestId}),o}catch(e){const t=this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(Ar,ca.Popup,null,e),n.end({success:!1},e),t}}async acquireTokenSilentInternal(e){const t=this.ensureValidRequest(e);this.eventHandler.emitEvent(wr,ca.Silent,t);const n=await this.acquireTokenFromCache(t);if(n)return this.eventHandler.emitEvent(Er,ca.Silent,n),n;const a=this.performanceClient.startMeasurement(Lt,t.correlationId);a?.increment({visibilityChangeCount:0}),a?.add({nestedAppAuthRequest:!0});try{const n=this.nestedAppAuthAdapter.toNaaTokenRequest(t),i=Z(),r=await this.bridgeProxy.getTokenSilent(n),o=this.nestedAppAuthAdapter.fromNaaTokenResponse(n,r,i);return await this.hydrateCache(o,e),this.browserStorage.setActiveAccount(o.account),this.eventHandler.emitEvent(Er,ca.Silent,o),a?.add({accessTokenSize:o.accessToken.length,idTokenSize:o.idToken.length}),a?.end({success:!0,requestId:o.requestId}),o}catch(e){const t=this.nestedAppAuthAdapter.fromBridgeError(e);throw this.eventHandler.emitEvent(Ar,ca.Silent,null,e),a?.end({success:!1},e),t}}async acquireTokenFromCache(e){const t=this.performanceClient.startMeasurement(St,e.correlationId);if(t?.add({nestedAppAuthRequest:!0}),e.claims)return this.logger.verbose("Claims are present in the request, skipping cache lookup"),null;let n=null;switch(e.cacheLookupPolicy){case 0:case 1:case 2:n=await this.acquireTokenFromCacheInternal(e);break;default:return null}return n?(this.eventHandler.emitEvent(Er,ca.Silent,n),t?.add({accessTokenSize:n?.accessToken.length,idTokenSize:n?.idToken.length}),t?.end({success:!0}),n):(this.logger.error("Cached tokens are not found for the account, proceeding with silent token request."),this.eventHandler.emitEvent(Ar,ca.Silent,null),t?.end({success:!1}),null)}async acquireTokenFromCacheInternal(e){const t=this.bridgeProxy.getAccountContext();let n=null;if(t&&(n=br(t,this.logger,this.browserStorage)||e.account),!n)return this.logger.verbose("No active account found, falling back to the host"),Promise.resolve(null);this.logger.verbose("active account found, attempting to acquire token silently");const a={...e,correlationId:e.correlationId||this.browserCrypto.createNewGuid(),authority:e.authority||n.environment,scopes:e.scopes?.length?e.scopes:[...i.eZ]},r=this.browserStorage.getTokenKeys(),o=this.browserStorage.getAccessToken(n,a,r,n.tenantId,this.performanceClient,a.correlationId);if(!o)return this.logger.verbose("No cached access token found"),Promise.resolve(null);if(ee(o.cachedAt)||$(o.expiresOn,this.config.system.tokenRenewalOffsetSeconds))return this.logger.verbose("Cached access token has expired"),Promise.resolve(null);const s=this.browserStorage.getIdToken(n,r,n.tenantId,this.performanceClient,a.correlationId);return s?this.nestedAppAuthAdapter.toAuthenticationResultFromCache(n,s,o,a,a.correlationId):(this.logger.verbose("No cached id token found"),Promise.resolve(null))}async acquireTokenPopup(e){return this.acquireTokenInteractive(e)}acquireTokenRedirect(e){throw zo.createUnsupportedError()}async acquireTokenSilent(e){return this.acquireTokenSilentInternal(e)}acquireTokenByCode(e){throw zo.createUnsupportedError()}acquireTokenNative(e,t,n){throw zo.createUnsupportedError()}acquireTokenByRefreshToken(e,t){throw zo.createUnsupportedError()}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){throw zo.createUnsupportedError()}removePerformanceCallback(e){throw zo.createUnsupportedError()}enableAccountStorageEvents(){throw zo.createUnsupportedError()}disableAccountStorageEvents(){throw zo.createUnsupportedError()}getAllAccounts(e){return hr(this.logger,this.browserStorage,this.isBrowserEnv(),e)}getAccount(e){return br(e,this.logger,this.browserStorage)}getAccountByUsername(e){return gr(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return vr(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return yr(e,this.logger,this.browserStorage)}setActiveAccount(e){return Sr(e,this.browserStorage)}getActiveAccount(){return Dr(this.browserStorage)}handleRedirectPromise(e){return Promise.resolve(null)}loginPopup(e){return this.acquireTokenInteractive(e||da)}loginRedirect(e){throw zo.createUnsupportedError()}logout(e){throw zo.createUnsupportedError()}logoutRedirect(e){throw zo.createUnsupportedError()}logoutPopup(e){throw zo.createUnsupportedError()}ssoSilent(e){return this.acquireTokenSilentInternal(e)}getTokenCache(){throw zo.createUnsupportedError()}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){}setNavigationClient(e){this.logger.warning("setNavigationClient is not supported in nested app auth")}getConfiguration(){return this.config}isBrowserEnv(){return this.operatingContext.isBrowserEnvironment()}getBrowserCrypto(){return this.browserCrypto}getPerformanceClient(){throw zo.createUnsupportedError()}getRedirectResponse(){throw zo.createUnsupportedError()}async clearCache(e){throw zo.createUnsupportedError()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=Qe.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(n),this.browserStorage.hydrateCache(e,t)}}class Ko{static async initializeNestedAppAuthBridge(){if(void 0===window)throw new Error("window is undefined");if(void 0===window.nestedAppAuthBridge)throw new Error("window.nestedAppAuthBridge is undefined");try{window.nestedAppAuthBridge.addEventListener("message",e=>{const t="string"==typeof e?e:e.data,n=JSON.parse(t),a=Ko.bridgeRequests.find(e=>e.requestId===n.requestId);void 0!==a&&(Ko.bridgeRequests.splice(Ko.bridgeRequests.indexOf(a),1),n.success?a.resolve(n):a.reject(n.error))});const e=await new Promise((e,t)=>{const n=Ko.buildRequest("GetInitContext"),a={requestId:n.requestId,method:n.method,resolve:e,reject:t};Ko.bridgeRequests.push(a),window.nestedAppAuthBridge.postMessage(JSON.stringify(n))});return Ko.validateBridgeResultOrThrow(e.initContext)}catch(e){throw window.console.log(e),e}}getTokenInteractive(e){return this.getToken("GetTokenPopup",e)}getTokenSilent(e){return this.getToken("GetToken",e)}async getToken(e,t){const n=await this.sendRequest(e,{tokenParams:t});return{token:Ko.validateBridgeResultOrThrow(n.token),account:Ko.validateBridgeResultOrThrow(n.account)}}getHostCapabilities(){return this.capabilities??null}getAccountContext(){return this.accountContext?this.accountContext:null}static buildRequest(e,t){return{messageType:"NestedAppAuthRequest",method:e,requestId:Ii(),sendTime:Date.now(),clientLibrary:zn,clientLibraryVersion:Ri,...t}}sendRequest(e,t){const n=Ko.buildRequest(e,t);return new Promise((e,t)=>{const a={requestId:n.requestId,method:n.method,resolve:e,reject:t};Ko.bridgeRequests.push(a),window.nestedAppAuthBridge.postMessage(JSON.stringify(n))})}static validateBridgeResultOrThrow(e){if(void 0===e)throw{status:jo};return e}constructor(e,t,n,a){this.sdkName=e,this.sdkVersion=t,this.accountContext=n,this.capabilities=a}static async create(){const e=await Ko.initializeNestedAppAuthBridge();return new Ko(e.sdkName,e.sdkVersion,e.accountContext,e.capabilities)}}Ko.bridgeRequests=[];class Wo extends Ni{constructor(){super(...arguments),this.bridgeProxy=void 0,this.accountContext=null}getModuleName(){return Wo.MODULE_NAME}getId(){return Wo.ID}getBridgeProxy(){return this.bridgeProxy}async initialize(){try{if("undefined"!=typeof window){"function"==typeof window.__initializeNestedAppAuth&&await window.__initializeNestedAppAuth();const e=await Ko.create();this.accountContext=e.getAccountContext(),this.bridgeProxy=e,this.available=void 0!==e}}catch(e){this.logger.infoPii(`Could not initialize Nested App Auth bridge (${e})`)}return this.logger.info(`Nested App Auth Bridge available: ${this.available}`),this.available}}Wo.MODULE_NAME="",Wo.ID="NestedAppOperatingContext";class qo{static async createPublicClientApplication(e){const t=await async function(e,t){const n=new Bi(e);return await n.initialize(),Bo.createController(n,void 0)}(e);return new qo(e,t)}constructor(e,t){this.controller=t||new Bo(new Bi(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}async function Qo(e){const t=new Wo(e);if(await t.initialize(),t.isAvailable()){const n=new Go(t);return new qo(e,n)}return async function(e){const t=new qo(e);return await t.initialize(),t}(e)}}
,6295:(e,t,n)=>{n.d(t,{_z:()=>s,uR:()=>o});var a=n(9825),i=n(8975);const r={[i.W]:"Unexpected error in authentication.",[i.z]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};i.W,i.W,i.z,i.z;class o extends Error{constructor(e,t,n){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,o.prototype),this.errorCode=e||a.JM.EMPTY_STRING,this.errorMessage=t||a.JM.EMPTY_STRING,this.subError=n||a.JM.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function s(e,t){return new o(e,t?`${r[e]} ${t}`:r[e])}}
,8975:(e,t,n)=>{n.d(t,{W:()=>a,z:()=>i});const a="unexpected_error",i="post_request_failed"}
,7580:(e,t,n)=>{n.d(t,{EB:()=>d,TE:()=>u,a:()=>l});var a=n(9825),i=n(6295),r=n(6694);const o=[r.fP,r.EY,r.Xv,r.d9],s=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],c={[r.mF]:"No refresh token found in the cache. Please sign-in.",[r.B]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[r.OG]:"Refresh token has expired.",[r.d9]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};r.mF,r.mF,r.B,r.B,r.d9,r.d9;class d extends i.uR{constructor(e,t,n,i,r,o,s,c){super(e,t,n),Object.setPrototypeOf(this,d.prototype),this.timestamp=i||a.JM.EMPTY_STRING,this.traceId=r||a.JM.EMPTY_STRING,this.correlationId=o||a.JM.EMPTY_STRING,this.claims=s||a.JM.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function l(e,t,n){const a=!!e&&o.indexOf(e)>-1,i=!!n&&s.indexOf(n)>-1,r=!!t&&o.some(e=>t.indexOf(e)>-1);return a||r||i}function u(e){return new d(e,c[e])}}
,6694:(e,t,n)=>{n.d(t,{B:()=>i,EY:()=>s,OG:()=>r,Xv:()=>c,d9:()=>d,fP:()=>o,mF:()=>a});const a="no_tokens_found",i="native_account_unavailable",r="refresh_token_expired",o="interaction_required",s="consent_required",c="login_required",d="bad_token"}
,4207:(e,t,n)=>{n.d(t,{$:()=>a,V:()=>r});var a,i=n(9825);!function(e){e[e.Error=0]="Error",e[e.Warning=1]="Warning",e[e.Info=2]="Info",e[e.Verbose=3]="Verbose",e[e.Trace=4]="Trace"}(a||(a={}));class r{constructor(e,t,n){this.level=a.Info;const o=e||r.createDefaultLoggerOptions();this.localCallback=o.loggerCallback||(()=>{}),this.piiLoggingEnabled=o.piiLoggingEnabled||!1,this.level="number"==typeof o.logLevel?o.logLevel:a.Info,this.correlationId=o.correlationId||i.JM.EMPTY_STRING,this.packageName=t||i.JM.EMPTY_STRING,this.packageVersion=n||i.JM.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:a.Info}}clone(e,t,n){return new r({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const n=`[${(new Date).toUTCString()}] : [${t.correlationId||this.correlationId||""}] : ${this.packageName}@${this.packageVersion} : ${a[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,n,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:a.Error,containsPii:!1,correlationId:t||i.JM.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:a.Error,containsPii:!0,correlationId:t||i.JM.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:a.Warning,containsPii:!1,correlationId:t||i.JM.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:a.Warning,containsPii:!0,correlationId:t||i.JM.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:a.Info,containsPii:!1,correlationId:t||i.JM.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:a.Info,containsPii:!0,correlationId:t||i.JM.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:a.Verbose,containsPii:!1,correlationId:t||i.JM.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:a.Verbose,containsPii:!0,correlationId:t||i.JM.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:a.Trace,containsPii:!1,correlationId:t||i.JM.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:a.Trace,containsPii:!0,correlationId:t||i.JM.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}}
,9825:(e,t,n)=>{n.d(t,{$x:()=>_,BK:()=>s,CL:()=>p,Fk:()=>A,HR:()=>b,Hz:()=>P,I:()=>w,JM:()=>a,Kq:()=>E,L_:()=>I,MU:()=>v,Md:()=>c,S2:()=>d,TO:()=>C,UR:()=>y,Vd:()=>h,Yw:()=>O,Z2:()=>k,ZA:()=>o,ZM:()=>u,cF:()=>f,dZ:()=>L,eG:()=>g,eZ:()=>r,k0:()=>T,kq:()=>l,oT:()=>x,p:()=>m,sB:()=>S,v3:()=>i,y0:()=>D,zv:()=>M});const a={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},i={SUCCESS:200,SUCCESS_RANGE_START:200,SUCCESS_RANGE_END:299,REDIRECT:302,CLIENT_ERROR:400,CLIENT_ERROR_RANGE_START:400,BAD_REQUEST:400,UNAUTHORIZED:401,NOT_FOUND:404,REQUEST_TIMEOUT:408,TOO_MANY_REQUESTS:429,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR:500,SERVER_ERROR_RANGE_START:500,SERVICE_UNAVAILABLE:503,GATEWAY_TIMEOUT:504,SERVER_ERROR_RANGE_END:599,MULTI_SIDED_ERROR:600},r=[a.OPENID_SCOPE,a.PROFILE_SCOPE,a.OFFLINE_ACCESS_SCOPE],o=[...r,a.EMAIL_SCOPE],s={CONTENT_TYPE:"Content-Type",CONTENT_LENGTH:"Content-Length",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},c={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},d={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},l={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},u={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},f={PLAIN:"plain",S256:"S256"},p={QUERY:"query",FRAGMENT:"fragment"},m={...p,FORM_POST:"form_post"},_={IMPLICIT_GRANT:"implicit",AUTHORIZATION_CODE_GRANT:"authorization_code",CLIENT_CREDENTIALS_GRANT:"client_credentials",RESOURCE_OWNER_PASSWORD_GRANT:"password",REFRESH_TOKEN_GRANT:"refresh_token",DEVICE_CODE_GRANT:"device_code",JWT_BEARER:"urn:ietf:params:oauth:grant-type:jwt-bearer"},h={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",MSAV1_ACCOUNT_TYPE:"MSA",GENERIC_ACCOUNT_TYPE:"Generic"},b={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},g={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},v="appmetadata",y="client_info",S="1",D={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:86400},I={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},x={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},C={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},O={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},w={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},E={username:"username",password:"password"},A={httpSuccess:200,httpBadRequest:400},L={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},k={CONFIGURED_MATCHES_DETECTED:"1",CONFIGURED_NO_AUTO_DETECTION:"2",CONFIGURED_NOT_DETECTED:"3",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},M={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},P={Jwt:"JWT",Jwk:"JWK",Pop:"pop"},T=300}
}]);