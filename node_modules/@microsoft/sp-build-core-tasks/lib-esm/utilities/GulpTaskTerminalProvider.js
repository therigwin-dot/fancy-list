function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import { EOL } from 'os';
import { trimEnd } from 'lodash';
import { TerminalProviderSeverity } from '@rushstack/terminal';
export class GulpTaskTerminalProvider {
    get supportsColor() {
        return false;
    }
    get eolCharacter() {
        return EOL;
    }
    write(data, severity) {
        data = trimEnd(trimEnd(data, EOL), '\n');
        switch(severity){
            case TerminalProviderSeverity.log:
                {
                    this._gulpTask.log(data);
                    break;
                }
            case TerminalProviderSeverity.error:
                {
                    this._gulpTask.logError(data);
                    break;
                }
            case TerminalProviderSeverity.warning:
                {
                    this._gulpTask.logWarning(data);
                    break;
                }
            case TerminalProviderSeverity.verbose:
                {
                    this._gulpTask.logVerbose(data);
                }
        }
    }
    constructor(gulpTask){
        _define_property(this, "_gulpTask", void 0);
        this._gulpTask = gulpTask;
    }
}

//#sourceMappingUrl=./GulpTaskTerminalProvider.js.map