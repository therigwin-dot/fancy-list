function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import { SpfxWebpackServePlugin as PLUGIN_NAME } from '../PluginNames';
const WEBPACK5_PLUGIN_NAME = 'webpack5-plugin';
class WebpackServeConfigurationPlugin {
    get accessor() {
        if (!this._accessor) {
            this._accessor = {
                properties: {}
            };
        }
        return this._accessor;
    }
    /**
   * Generate the Webpack Dev Server configuration for SPFx component development
   */ apply(taskSession, heftConfiguration) {
        taskSession.requestAccessToPluginByName('@rushstack/heft-webpack5-plugin', WEBPACK5_PLUGIN_NAME, (accessor)=>{
            if (taskSession.parameters.watch && accessor.parameters.isServeMode) {
                accessor.hooks.onConfigure.tapPromise(PLUGIN_NAME, async (config)=>{
                    const additionalServePaths = await this.accessor.properties.getAdditionalServePathsAsync?.();
                    const { updateServeConfigAsync } = await import('./updateServeConfigAsync');
                    return updateServeConfigAsync(taskSession, heftConfiguration, additionalServePaths, config);
                });
            }
        });
    }
    constructor(){
        _define_property(this, "_accessor", void 0);
    }
}
/**
 * @public
 */ export { WebpackServeConfigurationPlugin as default };

//#sourceMappingUrl=./WebpackServeConfigurationPlugin.js.map