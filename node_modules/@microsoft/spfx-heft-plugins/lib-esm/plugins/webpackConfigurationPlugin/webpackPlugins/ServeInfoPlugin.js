function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import { URLSearchParams } from 'url';
import { PrintUtilities } from '@rushstack/terminal';
import { DEFAULT_PORT, DEFAULT_TEMP_FOLDER } from '../../../utilities/constants';
const PLUGIN_NAME = 'InfoPlugin';
/**
 * @internal
 */ export class ServeInfoPlugin {
    /**
   * Print information to the developer's console.
   */ apply(compiler) {
        compiler.hooks.done.tap(PLUGIN_NAME, ()=>{
            const debugParams = new URLSearchParams(this.baseUrlSearchParams);
            debugParams.set('noredir', 'true');
            debugParams.set('debugManifestsFile', `https://localhost:${this.port}/${this._tempFolderName}/manifests.js`);
            PrintUtilities.printMessageInBox('To load your scripts, use this debug query string:', this._terminal);
            this._terminal.writeLine(`?${debugParams.toString()}`);
            this._terminal.writeLine();
        });
    }
    constructor(options){
        _define_property(this, "baseUrlSearchParams", void 0);
        _define_property(this, "port", void 0);
        _define_property(this, "_terminal", void 0);
        _define_property(this, "_tempFolderName", void 0);
        this._terminal = options.terminal;
        this.port = options.port || DEFAULT_PORT;
        this._tempFolderName = options.tempFolderName || DEFAULT_TEMP_FOLDER;
    }
}

//#sourceMappingUrl=./ServeInfoPlugin.js.map