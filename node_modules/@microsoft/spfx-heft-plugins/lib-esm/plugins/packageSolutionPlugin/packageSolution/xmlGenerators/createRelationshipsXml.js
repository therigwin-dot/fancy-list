/**
 * Creates XML definitions for the relationships files
 */ import * as path from 'path';
import XmlGenerator from 'xml';
import constants from '../config/constants';
let relationshipId = 0;
function relationshipToXmlDefinition(rel) {
    if (rel.target?.[0] !== '/') {
        rel.target = '/' + rel.target;
    }
    return {
        Relationship: [
            {
                _attr: {
                    Type: `http://schemas.microsoft.com/sharepoint/2012/app/relationships/${rel.type}`,
                    Target: rel.target,
                    Id: `r${relationshipId++}`
                }
            }
        ]
    };
}
export default function createRelationshipsXml(xmlSerializationOptions, currentFilename, rels) {
    const file = path.basename(currentFilename);
    const folder = path.dirname(currentFilename);
    return {
        filename: path.posix.join(folder, constants.RelsFolder, file + constants.RelsXml),
        contents: Buffer.from(XmlGenerator({
            Relationships: [
                {
                    _attr: {
                        xmlns: 'http://schemas.openxmlformats.org/package/2006/relationships'
                    }
                },
                ...rels.map((rel)=>relationshipToXmlDefinition(rel))
            ]
        }, xmlSerializationOptions))
    };
}

//#sourceMappingUrl=./createRelationshipsXml.js.map