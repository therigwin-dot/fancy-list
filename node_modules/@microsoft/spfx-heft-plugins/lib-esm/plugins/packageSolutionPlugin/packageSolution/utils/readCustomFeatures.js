/**
 * Reads custom feature XML from folder specified by config. This function looks for all `.rels` files in
 * the `/_rels` folder, assumes that a Feature.xml file of the same name exists in the root folder. It
 * returns an object with a list of IFile files to include in the package, as well as the paths to all the
 * feature.xml files, which is later referenced by the `AppManifest.xml.rels` file, thereby including the
 * custom feature in the package.
 */ import * as path from 'path';
import constants from '../config/constants';
import { getFilesAsync as getFilesAsync, getRelativeFilePathsAsync } from './getFiles';
/**
 * Reads custom feature XML from folder specified by config. This function looks for all `.rels` files in
 * the `/_rels` folder, assumes that a Feature.xml file of the same name exists in the root folder. It
 * returns an object with a list of IFile files to include in the package, as well as the paths to all the
 * feature.xml files, which is later referenced by the `AppManifest.xml.rels` file, thereby including the
 * custom feature in the package.
 * todo: we allow multiple featureXML globs to be specified
 */ export async function readCustomFeaturesAsync(terminal, options) {
    const filenames = await getCustomFeatureXmlFilenamesAsync(terminal, options.paths.featureXmlDir);
    const files = await getCustomFilesAsync(terminal, options.paths.featureXmlDir);
    return {
        files: files,
        customFeatureFilepath: filenames
    };
}
/** Reads the list of feature xml filenames from a specified rels folder */ async function getCustomFeatureXmlFilenamesAsync(terminal, featureXmlDir) {
    const filenames = await getRelativeFilePathsAsync(terminal, path.join(featureXmlDir, constants.RelsFolder), `*${constants.RelsXml}`, 'Found custom feature file: ');
    return filenames.map((filename)=>filename.replace(constants.RelsExtensionRegex, ''));
}
/** Loads a directory of files into IFile objects */ async function getCustomFilesAsync(terminal, featureXmlDir) {
    return await getFilesAsync(terminal, featureXmlDir, '**/*.*', 'Found custom file: ');
}

//#sourceMappingUrl=./readCustomFeatures.js.map