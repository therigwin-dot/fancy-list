import { PackageSolutionPlugin as PLUGIN_NAME } from '../PluginNames';
import { SolutionPackager } from './SolutionPackager';
class PackageSolutionPlugin {
    apply(taskSession, heftConfiguration) {
        const logger = taskSession.logger;
        taskSession.hooks.run.tapPromise(PLUGIN_NAME, async ()=>{
            const prettyPrintXmlParameter = taskSession.parameters.getFlagParameter('--pretty-print-xml');
            const noSpppkgParameter = taskSession.parameters.getFlagParameter('--no-spppkg');
            const solutionPackager = new SolutionPackager({
                buildFolder: heftConfiguration.buildFolderPath,
                terminal: heftConfiguration.globalTerminal,
                emitError: logger.emitError.bind(logger),
                emitWarning: logger.emitWarning.bind(logger)
            });
            await solutionPackager.packageSolutionAsync(taskSession.parameters.production, prettyPrintXmlParameter.value, noSpppkgParameter.value);
        });
    }
}
/**
 * @internal
 */ export { PackageSolutionPlugin as default };

//#sourceMappingUrl=./PackageSolutionPlugin.js.map