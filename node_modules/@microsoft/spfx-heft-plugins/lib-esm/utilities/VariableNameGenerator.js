function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import { JsonFile } from '@rushstack/node-core-library';
const CHAR_CODE_OF_A = 'a'.charCodeAt(0);
const LOG_BASE_26 = Math.log(26);
/**
 * @internal
 */ export class VariableNameGenerator {
    static async initializeAsync() {
        if (!VariableNameGenerator._javascriptReservedWords) {
            // eslint-disable-next-line require-atomic-updates
            VariableNameGenerator._javascriptReservedWords = new Set(await JsonFile.loadAsync(`${__dirname}/javascriptReservedWords.json`));
        }
        return new VariableNameGenerator(VariableNameGenerator._javascriptReservedWords);
    }
    getNextVariableName() {
        let varIndex = this._varNameCounter++;
        let letterCounter = varIndex === 0 ? 1 : Math.floor(Math.log(varIndex) / LOG_BASE_26) + 1;
        let result = '';
        while(letterCounter-- > 0){
            const letterIndex = varIndex % 26;
            result = String.fromCharCode(CHAR_CODE_OF_A + letterIndex) + result;
            varIndex = Math.floor(varIndex / 26) - 1;
        }
        if (this._javascriptReservedWords.has(result)) {
            return this.getNextVariableName();
        } else {
            return result;
        }
    }
    constructor(javascriptReservedWords){
        _define_property(this, "_varNameCounter", 0);
        _define_property(this, "_javascriptReservedWords", void 0);
        this._javascriptReservedWords = javascriptReservedWords;
    }
}
_define_property(VariableNameGenerator, "_javascriptReservedWords", void 0);

//#sourceMappingUrl=./VariableNameGenerator.js.map