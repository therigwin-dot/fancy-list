"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ServeInfoPlugin", {
    enumerable: true,
    get: function() {
        return ServeInfoPlugin;
    }
});
const _url = require("url");
const _terminal = require("@rushstack/terminal");
const _constants = require("../../../utilities/constants");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
const PLUGIN_NAME = 'InfoPlugin';
class ServeInfoPlugin {
    /**
   * Print information to the developer's console.
   */ apply(compiler) {
        compiler.hooks.done.tap(PLUGIN_NAME, ()=>{
            const debugParams = new _url.URLSearchParams(this.baseUrlSearchParams);
            debugParams.set('noredir', 'true');
            debugParams.set('debugManifestsFile', `https://localhost:${this.port}/${this._tempFolderName}/manifests.js`);
            _terminal.PrintUtilities.printMessageInBox('To load your scripts, use this debug query string:', this._terminal);
            this._terminal.writeLine(`?${debugParams.toString()}`);
            this._terminal.writeLine();
        });
    }
    constructor(options){
        _define_property(this, "baseUrlSearchParams", void 0);
        _define_property(this, "port", void 0);
        _define_property(this, "_terminal", void 0);
        _define_property(this, "_tempFolderName", void 0);
        this._terminal = options.terminal;
        this.port = options.port || _constants.DEFAULT_PORT;
        this._tempFolderName = options.tempFolderName || _constants.DEFAULT_TEMP_FOLDER;
    }
}

//#sourceMappingUrl=./ServeInfoPlugin.js.map