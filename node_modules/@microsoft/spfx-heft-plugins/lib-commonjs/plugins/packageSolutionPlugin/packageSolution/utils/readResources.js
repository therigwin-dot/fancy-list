/**
 * Reads resources (RESX format) files from folder specified by config. It
 * returns an IResources object with the paths to both the default resources file
 * and a list of all the localized resources files.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "readResourcesAsync", {
    enumerable: true,
    get: function() {
        return readResourcesAsync;
    }
});
const _getFiles = require("./getFiles");
async function readResourcesAsync(terminal, options) {
    const defaultResourcePaths = await getResourceFilePathsAsync(terminal, options.paths.featureXmlDir, '**/Resources.resx');
    if (defaultResourcePaths.length > 1) {
        throw new Error('More than one default resources file');
    }
    const localizedResourcePaths = await getResourceFilePathsAsync(terminal, options.paths.featureXmlDir, '**/Resources.??-??.resx');
    return {
        localizedResourcePaths: localizedResourcePaths,
        defaultResourcePath: defaultResourcePaths[0]
    };
}
/** Reads the list of resources files relative path from a specified folder */ async function getResourceFilePathsAsync(terminal, featureXmlDir, globs) {
    return await (0, _getFiles.getRelativeFilePathsAsync)(terminal, featureXmlDir, globs, 'Found resources file: ');
}

//#sourceMappingUrl=./readResources.js.map