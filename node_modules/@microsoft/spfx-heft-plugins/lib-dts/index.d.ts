export { SpDevDeploy, type ISpDevDeployOptions } from './plugins/devDeployPlugin/SpDevDeploy';
export { type IDevDeployPluginAccessorProperties, type IDevDeployPluginAccessor, DevDeployHooks, type IDevDeployParameters } from './plugins/devDeployPlugin/DevDeployPlugin';
export type { IWebpackConfigurationPluginAccessorProperties, IWebpackConfigurationPluginAccessor } from './plugins/webpackConfigurationPlugin/WebpackConfigurationPlugin';
export type { IWebpackServeConfigurationPluginAccessor } from './plugins/webpackConfigurationPlugin/WebpackServeConfigurationPlugin';
export type { IDeployFile, IDevDeployConfig, IDevDeployData, IDevDeployOptions } from './plugins/devDeployPlugin/DevDeployInterfaces';
export { DevDeployHelper } from './plugins/devDeployPlugin/DevDeployHelper';
import * as PluginNames from './plugins/PluginNames';
export { PluginNames };
export { WebpackConfigurationGenerator, type ISpfxWebpackFolderPaths, type IWebpackConfigurationGeneratorOptions, type ISpfxWebpackConfiguration, IS_SPFX_WEBPACK_CONFIGURATION_SYMBOL, CONFIG_JSON_SYMBOL, FILE_LOADER_EXTENSIONS, FILE_LOADER_RULE_TEST as _FILE_LOADER_RULE_TEST, COMMON_RULE_OPTIONS as _COMMON_RULE_OPTIONS } from './plugins/webpackConfigurationPlugin/WebpackConfigurationGenerator';
export { WebpackStatsPlugin as _WebpackStatsPlugin, type IWebpackStatsPluginOptions as _IWebpackStatsPluginOptions } from './plugins/webpackConfigurationPlugin/webpackPlugins/WebpackStatsPlugin';
export { AzureUploader as _AzureUploader, type IAzureUploaderOptions as _IAzureUploaderOptions, type IAzureUploaderOptionsForKey as _IAzureUploaderOptionsForKey, type IAzureUploaderOptionsForSas as _IAzureUploaderOptionsForSas, type IUploadableFile as _IUploadableFile } from './utilities/AzureUploader';
export { readConfigFileAsync as _readConfigFileAsync, type IBaseConfigJsonResult as _IBaseConfigJsonResult, type IConfigJsonResult as _IConfigJsonResult } from './spfxConfig/configJsonReader';
export { migrateToLatestVersion as _migrateToLatestVersion } from './spfxConfig/configJsonMigrator';
export type { IConfigBundle, IConfigComponent, IConfigJson, INonAMDExternalModuleConfig } from './spfxConfig/interfaces/config-v2';
export type { ITranslationsForLocFile, ILocalization, ILocalizationConfiguration } from './plugins/webpackConfigurationPlugin/ILocalization';
export { DEFAULT_PORT, DEFAULT_TEMP_FOLDER } from './utilities/constants';
export { normalizeLocaleName as _normalizeLocaleName } from './utilities/normalizeLocaleName';
export type { ICustomActionConfiguration as _ICustomActionConfiguration, IFieldCustomizerConfiguration as _IFieldCustomizerConfiguration, IServeTaskConfig as _IServeTaskConfig, ISpfxServeSessionConfiguration as _ISpfxServeSessionConfiguration, ISpfxServeTaskConfig as _ISpfxServeTaskConfig, ISpfxServe as _ISpfxServe, IFormCustomizerConfiguration as _IFormCustomizerConfiguration } from './spfxConfig/interfaces/serve';
export { loadServeSchemaJson as _loadServeSchemaJson, readServeConfigFile as _readServeConfigFile } from './spfxConfig/serveJsonReader';
export { DependencyDiscoveryMode as _DependencyDiscoveryMode, CumulativeManifestProcessor as _CumulativeManifestProcessor, type ICumulativeManifestEnvironmentOptions as _ICumulativeManifestEnvironmentOptions, type ICumulativeManifestOptions as _ICumulativeManifestOptions, type IDiscoverManifestsOptions as _IDiscoverManifestsOptions, type IReferencedProjectMap as _IReferencedProjectMap, type IReferencedProject as _IReferencedProject, type IVersionedIdMap as _IVersionedIdMap, type IVersionMap as _IVersionMap } from './spfxManifests/cumulativeManifestProcessor/CumulativeManifestProcessor';
export { getFullHash as _getFullHash } from './spfxManifests/utilities/getFullHash';
export { includeNonStandardExternal as _includeNonStandardExternal, getVersionFromPackageJson as _getVersionFromPackageJson, type IDynamicExternalProject as _IDynamicExternalProject, type IExternalProject as _IExternalProject } from './spfxManifests/utilities/ExternalsProcessor';
export type { IBundleEntry as _IBundleEntry, IBundleComponent as _IBundleComponent } from './spfxManifests/interfaces';
export { type IComponentDependenciesAuditFileBundle as _IComponentDependenciesAuditFileBundle, type IComponentDependenciesAuditFile as _IComponentDependenciesAuditFile, type IComponentDependenciesAuditFileDependency as _IComponentDependenciesAuditFileDependency, type IComponentDependenciesAuditFileBundleAsyncChunks as _IComponentDependenciesAuditFileBundleAsyncChunks, ManifestPlugin as _ManifestPlugin, computeIntegrity as _computeIntegrity, type IManifestPluginOptions as _IManifestPluginOptions, type IWebpackEntrypoint as _IWebpackEntrypoint, type IAsyncOnlyDependenciesOptions as _IAsyncOnlyDependenciesOptions, type ILegacyExternal as _ILegacyExternal } from './spfxManifests/webpack/ManifestPlugin';
export { LocalizedManifestModuleProcessor as _LocalizedManifestModuleProcessor, type IGenerateLocalizedManifestModuleExistingIntegrityOptions as _IGenerateLocalizedManifestModuleExistingIntegrityOptions, type IGenerateLocalizedManifestModuleGenerateIntegrityOptions as _IGenerateLocalizedManifestModuleGenerateIntegrityOptions, type IGenerateLocalizedManifestModuleOptionsBase as _IGenerateLocalizedManifestModuleOptionsBase, type IGenerateLocalizedManifestModuleOptions as _IGenerateLocalizedManifestModuleOptions, type LocalizedPaths as _LocalizedPaths } from './spfxManifests/webpack/LocalizedManifestModuleProcessor';
export { default as _CustomizeWebpackConfigurationPlugin, type ICustomizeWebpackConfigurationPluginOptions as _ICustomizeWebpackConfigurationPluginOptions } from './plugins/CustomizeWebpackConfigurationPlugin';
export { ServeInfoPlugin as _ServeInfoPlugin } from './plugins/webpackConfigurationPlugin/webpackPlugins/ServeInfoPlugin';
export { SolutionPackager as _SolutionPackager, type ISolutionPackagerOptions as _ISolutionPackagerOptions, type IPackageSolutionConfig, type IPackageSolutionConfigPaths } from './plugins/packageSolutionPlugin/SolutionPackager';
export type { IPackageSolution } from './plugins/packageSolutionPlugin/IPackageSolution';
export type { default as ISolution, ISolutionAsset } from './plugins/packageSolutionPlugin/packageSolution/models/packageDefinition/ISolution';
export type { default as ISolutionMetadata, SolutionCategories } from './plugins/packageSolutionPlugin/packageSolution/models/packageDefinition/ISolutionMetadata';
export type { default as IFeature } from './plugins/packageSolutionPlugin/packageSolution/models/packageDefinition/IFeature';
export type { default as IDevProperties } from './plugins/packageSolutionPlugin/packageSolution/models/packageDefinition/IDevProperties';
export type { default as IWebApiPermissionRequest } from './plugins/packageSolutionPlugin/packageSolution/models/packageDefinition/IWebApiPermissionRequest';
export type { default as IComponent, IWebPartDefinition, IWebPartEntryDefinition, IApplicationDefinition, IExtensionDefinition } from './plugins/packageSolutionPlugin/packageSolution/models/packageDefinition/IComponent';
export type { ISharepointAssets } from './plugins/packageSolutionPlugin/packageSolution/models/packageXml/ISharepointAssets';
export { LegacyExternals as _LegacyExternals, type ILegacyLocalizationOptions as _ILegacyLocalizationOptions } from './plugins/thirdPartyExternalsPlugin/LegacyExternals';
export { default as _DeployAzureStoragePlugin, type IDeployToAzureOptions as _IDeployToAzureOptions } from './plugins/deployAzureStorage/DeployAzureStoragePlugin';
/**
 * @internal
 */
import * as WebpackTypes from './plugins/webpackConfigurationPlugin/webpackPlugins/webpackTypes';
export { WebpackTypes as _WebpackTypes };
export { VariableNameGenerator as _VariableNameGenerator } from './utilities/VariableNameGenerator';
//# sourceMappingURL=index.d.ts.map