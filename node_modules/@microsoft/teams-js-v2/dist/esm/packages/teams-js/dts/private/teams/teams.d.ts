/**
 * @module
 * @hidden
 * Module to interact with the `teams` specific part of the SDK.
 *
 * @internal
 * Limited to Microsoft-internal use
 */
import { SdkError } from '../../public/interfaces';
import * as fullTrust from './fullTrust/fullTrust';
export declare enum ChannelType {
    Regular = 0,
    Private = 1,
    Shared = 2
}
/**
 * @hidden
 *
 * @internal
 * Limited to Microsoft-internal use
 */
export interface ChannelInfo {
    siteUrl: string;
    objectId: string;
    folderRelativeUrl: string;
    displayName: string;
    channelType: ChannelType;
}
/**
 * @hidden
 * Get a list of channels belong to a Team
 *
 * @param groupId - a team's objectId
 *
 * @internal
 * Limited to Microsoft-internal use
 */
export declare function getTeamChannels(groupId: string, callback: (error: SdkError, channels: ChannelInfo[]) => void): void;
/**
 * @hidden
 * Allow 1st party apps to call this function when they receive migrated errors to inform the Hub/Host to refresh the siteurl
 * when site admin renames siteurl.
 *
 * @param threadId - ID of the thread where the app entity will be created; if threadId is not
 * provided, the threadId from route params will be used.
 *
 * @internal
 * Limited to Microsoft-internal use
 */
export declare function refreshSiteUrl(threadId: string, callback: (error: SdkError) => void): void;
/**
 * @hidden
 *
 * Checks if teams capability is supported by the host
 * @returns boolean to represent whether the teams capability is supported
 *
 * @throws Error if {@linkcode app.initialize} has not successfully completed
 *
 * @internal
 * Limited to Microsoft-internal use
 */
export declare function isSupported(): boolean;
export { fullTrust };
