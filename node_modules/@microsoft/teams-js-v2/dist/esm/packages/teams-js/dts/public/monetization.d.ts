/**
 * @hidden
 * Hidden from Docs
 *
 * @internal
 * Limited to Microsoft-internal use
 * @module
 */
import { SdkError } from './interfaces';
/**
 * @hidden
 * Data structure to represent a subscription plan.
 *
 * @internal
 * Limited to Microsoft-internal use
 */
export interface PlanInfo {
    /**
     * @hidden
     * plan id
     */
    planId: string;
    /**
     * @hidden
     * term of the plan
     */
    term: string;
}
/**
 * @hidden
 * Open dialog to start user's purchase experience
 *
 * @param planInfo optional parameter. It contains info of the subscription plan pushed to users.
 * error can either contain an error of type SdkError, incase of an error, or null when get is successful
 * @returns Promise that will be resolved when the operation has completed or rejected with SdkError value
 *
 * @internal
 * Limited to Microsoft-internal use
 */
export declare function openPurchaseExperience(planInfo?: PlanInfo): Promise<void>;
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link monetization.openPurchaseExperience monetization.openPurchaseExperience(planInfo?: PlanInfo): Promise\<void\>} instead.
 *
 * @hidden
 * Open dialog to start user's purchase experience
 *
 * @param callback Callback contains 1 parameters, error.
 * @param planInfo optional parameter. It contains info of the subscription plan pushed to users.
 * error can either contain an error of type SdkError, incase of an error, or null when get is successful
 *
 * @internal
 * Limited to Microsoft-internal use
 */
export declare function openPurchaseExperience(callback: (error: SdkError | null) => void, planInfo?: PlanInfo): void;
/**
 * @hidden
 *
 * Checks if the monetization capability is supported by the host
 * @returns boolean to represent whether the monetization capability is supported
 *
 * @throws Error if {@linkcode app.initialize} has not successfully completed
 */
export declare function isSupported(): boolean;
