import { FrameInfo, ShareDeepLinkParameters, TabInformation, TabInstance, TabInstanceParameters } from '../public/interfaces';
import * as pages from '../public/pages/pages';
import { ApiVersionNumber } from './telemetry';
/**
 * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY
 */
export declare const pagesTelemetryVersionNumber: ApiVersionNumber;
export declare function navigateCrossDomainHelper(apiVersionTag: string, url: string): Promise<void>;
export declare function backStackNavigateBackHelper(apiVersionTag: string): Promise<void>;
export declare function tabsNavigateToTabHelper(apiVersionTag: string, tabInstance: TabInstance): Promise<void>;
/**
 * @hidden
 */
export declare function returnFocusHelper(apiVersionTag: string, navigateForward?: boolean): void;
export declare function getTabInstancesHelper(apiVersionTag: string, tabInstanceParameters?: TabInstanceParameters): Promise<TabInformation>;
export declare function getMruTabInstancesHelper(apiVersionTag: string, tabInstanceParameters?: TabInstanceParameters): Promise<TabInformation>;
export declare function shareDeepLinkHelper(apiVersionTag: string, deepLinkParameters: ShareDeepLinkParameters): void;
export declare function setCurrentFrameHelper(apiVersionTag: string, frameInfo: FrameInfo): void;
export declare function configSetValidityStateHelper(apiVersionTag: string, validityState: boolean): void;
export declare function getConfigHelper(apiVersionTag: string): Promise<pages.InstanceConfig>;
export declare function configSetConfigHelper(apiVersionTag: string, instanceConfig: pages.InstanceConfig): Promise<void>;
export declare function isAppNavigationParametersObject(obj: pages.AppNavigationParameters | pages.NavigateToAppParams): obj is pages.AppNavigationParameters;
export declare function convertNavigateToAppParamsToAppNavigationParameters(params: pages.NavigateToAppParams): pages.AppNavigationParameters;
export declare function convertAppNavigationParametersToNavigateToAppParams(params: pages.AppNavigationParameters): pages.NavigateToAppParams;
