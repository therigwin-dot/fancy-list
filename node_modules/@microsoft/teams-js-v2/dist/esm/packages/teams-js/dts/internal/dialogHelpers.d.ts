import * as dialog from '../public/dialog/dialog';
import { AdaptiveCardDialogInfo, BotAdaptiveCardDialogInfo } from '../public/interfaces';
import { BotUrlDialogInfo, DialogInfo, DialogSize, UrlDialogInfo } from '../public/interfaces';
import { ApiVersionNumber } from './telemetry';
/**
 * v2 APIs telemetry file: All of APIs in this capability file should send out API version v2 ONLY
 */
export declare const dialogTelemetryVersionNumber: ApiVersionNumber;
export declare function updateResizeHelper(apiVersionTag: string, dimensions: DialogSize): void;
export declare function urlOpenHelper(apiVersionTag: string, urlDialogInfo: UrlDialogInfo, submitHandler?: dialog.DialogSubmitHandler, messageFromChildHandler?: dialog.PostMessageChannel): void;
export declare function botUrlOpenHelper(apiVersionTag: string, urlDialogInfo: BotUrlDialogInfo, submitHandler?: dialog.DialogSubmitHandler, messageFromChildHandler?: dialog.PostMessageChannel): void;
export declare function urlSubmitHelper(apiVersionTag: string, result?: string | object, appIds?: string | string[]): void;
/**
 * @hidden
 * Hide from docs
 * --------
 * Convert AdaptiveCardDialogInfo to DialogInfo to send the information to host in {@linkcode adaptiveCard.open} API.
 *
 * @internal
 */
export declare function getDialogInfoFromAdaptiveCardDialogInfo(adaptiveCardDialogInfo: AdaptiveCardDialogInfo): DialogInfo;
/**
 * @hidden
 * Hide from docs
 * --------
 * Convert BotAdaptiveCardDialogInfo to DialogInfo to send the information to host in {@linkcode adaptiveCard.open} API.
 *
 * @internal
 */
export declare function getDialogInfoFromBotAdaptiveCardDialogInfo(botAdaptiveCardDialogInfo: BotAdaptiveCardDialogInfo): DialogInfo;
export declare const storedMessages: string[];
export declare function handleDialogMessage(message: string): void;
