import { ExpectedFailureReason, FailedReason, IExpectedFailureRequest, IFailedRequest, Messages } from './app/app';
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.Messages} instead.
 */
export { Messages };
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.FailedReason} instead.
 */
export { FailedReason };
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.ExpectedFailureReason} instead.
 */
export { ExpectedFailureReason };
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.IFailedRequest} instead.
 */
export { IFailedRequest };
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.IExpectedFailureRequest} instead.
 */
export { IExpectedFailureRequest };
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.notifyAppLoaded app.notifyAppLoaded(): void} instead.
 *
 * Notifies the frame that app has loaded and to hide the loading indicator if one is shown.
 */
export declare function notifyAppLoaded(): void;
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.notifySuccess app.notifySuccess(): Promise<NotifySuccessResponse>} instead.
 *
 * Notifies the frame that app initialization is successful and is ready for user interaction.
 */
export declare function notifySuccess(): void;
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.notifyFailure app.notifyFailure(appInitializationFailedRequest: IFailedRequest): void} instead.
 *
 * Notifies the frame that app initialization has failed and to show an error page in its place.
 * @param appInitializationFailedRequest - The failure request containing the reason for why the app failed
 * during initialization as well as an optional message.
 */
export declare function notifyFailure(appInitializationFailedRequest: IFailedRequest): void;
/**
 * @deprecated
 * As of TeamsJS v2.0.0, please use {@link app.notifyExpectedFailure app.notifyExpectedFailure(expectedFailureRequest: IExpectedFailureRequest): void} instead.
 *
 * Notifies the frame that app initialized with some expected errors.
 * @param expectedFailureRequest - The expected failure request containing the reason and an optional message
 */
export declare function notifyExpectedFailure(expectedFailureRequest: IExpectedFailureRequest): void;
