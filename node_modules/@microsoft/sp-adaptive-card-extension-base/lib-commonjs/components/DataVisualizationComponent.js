"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._getCartesianChartLayoutProperties = exports._getDataVisualizationComponentPosition = void 0;
/**
 * Chart is rendered on right side (fixed layout) if atleast 2 of the 3 card elements are present: Header, Footer, Description
 *
 * @internal
 */
function _getDataVisualizationComponentPosition(hasHeader, hasDescription, hasFooter) {
    return (hasHeader && hasFooter) || (hasDescription && (hasHeader || hasFooter)) ? 'fixed' : 'body';
}
exports._getDataVisualizationComponentPosition = _getDataVisualizationComponentPosition;
function _getCartesianChartLayoutProperties(parameters, hasHeader, hasDescription, hasFooter, cardSize) {
    // Chart is rendered on right side if atleast 2 of the 3 are present: Header, Footer, Description
    var position = _getDataVisualizationComponentPosition(hasHeader, hasDescription, hasFooter);
    // Width of the chart is half of the large card if it is in fixed layout which is approximately equal as Medium Card
    var isMediumSizedChart = position === 'fixed' || cardSize === 'Medium';
    // if chart is in body and at least one of the 3 (header, footer, description) is present, then it is partial height, max limit of yLabels is 3
    // Height of chart is full in case of fixed layout or medium cards
    var isPartialHeightChart = (hasHeader || hasFooter || hasDescription) && !isMediumSizedChart;
    // Show legend only for full-sized charts with multiple series, where at least one series has a name.
    var showLegend = !isMediumSizedChart &&
        !isPartialHeightChart &&
        parameters.series.length > 1 &&
        parameters.series.some(function (s) { return 'name' in s; });
    return { isMediumSizedChart: isMediumSizedChart, isPartialHeightChart: isPartialHeightChart, showLegend: showLegend, position: position };
}
exports._getCartesianChartLayoutProperties = _getCartesianChartLayoutProperties;
//# sourceMappingURL=DataVisualizationComponent.js.map