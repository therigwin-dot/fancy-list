"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._preProcessLineChartParameters = exports._lineConfigurationToParameters = void 0;
var tslib_1 = require("tslib");
var DataVisualizationComponent_1 = require("./DataVisualizationComponent");
/**
 * Convert line chart configuration to data visualization parameters.
 *
 * @internal
 */
function _lineConfigurationToParameters(configuration) {
    return configuration;
}
exports._lineConfigurationToParameters = _lineConfigurationToParameters;
function _preProcessLineChartParameters(parameters, hasHeader, hasDescription, hasFooter, cardSize) {
    var params = tslib_1.__assign({}, parameters);
    // If at least one of series[].data[].x is of type Date, set type to 'date'
    var type = params.series.some(function (series) {
        return series.data.some(function (data) { return data.x instanceof Date; });
    })
        ? 'date'
        : 'number';
    var _a = (0, DataVisualizationComponent_1._getCartesianChartLayoutProperties)(params, hasHeader, hasDescription, hasFooter, cardSize), isMediumSizedChart = _a.isMediumSizedChart, isPartialHeightChart = _a.isPartialHeightChart, showLegend = _a.showLegend, position = _a.position;
    if (isMediumSizedChart && params.series.length > 1) {
        params.series = params.series.slice(0, 1);
    }
    params._metadata = {
        type: type,
        xLabelsCount: isMediumSizedChart ? 3 : 6,
        yLabelsCount: isPartialHeightChart ? 3 : 4,
        showLegend: showLegend,
        position: position
    };
    return params;
}
exports._preProcessLineChartParameters = _preProcessLineChartParameters;
//# sourceMappingURL=LineChartComponent.js.map