"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IframedWebPartAction = void 0;
/**
 * Strings for the 'action' property on IIframedWebPartMessage.
 * @internal
 */
// eslint-disable-next-line @typescript-eslint/typedef
exports.IframedWebPartAction = {
    /**
     * An action to delete the web part.
     */
    DeleteWebPart: 'iframeDeleteWebPart',
    /**
     * An action to request the current DisplayMode of a WebPart.
     */
    RequestDisplayMode: 'iframeRequestDisplayMode',
    /**
     * An action requested on the PropertyPane.
     */
    RequestPropertyPaneAction: 'iframeRequestPropertyPaneAction',
    /**
     * An action to set the DisplayMode of an iframed WebPart.
     */
    SetDisplayMode: 'iframeSetDisplayMode',
    /**
     * An action to set the dimensions of the iframe to match it's embed contents.
     * Example dimensions: height and/or width.
     */
    SetDimensions: 'iframeSetDimensions',
    /**
     * An action from the IframedWebPartController to the window that
     * is showing the WebPart or PropertyPane.
     */
    SetWebPartData: 'iframeSetWebPartData',
    /**
     * An action to update the WebPart with the data changed by the PropertyPane.
     */
    UpdateWebPartData: 'iframeUpdateWebPartData',
    /**
     * An action to update the PropertyPane with the data changed by the rendered WebPart.
     */
    UpdatePropertyPaneData: 'iframeUpdatePropertyPaneData',
    /**
     * The action corresponds to a PropertyPane lifecycle event.
     */
    UpdatePropertyPaneLifeCycle: 'iframePropertyPaneLifeCycle',
    /**
     * Action to indicate that the web part is rendered in the iframe application
     * where the property pane is to be rendered.
     */
    WebPartRenderedInPropertyPaneIframe: 'webPartRenderedInPropertyPaneIframe',
    /**
     * Action to communicate a message to the main page from the dynamic data scenarios.
     */
    DynamicDataMessage: 'isolatedDynamicDataMessage',
    /**
     * Action corresponds to update life cycle method in page host
     */
    UpdateWebpartLifeCycle: 'iframeUpdateWebpartLifeCycle',
    /**
     * Action corresponding to a request from the isolated application to the host for an OBO token.
     */
    GetOboToken: 'iframeGetOboToken',
    /**
     * Action corresponding to a response from the host to the isolated application for an OBO token.
     */
    SetOboToken: 'iframeSetOboToken',
    /**
     * An action to request the Theme for the current web part.
     */
    RequestTheme: 'iframeRequestTheme',
    /**
     * An action to set the Theme of an iframed web part.
     */
    SetTheme: 'iframeSetTheme',
    /**
     * Action to communicate to the canvas that the web part's audiences have been updated.
     */
    UpdateAudiences: 'iframeUpdateAudiences'
};
//# sourceMappingURL=IIframedWebPartMessage.js.map