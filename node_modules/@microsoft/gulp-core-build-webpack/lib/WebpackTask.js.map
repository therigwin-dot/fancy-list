{"version":3,"file":"WebpackTask.js","sourceRoot":"","sources":["../src/WebpackTask.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as colors from 'colors';\r\nimport type * as Webpack from 'webpack';\r\nimport { GulpTask, IBuildConfig } from '@microsoft/gulp-core-build';\r\nimport * as Gulp from 'gulp';\r\nimport { EOL } from 'os';\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IWebpackTaskConfig {\r\n  /**\r\n   * Path to a webpack config. A path to a config takes precedence over the \"config\" option.\r\n   */\r\n  configPath: string;\r\n\r\n  /**\r\n   * Webpack config object, or array of config objects for multi-compiler.\r\n   * If a path is specified by \"configPath,\" and it is valid, this option is ignored.\r\n   */\r\n  config?: Webpack.Configuration | Webpack.Configuration[];\r\n\r\n  /**\r\n   * An array of regular expressions or regular expression strings. If a warning matches any of them, it\r\n   * will not be logged.\r\n   */\r\n  suppressWarnings?: (string | RegExp)[];\r\n\r\n  /**\r\n   * An instance of the webpack compiler object, useful for building with Webpack 2.X while GCB is still on 1.X.\r\n   */\r\n  webpack?: typeof Webpack;\r\n\r\n  /**\r\n   * If true, a summary of the compilation will be printed after it completes. Defaults to true.\r\n   */\r\n  printStats?: boolean;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface IWebpackResources {\r\n  webpack: typeof Webpack;\r\n}\r\n\r\nfunction normalizeWebpackError(error: Webpack.StatsError): string {\r\n  if (typeof error === 'string') {\r\n    return error;\r\n  } else {\r\n    const { loc, moduleName, moduleIdentifier } = error;\r\n    const modulePath: string | undefined = moduleName ?? moduleIdentifier;\r\n    if (modulePath) {\r\n      if (loc) {\r\n        return `${modulePath}:${loc}: ${error.message}`;\r\n      } else {\r\n        return `${modulePath}: ${error.message}`;\r\n      }\r\n    } else {\r\n      return error.message;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport class WebpackTask<TExtendedConfig = {}> extends GulpTask<IWebpackTaskConfig & TExtendedConfig> {\r\n  private _resources: IWebpackResources;\r\n\r\n  public constructor(extendedName?: string, extendedConfig?: TExtendedConfig) {\r\n    super(\r\n      extendedName || 'webpack',\r\n      {\r\n        configPath: './webpack.config.js',\r\n        suppressWarnings: [],\r\n        printStats: true,\r\n        ...extendedConfig\r\n      } as any // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    );\r\n  }\r\n\r\n  public get resources(): IWebpackResources {\r\n    if (!this._resources) {\r\n      this._resources = {\r\n        webpack: this.taskConfig.webpack || require('webpack')\r\n      };\r\n    }\r\n\r\n    return this._resources;\r\n  }\r\n\r\n  public isEnabled(buildConfig: IBuildConfig): boolean {\r\n    return super.isEnabled(buildConfig) && this.taskConfig.configPath !== null;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  public loadSchema(): any {\r\n    return require('./webpack.schema.json');\r\n  }\r\n\r\n  public executeTask(gulp: typeof Gulp, completeCallback: (error?: string) => void): void {\r\n    // eslint-disable-next-line\r\n    const path = require('path');\r\n\r\n    let webpackConfig: any; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n\r\n    if (this.taskConfig.configPath && this.fileExists(this.taskConfig.configPath)) {\r\n      try {\r\n        webpackConfig = require(this.resolvePath(this.taskConfig.configPath));\r\n      } catch (err) {\r\n        completeCallback(`Error parsing webpack config: ${this.taskConfig.configPath}: ${err}`);\r\n        return;\r\n      }\r\n    } else if (this.taskConfig.config) {\r\n      webpackConfig = this.taskConfig.config;\r\n    } else {\r\n      this._logMissingConfigWarning();\r\n      completeCallback();\r\n      return;\r\n    }\r\n\r\n    if (webpackConfig) {\r\n      const webpack: typeof Webpack = this.taskConfig.webpack || require('webpack');\r\n      if (parseInt(webpack.version) !== 5) {\r\n        this.logWarning(\r\n          `This version of gulp-core-build-webpack is designed to work with webpack 5. ` +\r\n            `You are currently using webpack ${webpack.version}.`\r\n        );\r\n      }\r\n      const startTime: number = new Date().getTime();\r\n      const outputDir: string = this.buildConfig.distFolder;\r\n\r\n      webpack(webpackConfig, (error, stats) => {\r\n        if (!this.buildConfig.properties) {\r\n          this.buildConfig.properties = {};\r\n        }\r\n\r\n        // eslint-disable-next-line dot-notation\r\n        this.buildConfig.properties['webpackStats'] = stats;\r\n\r\n        let statsResult: Webpack.StatsCompilation | undefined;\r\n        try {\r\n          statsResult = stats?.toJson({\r\n            hash: false,\r\n            source: false\r\n          });\r\n        } catch (e) {\r\n          this.logError(`Error processing webpack stats: ${e}`);\r\n\r\n          if (error) {\r\n            // Log this here in case we didn't get a stats object because of an error. Otherwise log errors\r\n            // from the stats object.\r\n            this.logError(`Webpack error: ${error}`);\r\n          }\r\n        }\r\n\r\n        if (statsResult) {\r\n          if (statsResult.errors && statsResult.errors.length) {\r\n            const errorTexts: string[] = [];\r\n            for (const error of statsResult.errors) {\r\n              errorTexts.push(normalizeWebpackError(error));\r\n            }\r\n\r\n            this.logError(`'${outputDir}':` + EOL + errorTexts.join(EOL) + EOL);\r\n          }\r\n\r\n          if (statsResult.warnings && statsResult.warnings.length) {\r\n            const unsuppressedWarnings: Webpack.StatsError[] = [];\r\n            const warningSuppressionRegexes: RegExp[] = (this.taskConfig.suppressWarnings || []).map(\r\n              (regex: string) => {\r\n                return new RegExp(regex);\r\n              }\r\n            );\r\n\r\n            for (const warning of statsResult.warnings) {\r\n              let suppressed: boolean = false;\r\n              for (let i: number = 0; i < warningSuppressionRegexes.length; i++) {\r\n                const suppressionRegex: RegExp = warningSuppressionRegexes[i];\r\n                if (warning.message.match(suppressionRegex)) {\r\n                  suppressed = true;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              if (!suppressed) {\r\n                unsuppressedWarnings.push(warning);\r\n              }\r\n            }\r\n\r\n            if (unsuppressedWarnings.length > 0) {\r\n              const warningTexts: string[] = [];\r\n              for (const warning of unsuppressedWarnings) {\r\n                warningTexts.push(normalizeWebpackError(warning));\r\n              }\r\n\r\n              this.logWarning(`'${outputDir}':` + EOL + warningTexts.join(EOL) + EOL);\r\n            }\r\n          }\r\n\r\n          if (this.taskConfig.printStats) {\r\n            const duration: number = new Date().getTime() - startTime;\r\n            const statsResultChildren: Webpack.StatsCompilation[] = statsResult.children\r\n              ? statsResult.children\r\n              : [statsResult];\r\n\r\n            for (const child of statsResultChildren) {\r\n              if (child.chunks) {\r\n                for (const chunk of child.chunks) {\r\n                  if (chunk.files) {\r\n                    for (const file of chunk.files) {\r\n                      this.log(\r\n                        `Bundled: '${colors.cyan(path.basename(file))}', ` +\r\n                          `size: ${colors.magenta(chunk.size.toString())} bytes, ` +\r\n                          `took ${colors.magenta(duration.toString(10))} ms.`\r\n                      );\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        completeCallback();\r\n      }); // endwebpack callback\r\n    }\r\n  }\r\n\r\n  private _logMissingConfigWarning(): void {\r\n    this.logWarning(\r\n      'No webpack config has been provided. ' +\r\n        'Create a webpack.config.js file ' +\r\n        `or call webpack.setConfig({ configPath: null }) in your gulpfile.`\r\n    );\r\n  }\r\n}\r\n"]}