"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPivotFromConsumerId = exports.getSupportedPivots = void 0;
var sp_pages_content_panel_context_1 = require("@ms/sp-pages-content-panel-context");
var Flights_1 = require("../common/Flights");
var excludedPanels_1 = require("./excludedPanels");
function getSupportedPivots() {
    var excludedPanels = (0, excludedPanels_1.getExcludedPanels)();
    return [sp_pages_content_panel_context_1.SPPagesContentPanelPivot.configurationTools, sp_pages_content_panel_context_1.SPPagesContentPanelPivot.pageDetails].filter(function (supportedPivots) { return !excludedPanels.has(supportedPivots); });
}
exports.getSupportedPivots = getSupportedPivots;
function getPivotFromConsumerId(consumerId) {
    if ((0, Flights_1.isPageDetailsEnabled)() && consumerId === 'PageSettingsPane') {
        return sp_pages_content_panel_context_1.SPPagesContentPanelPivot.pageDetails;
    }
    // for now, assume every other consumer belongs to configuration tools.
    // When other pivots are added, update the check above.
    return sp_pages_content_panel_context_1.SPPagesContentPanelPivot.configurationTools;
}
exports.getPivotFromConsumerId = getPivotFromConsumerId;
//# sourceMappingURL=supportedPivotUtils.js.map