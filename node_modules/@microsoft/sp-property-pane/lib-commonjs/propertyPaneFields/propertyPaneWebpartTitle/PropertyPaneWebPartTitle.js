"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyPaneWebPartTitle = void 0;
var tslib_1 = require("tslib");
var Strings_resx_1 = tslib_1.__importDefault(require("../../loc/Strings.resx"));
var IPropertyPaneField_1 = require("../propertyPaneField/IPropertyPaneField");
var office_ui_fabric_react_bundle_1 = require("@ms/office-ui-fabric-react-bundle");
var react_1 = tslib_1.__importDefault(require("react"));
var getPropertyPaneHeadingLevelDropdownProperties_1 = require("./getPropertyPaneHeadingLevelDropdownProperties");
/**
 * Helper method to create an Heading dropdown and enable heading toggle on the PropertyPane.
 * @param properties - Strongly typed Heading dropdown and toggle properties.
 *
 * @internal
 */
function PropertyPaneWebPartTitle(properties) {
    return tslib_1.__spreadArray([
        {
            type: IPropertyPaneField_1.PropertyPaneFieldType.Toggle,
            targetProperty: properties.isTitleEnabledPropertyName
                ? properties.isTitleEnabledPropertyName
                : 'isTitleEnabled',
            properties: getPropertyPaneToggleProperties(properties.isTitleEnabled, properties.moduleName, 'enable-webpart-title-toggle', 'ShowWebpartTitle')
        }
    ], (properties.hideHeadingLevelDropdown
        ? []
        : [
            {
                type: IPropertyPaneField_1.PropertyPaneFieldType.Dropdown,
                targetProperty: properties.headingLevelPropertyName
                    ? properties.headingLevelPropertyName
                    : 'headingLevel',
                properties: tslib_1.__assign(tslib_1.__assign({}, (0, getPropertyPaneHeadingLevelDropdownProperties_1.getPropertyPaneHeadingLevelDropdownProperties)(properties.headingLevel, properties.moduleName, 'heading-size-dropdown', 'ChooseHeadingLevel')), { disabled: properties.isTitleEnabled !== undefined ? !properties.isTitleEnabled : false })
            }
        ]), true);
}
exports.PropertyPaneWebPartTitle = PropertyPaneWebPartTitle;
function getPropertyPaneToggleProperties(isTitleEnabled, moduleName, dataAutomationId, controlName) {
    return tslib_1.__assign({ onText: Strings_resx_1.default.ToggleOnText, offText: Strings_resx_1.default.ToggleOffText, onAriaLabel: Strings_resx_1.default.TitleToggleOnAriaLabel, offAriaLabel: Strings_resx_1.default.TitleToggleOffAriaLabel, dataAutomationId: dataAutomationId, checked: isTitleEnabled, ariaLabel: Strings_resx_1.default.ShowTitle, _label: getTitleToggleLabel() }, {
        logName: { moduleName: moduleName, controlName: controlName }
    });
}
function getTitleToggleLabel() {
    return (react_1.default.createElement("div", { style: { display: 'inline-flex' } },
        react_1.default.createElement(office_ui_fabric_react_bundle_1.Label, { "aria-label": Strings_resx_1.default.ShowTitle }, Strings_resx_1.default.ShowTitle)));
}
//# sourceMappingURL=PropertyPaneWebPartTitle.js.map