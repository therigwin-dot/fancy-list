import type * as WorkerThreads from 'worker_threads';
import type { IMinifierConnection, IModuleMinificationCallback, IModuleMinificationRequest, IModuleMinifier } from './types';
/**
 * Minifier implementation that outsources requests to the other side of a MessagePort
 * @public
 */
export declare class MessagePortMinifier implements IModuleMinifier {
    readonly port: WorkerThreads.MessagePort;
    private readonly _callbacks;
    constructor(port: WorkerThreads.MessagePort);
    /**
     * No-op code transform.
     * @param request - The request to process
     * @param callback - The callback to invoke
     */
    minify(request: IModuleMinificationRequest, callback: IModuleMinificationCallback): void;
    /**
     * {@inheritdoc IModuleMinifier.connectAsync}
     */
    connectAsync(): Promise<IMinifierConnection>;
    /**
     * @deprecated Use {@link MessagePortMinifier.connectAsync} instead
     */
    connect(): Promise<IMinifierConnection>;
}
//# sourceMappingURL=MessagePortMinifier.d.ts.map