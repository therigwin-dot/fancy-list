import type { TARGET_ROOT_SCRIPT_RELATIVE_PATH_TEMPLATE_STRING as TargetRootScriptRelativePathTemplateString } from '../../../PackageExtractor';
/**
 * The maximum number of concurrent operations to perform.
 */
export declare const MAX_CONCURRENCY: number;
/**
 * The name of the action to create symlinks.
 */
export declare const CREATE_ACTION_NAME: 'create';
/**
 * The name of the action to remove symlinks.
 */
export declare const REMOVE_ACTION_NAME: 'remove';
/**
 * The name of the parameter to realize files when creating symlinks.
 */
export declare const REALIZE_FILES_PARAMETER_NAME: '--realize-files';
/**
 * The name of the parameter to link bins when creating symlinks.
 */
export declare const LINK_BINS_PARAMETER_NAME: '--link-bins';
/**
 * The name of the parameter to link packages when creating symlinks. The actual value of this
 * export is modified after bundling the script to ensure that the extracted version of the script
 * contains the relative path from the extraction target folder to the script. Generally, this
 * value should not be used directly, but rather the `TARGET_ROOT_FOLDER` export should be used
 * instead.
 */
export declare const TARGET_ROOT_SCRIPT_RELATIVE_PATH: typeof TargetRootScriptRelativePathTemplateString;
/**
 * The path to the root folder where symlinks are created.
 */
export declare const TARGET_ROOT_FOLDER: string;
//# sourceMappingURL=constants.d.ts.map