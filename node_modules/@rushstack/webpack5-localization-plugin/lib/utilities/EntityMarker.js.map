{"version":3,"file":"EntityMarker.js","sourceRoot":"","sources":["../../src/utilities/EntityMarker.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAO3D,gCAEC;AAKD,0BAEC;AAdD,MAAM,KAAK,GAA6B,IAAI,OAAO,EAAE,CAAC;AAEtD;;GAEG;AACH,SAAgB,UAAU,CAAC,MAAc,EAAE,KAAc;IACvD,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC3B,CAAC;AAED;;GAEG;AACH,SAAgB,OAAO,CAAC,MAAc;IACpC,OAAO,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC3B,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nconst MARKS: WeakMap<object, boolean> = new WeakMap();\n\n/**\n * Marks a webpack entity as containing or not containing localized resources.\n */\nexport function markEntity(entity: object, value: boolean): void {\n  MARKS.set(entity, value);\n}\n\n/**\n * Read the cache marker for whether or not the entity contains localized resources.\n */\nexport function getMark(entity: object): boolean | undefined {\n  return MARKS.get(entity);\n}\n"]}