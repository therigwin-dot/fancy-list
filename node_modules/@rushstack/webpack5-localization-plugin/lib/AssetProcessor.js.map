{"version":3,"file":"AssetProcessor.js","sourceRoot":"","sources":["../src/AssetProcessor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { Asset, AssetInfo, Chunk, Compilation, sources } from 'webpack';\n\nimport * as Constants from './utilities/Constants';\nimport type { LocalizationPlugin, IStringPlaceholder } from './LocalizationPlugin';\nimport type { ILocalizedWebpackChunk, IAssetPathOptions } from './webpackInterfaces';\n\ninterface ILocalizedReconstructionElement {\n  kind: 'localized';\n  start: number;\n  end: number;\n  escapedBackslash: string;\n  data: IStringPlaceholder;\n}\n\ninterface IDynamicReconstructionElement {\n  kind: 'dynamic';\n  start: number;\n  end: number;\n  valueFn: (locale: string) => string;\n}\n\ntype IReconstructionElement = ILocalizedReconstructionElement | IDynamicReconstructionElement;\ntype FormatLocaleForFilenameFn = (locale: string) => string;\n\ninterface IParseResult {\n  issues: string[];\n  reconstructionSeries: IReconstructionElement[];\n}\n\ninterface ILocalizedReconstructionResult {\n  result: sources.ReplaceSource;\n  issues: string[];\n}\n\ninterface INonLocalizedReconstructionResult {\n  result: sources.ReplaceSource;\n  issues: string[];\n}\n\nexport interface IProcessAssetOptionsBase {\n  plugin: LocalizationPlugin;\n  compilation: Compilation;\n  cache: ReturnType<Compilation['getCache']>;\n  chunk: Chunk;\n  asset: Asset;\n}\n\nexport interface IProcessNonLocalizedAssetOptions extends IProcessAssetOptionsBase {\n  fileName: string;\n  hasUrlGenerator: boolean;\n  noStringsLocaleName: string;\n  formatLocaleForFilenameFn: FormatLocaleForFilenameFn;\n}\n\nexport interface IProcessLocalizedAssetOptions extends IProcessAssetOptionsBase {\n  locales: Set<string>;\n  fillMissingTranslationStrings: boolean;\n  defaultLocale: string;\n  passthroughLocaleName: string | undefined;\n  filenameTemplate: Parameters<typeof Compilation.prototype.getAssetPath>[0];\n  formatLocaleForFilenameFn: FormatLocaleForFilenameFn;\n}\n\nexport interface IProcessAssetResult {\n  filename: string;\n  asset: sources.Source;\n}\n\nexport const PLACEHOLDER_REGEX: RegExp = new RegExp(\n  `${Constants.STRING_PLACEHOLDER_PREFIX}_([A-C])_(\\\\\\\\*)_([0-9a-f$]+)_`,\n  'g'\n);\n\nexport interface IProcessedAsset {\n  filename: string;\n  source: sources.CachedSource;\n  info: AssetInfo;\n}\n\nexport interface IProcessLocalizedAssetResult {\n  localizedFiles: Record<string, string>;\n  processedAssets: IProcessedAsset[];\n}\n\ntype ItemCacheFacade = ReturnType<ReturnType<Compilation['getCache']>['getItemCache']>;\n\nexport async function processLocalizedAssetCachedAsync(\n  options: IProcessLocalizedAssetOptions\n): Promise<Record<string, string>> {\n  const { compilation, asset, cache, chunk } = options;\n  const { source: originalSource } = asset;\n\n  type ETag = NonNullable<ReturnType<typeof cache.getLazyHashedEtag>>;\n  const eTag: ETag | null = cache.getLazyHashedEtag(originalSource);\n  const { name: originName } = asset;\n  const cacheItem: ItemCacheFacade = cache.getItemCache(originName, eTag);\n  let output: IProcessLocalizedAssetResult | undefined = await cacheItem.getPromise();\n\n  if (!output) {\n    output = processLocalizedAsset(options);\n    await cacheItem.storePromise(output);\n  }\n\n  const { localizedFiles, processedAssets } = output;\n\n  (chunk as ILocalizedWebpackChunk).localizedFiles = localizedFiles;\n\n  for (const { filename, source, info } of processedAssets) {\n    if (originName === filename) {\n      // This helper throws if the asset doesn't already exist\n      // Use the function form so that the object identity of `related` is preserved.\n      // Since we already read the original info, we don't need fancy merge logic.\n      compilation.updateAsset(filename, source, () => info);\n    } else {\n      // This helper throws if the asset already exists\n      compilation.emitAsset(filename, source, info);\n    }\n  }\n\n  return localizedFiles;\n}\n\nexport function processLocalizedAsset(options: IProcessLocalizedAssetOptions): IProcessLocalizedAssetResult {\n  const { compilation, asset, chunk, filenameTemplate, locales, formatLocaleForFilenameFn } = options;\n\n  const { sources, WebpackError } = compilation.compiler.webpack;\n\n  const { source: originalSource } = asset;\n\n  const rawSource: sources.CachedSource =\n    originalSource instanceof sources.CachedSource\n      ? originalSource\n      : new sources.CachedSource(originalSource);\n  const assetSource: string = rawSource.source().toString();\n\n  const parsedAsset: IParseResult = _parseStringToReconstructionSequence(\n    options.plugin,\n    assetSource,\n    formatLocaleForFilenameFn\n  );\n\n  const { issues } = parsedAsset;\n\n  const localizedFiles: Record<string, string> = {};\n\n  const processedAssets: IProcessedAsset[] = [];\n\n  const { info: originInfo, name: originName } = asset;\n  if (!originInfo.related) {\n    originInfo.related = {};\n  }\n\n  for (const locale of locales) {\n    const { issues: localeIssues, result: localeResult } = _reconstructLocalized(\n      new sources.ReplaceSource(rawSource, locale),\n      parsedAsset.reconstructionSeries,\n      locale,\n      options.fillMissingTranslationStrings ? options.defaultLocale : undefined,\n      options.passthroughLocaleName\n    );\n\n    for (const issue of localeIssues) {\n      issues.push(issue);\n    }\n\n    const data: IAssetPathOptions = {\n      chunk,\n      contentHashType: 'javascript',\n      // The locale property will get processed by the extension to the getAssetPath hook\n      locale\n    };\n\n    const fileName: string = compilation.getAssetPath(filenameTemplate, data);\n\n    const info: AssetInfo & { locale: string } = {\n      ...originInfo,\n      locale\n    };\n\n    const wrapped: sources.CachedSource = new sources.CachedSource(localeResult);\n    localizedFiles[locale] = fileName;\n\n    processedAssets.push({\n      filename: fileName,\n      source: wrapped,\n      info\n    });\n\n    // If file already exists\n    if (originName !== fileName) {\n      // If A.related points to B, B.related can't point to A or the stats emitter explodes\n      // So just strip the related object for the localized assets\n      info.related = undefined;\n      // We omit the `related` property that does a self-reference.\n      originInfo.related[locale] = fileName;\n    }\n  }\n\n  if (issues.length > 0) {\n    compilation.errors.push(\n      new WebpackError(`localization:\\n${issues.map((issue) => `  ${issue}`).join('\\n')}`)\n    );\n  }\n\n  return {\n    localizedFiles,\n    processedAssets\n  };\n}\n\nexport async function processNonLocalizedAssetCachedAsync(\n  options: IProcessNonLocalizedAssetOptions\n): Promise<void> {\n  const { compilation, asset, cache } = options;\n  const { source: originalSource } = asset;\n\n  type ETag = NonNullable<ReturnType<typeof cache.getLazyHashedEtag>>;\n  const eTag: ETag | null = cache.getLazyHashedEtag(originalSource);\n  const { name: originName } = asset;\n  const cacheItem: ItemCacheFacade = cache.getItemCache(originName, eTag);\n  let output: IProcessedAsset | undefined = await cacheItem.getPromise();\n\n  if (!output) {\n    output = processNonLocalizedAsset(options);\n    await cacheItem.storePromise(output);\n  }\n\n  const { filename, source, info } = output;\n  compilation.updateAsset(originName, source, info);\n  if (originName !== filename) {\n    compilation.renameAsset(originName, filename);\n  }\n}\n\nexport function processNonLocalizedAsset(options: IProcessNonLocalizedAssetOptions): IProcessedAsset {\n  const { asset, fileName, compilation, formatLocaleForFilenameFn, hasUrlGenerator } = options;\n\n  const { sources, WebpackError } = compilation.compiler.webpack;\n\n  const rawSource: sources.Source = asset.source;\n  let cachedSource: sources.CachedSource =\n    rawSource instanceof sources.CachedSource ? rawSource : new sources.CachedSource(rawSource);\n\n  const { info: originInfo } = asset;\n  const locale: string = options.noStringsLocaleName;\n\n  if (hasUrlGenerator) {\n    const assetSource: string = cachedSource.source().toString();\n    const parsedAsset: IParseResult = _parseStringToReconstructionSequence(\n      options.plugin,\n      assetSource,\n      formatLocaleForFilenameFn\n    );\n\n    const { issues } = parsedAsset;\n\n    const { issues: localeIssues, result } = _reconstructNonLocalized(\n      new sources.ReplaceSource(cachedSource, locale),\n      parsedAsset.reconstructionSeries,\n      locale\n    );\n\n    for (const issue of localeIssues) {\n      issues.push(issue);\n    }\n\n    if (issues.length > 0) {\n      options.compilation.errors.push(\n        new WebpackError(`localization:\\n${issues.map((issue) => `  ${issue}`).join('\\n')}`)\n      );\n    }\n\n    cachedSource = new sources.CachedSource(result);\n  } else {\n    // Force the CachedSource to cache the concatenated *string*, so that the subsequent ask for the buffer is fast\n    cachedSource.source();\n  }\n\n  const info: AssetInfo = {\n    ...originInfo,\n    locale\n  };\n\n  return {\n    filename: fileName,\n    source: cachedSource,\n    info\n  };\n}\n\nconst ESCAPE_MAP: Map<string, string> = new Map([\n  ['\\r', 'r'],\n  ['\\n', 'n'],\n  ['\\t', 't'],\n  ['\"', 'u0022'],\n  [\"'\", 'u0027']\n]);\n\nconst BACKSLASH_REGEX: RegExp = /\\\\/g;\nconst ESCAPE_REGEX: RegExp = /[\\r\\n\\t\"']/g;\n\nfunction _reconstructLocalized(\n  result: sources.ReplaceSource,\n  reconstructionSeries: IReconstructionElement[],\n  locale: string,\n  fallbackLocale: string | undefined,\n  passthroughLocale: string | undefined\n): ILocalizedReconstructionResult {\n  const issues: string[] = [];\n\n  for (const element of reconstructionSeries) {\n    switch (element.kind) {\n      case 'localized': {\n        const { data } = element;\n        const { stringName, translations } = data;\n        let newValue: string | undefined =\n          locale === passthroughLocale ? stringName : translations.get(locale)?.get(stringName);\n        if (fallbackLocale && newValue === undefined) {\n          newValue = translations.get(fallbackLocale)?.get(stringName);\n        }\n\n        if (newValue === undefined) {\n          issues.push(\n            `The string \"${stringName}\" in \"${data.locFilePath}\" is missing in the locale ${locale}`\n          );\n\n          newValue = '-- MISSING STRING --';\n        }\n\n        const escapedBackslash: string = element.escapedBackslash || '\\\\';\n\n        if (newValue.includes('\\\\')) {\n          // The vast majority of localized strings do not contain `\\\\`, so this check avoids an allocation.\n          // Replace backslashes with the properly escaped backslash\n          BACKSLASH_REGEX.lastIndex = -1;\n          newValue = newValue.replace(BACKSLASH_REGEX, escapedBackslash);\n        }\n\n        // Ensure the the quotemark, apostrophe, tab, and newline characters are properly escaped\n        ESCAPE_REGEX.lastIndex = -1;\n        if (ESCAPE_REGEX.test(newValue)) {\n          // The majority of localized strings do not contain the characters that need to be escaped,\n          // so this check avoids an allocation.\n          // @todo: look into using JSON.parse(...) to get the escaping characters\n          const escapingCharacterSequence: string = escapedBackslash.slice(escapedBackslash.length / 2);\n          newValue = newValue.replace(\n            ESCAPE_REGEX,\n            (match) => `${escapingCharacterSequence}${ESCAPE_MAP.get(match)}`\n          );\n        }\n\n        result.replace(element.start, element.end - 1, newValue);\n        break;\n      }\n\n      case 'dynamic': {\n        const newValue: string = element.valueFn(locale);\n        result.replace(element.start, element.end - 1, newValue);\n        break;\n      }\n    }\n  }\n\n  return {\n    issues,\n    result\n  };\n}\n\nfunction _reconstructNonLocalized(\n  result: sources.ReplaceSource,\n  reconstructionSeries: IReconstructionElement[],\n  noStringsLocaleName: string\n): INonLocalizedReconstructionResult {\n  const issues: string[] = [];\n\n  for (const element of reconstructionSeries) {\n    switch (element.kind) {\n      case 'localized': {\n        issues.push(\n          `The string \"${element.data.stringName}\" in \"${element.data.locFilePath}\" appeared in an asset ` +\n            'that is not expected to contain localized resources.'\n        );\n\n        const newValue: string = '-- NOT EXPECTED TO BE LOCALIZED --';\n        result.replace(element.start, element.end - 1, newValue);\n        break;\n      }\n\n      case 'dynamic': {\n        const newValue: string = element.valueFn(noStringsLocaleName);\n        result.replace(element.start, element.end - 1, newValue);\n        break;\n      }\n    }\n  }\n\n  return {\n    issues,\n    result\n  };\n}\n\nfunction _parseStringToReconstructionSequence(\n  plugin: LocalizationPlugin,\n  source: string,\n  formatLocaleForFilenameFn: FormatLocaleForFilenameFn\n): IParseResult {\n  const issues: string[] = [];\n  const reconstructionSeries: IReconstructionElement[] = [];\n\n  let jsonStringifyFormatLocaleForFilenameFn: FormatLocaleForFilenameFn | undefined;\n\n  let index: number = source.indexOf(Constants.STRING_PLACEHOLDER_PREFIX);\n  const increment: number = Constants.STRING_PLACEHOLDER_PREFIX.length + 1;\n  while (index >= 0) {\n    const start: number = index;\n    const elementStart: number = index + increment;\n    const elementLabel: string = source.charAt(elementStart);\n    let end: number = elementStart + 2;\n\n    switch (elementLabel) {\n      case Constants.STRING_PLACEHOLDER_LABEL: {\n        const backslashEnd: number = source.indexOf('_', end);\n        const escapedBackslash: string = source.slice(end, backslashEnd);\n        end = backslashEnd + 1;\n        const serialEnd: number = source.indexOf('_', end);\n        const serial: string = source.slice(end, serialEnd);\n        end = serialEnd + 1;\n\n        const stringData: IStringPlaceholder | undefined = plugin.getDataForSerialNumber(serial);\n        if (!stringData) {\n          issues.push(`Missing placeholder ${serial}`);\n        } else {\n          const localizedElement: ILocalizedReconstructionElement = {\n            kind: 'localized',\n            start,\n            end,\n            escapedBackslash,\n            data: stringData\n          };\n          reconstructionSeries.push(localizedElement);\n        }\n        break;\n      }\n      case Constants.LOCALE_NAME_PLACEHOLDER_LABEL: {\n        const dynamicElement: IDynamicReconstructionElement = {\n          kind: 'dynamic',\n          start,\n          end,\n          valueFn: formatLocaleForFilenameFn\n        };\n        reconstructionSeries.push(dynamicElement);\n        break;\n      }\n      case Constants.JSONP_PLACEHOLDER_LABEL: {\n        jsonStringifyFormatLocaleForFilenameFn ||= (locale: string) =>\n          JSON.stringify(formatLocaleForFilenameFn(locale));\n        const dynamicElement: IDynamicReconstructionElement = {\n          kind: 'dynamic',\n          start,\n          end,\n          valueFn: jsonStringifyFormatLocaleForFilenameFn\n        };\n        reconstructionSeries.push(dynamicElement);\n        break;\n      }\n      default: {\n        throw new Error(`Unexpected label ${elementLabel} in pattern ${source.slice(start, end)}`);\n      }\n    }\n\n    index = source.indexOf(Constants.STRING_PLACEHOLDER_PREFIX, end);\n  }\n\n  return {\n    issues,\n    reconstructionSeries\n  };\n}\n"]}